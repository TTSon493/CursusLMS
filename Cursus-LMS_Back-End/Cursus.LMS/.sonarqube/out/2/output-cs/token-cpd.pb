Ω˙
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Seeding\ApplicationDbContextSeed.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
Seeding  '
;' (
public 
static 
class $
ApplicationDbContextSeed ,
{		 
public 

static 
void 
SeedEmailTemplate (
(( )
ModelBuilder) 5
modelBuilder6 B
)B C
{ 
modelBuilder 
. 
Entity 
< 
EmailTemplate )
>) *
(* +
)+ ,
., -
HasData- 4
(4 5
new 
{ 
Id 
= 
Guid 
. 
NewGuid !
(! "
)" #
,# $
TemplateName 
= 
$str -
,- .

SenderName 
= 
$str *
,* +
SenderEmail 
= 
$str :
,: ;
Category 
= 
$str $
,$ %
SubjectLine 
= 
$str 2
,2 3
PreHeaderText 
= 
$str  ;
,; <
PersonalizationTags #
=$ %
$str& ?
,? @
BodyContent 
= 
$str |
,| }
FooterContent 
= 
$str  Q
,Q R
CallToAction 
= 
$str Y
,Y Z
Language 
= 
$str $
,$ %
RecipientType   
=   
$str    *
,  * +
CreateBy!! 
=!! 
$str!! #
,!!# $

CreateTime"" 
="" 
DateTime"" %
.""% &
Now""& )
,"") *
UpdateBy## 
=## 
$str## "
,##" #

UpdateTime$$ 
=$$ 
DateTime$$ %
.$$% &
Now$$& )
,$$) *
Status%% 
=%% 
$num%% 
}&& 
,&& 
new'' 
{(( 
Id)) 
=)) 
Guid)) 
.)) 
NewGuid)) !
())! "
)))" #
,))# $
TemplateName** 
=** 
$str** 4
,**4 5

SenderName++ 
=++ 
$str++ *
,++* +
SenderEmail,, 
=,, 
$str,, :
,,,: ;
Category-- 
=-- 
$str-- %
,--% &
SubjectLine.. 
=.. 
$str.. 3
,..3 4
PreHeaderText// 
=// 
$str//  F
,//F G
PersonalizationTags00 #
=00$ %
$str00& K
,00K L
BodyContent11 
=11 
$str	22 ä
,
22ä ã
FooterContent33 
=33 
$str33  d
,33d e
CallToAction44 
=44 
$"55 
$str55 q
"55q r
,55r s
Language66 
=66 
$str66 $
,66$ %
RecipientType77 
=77 
$str77  *
,77* +
CreateBy88 
=88 
$str88 #
,88# $

CreateTime99 
=99 
DateTime99 %
.99% &
Now99& )
,99) *
UpdateBy:: 
=:: 
$str:: "
,::" #

UpdateTime;; 
=;; 
DateTime;; %
.;;% &
Now;;& )
,;;) *
Status<< 
=<< 
$num<< 
}== 
,== 
new>> 
{?? 
Id@@ 
=@@ 
Guid@@ 
.@@ 
NewGuid@@ !
(@@! "
)@@" #
,@@# $
TemplateNameAA 
=AA 
$strAA 0
,AA0 1

SenderNameBB 
=BB 
$strBB *
,BB* +
SenderEmailCC 
=CC 
$strCC :
,CC: ;
CategoryDD 
=DD 
$strDD #
,DD# $
SubjectLineEE 
=EE 
$strEE 3
,EE3 4
PreHeaderTextFF 
=FF 
$strFF  8
,FF8 9
PersonalizationTagsGG #
=GG$ %
$strGG& @
,GG@ A
BodyContentHH 
=HH 
$strHH t
,HHt u
FooterContentII 
=II 
$strII  Q
,IIQ R
CallToActionJJ 
=JJ 
$strJJ D
,JJD E
LanguageKK 
=KK 
$strKK $
,KK$ %
RecipientTypeLL 
=LL 
$strLL  *
,LL* +
CreateByMM 
=MM 
$strMM #
,MM# $

CreateTimeNN 
=NN 
DateTimeNN %
.NN% &
NowNN& )
,NN) *
UpdateByOO 
=OO 
$strOO "
,OO" #

UpdateTimePP 
=PP 
DateTimePP %
.PP% &
NowPP& )
,PP) *
StatusQQ 
=QQ 
$numQQ 
}RR 
,RR 
newSS 
{TT 
IdUU 
=UU 
GuidUU 
.UU 
NewGuidUU !
(UU! "
)UU" #
,UU# $
TemplateNameVV 
=VV 
$strVV ?
,VV? @

SenderNameWW 
=WW 
$strWW *
,WW* +
SenderEmailXX 
=XX 
$strXX :
,XX: ;
CategoryYY 
=YY 
$strYY %
,YY% &
SubjectLineZZ 
=ZZ 
$strZZ K
,ZZK L
PreHeaderText[[ 
=[[ 
$str[[  M
,[[M N
PersonalizationTags\\ #
=\\$ %
$str\\& ?
,\\? @
BodyContent]] 
=]] 
$str]] I
,]]I J
FooterContent^^ 
=^^ 
$str^^  f
,^^f g
CallToAction__ 
=__ 
$"`` 
$str	`` ∫
"
``∫ ª
,
``ª º
Languageaa 
=aa 
$straa $
,aa$ %
RecipientTypebb 
=bb 
$strbb  ,
,bb, -
CreateBycc 
=cc 
$strcc #
,cc# $

CreateTimedd 
=dd 
DateTimedd %
.dd% &
Nowdd& )
,dd) *
UpdateByee 
=ee 
$stree "
,ee" #

UpdateTimeff 
=ff 
DateTimeff %
.ff% &
Nowff& )
,ff) *
Statusgg 
=gg 
$numgg 
}hh 
,hh 
newii 
{jj 
Idkk 
=kk 
Guidkk 
.kk 
NewGuidkk !
(kk! "
)kk" #
,kk# $
TemplateNamell 
=ll 
$strll /
,ll/ 0

SenderNamemm 
=mm 
$strmm *
,mm* +
SenderEmailnn 
=nn 
$strnn :
,nn: ;
Categoryoo 
=oo 
$stroo %
,oo% &
SubjectLinepp 
=pp 
$strpp 3
,pp3 4
PreHeaderTextqq 
=qq 
$strqq  G
,qqG H
PersonalizationTagsrr #
=rr$ %
$strrr& @
,rr@ A
BodyContentss 
=ss 
$strtt t
,ttt u
FooterContentuu 
=uu 
$struu  Q
,uuQ R
CallToActionvv 
=vv 
$strvv M
,vvM N
Languageww 
=ww 
$strww $
,ww$ %
RecipientTypexx 
=xx 
$strxx  *
,xx* +
CreateByyy 
=yy 
$stryy #
,yy# $

CreateTimezz 
=zz 
DateTimezz %
.zz% &
Nowzz& )
,zz) *
UpdateBy{{ 
={{ 
$str{{ "
,{{" #

UpdateTime|| 
=|| 
DateTime|| %
.||% &
Now||& )
,||) *
Status}} 
=}} 
$num}} 
}~~ 
,~~ 
new 
{
ÄÄ 
Id
ÅÅ 
=
ÅÅ 
Guid
ÅÅ 
.
ÅÅ 
NewGuid
ÅÅ !
(
ÅÅ! "
)
ÅÅ" #
,
ÅÅ# $
TemplateName
ÇÇ 
=
ÇÇ 
$str
ÇÇ 4
,
ÇÇ4 5

SenderName
ÉÉ 
=
ÉÉ 
$str
ÉÉ )
,
ÉÉ) *
SenderEmail
ÑÑ 
=
ÑÑ 
$str
ÑÑ 4
,
ÑÑ4 5
Category
ÖÖ 
=
ÖÖ 
$str
ÖÖ )
,
ÖÖ) *
SubjectLine
ÜÜ 
=
ÜÜ 
$str
ÜÜ /
,
ÜÜ/ 0
PreHeaderText
áá 
=
áá 
$str
áá  0
,
áá0 1!
PersonalizationTags
àà #
=
àà$ %
$str
àà& 2
,
àà2 3
BodyContent
ââ 
=
ââ 
$str
ââ e
,
ââe f
FooterContent
ää 
=
ää 
$str
ää  Q
,
ääQ R
CallToAction
ãã 
=
ãã 
$str
ãã H
,
ããH I
Language
åå 
=
åå 
$str
åå $
,
åå$ %
RecipientType
çç 
=
çç 
$str
çç  *
,
çç* +
CreateBy
éé 
=
éé 
$str
éé #
,
éé# $

CreateTime
èè 
=
èè 
DateTime
èè %
.
èè% &
Now
èè& )
,
èè) *
UpdateBy
êê 
=
êê 
$str
êê "
,
êê" #

UpdateTime
ëë 
=
ëë 
DateTime
ëë %
.
ëë% &
Now
ëë& )
,
ëë) *
Status
íí 
=
íí 
$num
íí 
}
ìì 
,
ìì 
new
îî 
{
ïï 
Id
ññ 
=
ññ 
Guid
ññ 
.
ññ 
NewGuid
ññ !
(
ññ! "
)
ññ" #
,
ññ# $
TemplateName
óó 
=
óó 
$str
óó C
,
óóC D

SenderName
òò 
=
òò 
$str
òò *
,
òò* +
SenderEmail
ôô 
=
ôô 
$str
ôô :
,
ôô: ;
Category
öö 
=
öö 
$str
öö -
,
öö- .
SubjectLine
õõ 
=
õõ 
$str
õõ <
,
õõ< =
PreHeaderText
úú 
=
úú 
$str
úú  >
,
úú> ?!
PersonalizationTags
ùù #
=
ùù$ %
$str
ùù& ?
,
ùù? @
BodyContent
ûû 
=
ûû 
$str
ûû g
,
ûûg h
FooterContent
üü 
=
üü 
$str
üü  Q
,
üüQ R
CallToAction
†† 
=
†† 
$str
†† Y
,
††Y Z
Language
°° 
=
°° 
$str
°° $
,
°°$ %
RecipientType
¢¢ 
=
¢¢ 
$str
¢¢  '
,
¢¢' (
CreateBy
££ 
=
££ 
$str
££ #
,
££# $

CreateTime
§§ 
=
§§ 
DateTime
§§ %
.
§§% &
Now
§§& )
,
§§) *
UpdateBy
•• 
=
•• 
$str
•• "
,
••" #

UpdateTime
¶¶ 
=
¶¶ 
DateTime
¶¶ %
.
¶¶% &
Now
¶¶& )
,
¶¶) *
Status
ßß 
=
ßß 
$num
ßß 
}
®® 
,
®® 
new
©© 
{
™™ 
Id
´´ 
=
´´ 
Guid
´´ 
.
´´ 
NewGuid
´´ !
(
´´! "
)
´´" #
,
´´# $
TemplateName
¨¨ 
=
¨¨ 
$str
¨¨ 8
,
¨¨8 9

SenderName
≠≠ 
=
≠≠ 
$str
≠≠ *
,
≠≠* +
SenderEmail
ÆÆ 
=
ÆÆ 
$str
ÆÆ :
,
ÆÆ: ;
Category
ØØ 
=
ØØ 
$str
ØØ 2
,
ØØ2 3
SubjectLine
∞∞ 
=
∞∞ 
$str
∞∞ >
,
∞∞> ?
PreHeaderText
±± 
=
±± 
$str
±±  B
,
±±B C!
PersonalizationTags
≤≤ #
=
≤≤$ %
$str
≤≤& ?
,
≤≤? @
BodyContent
≥≥ 
=
≥≥ 
$str
≥≥ e
,
≥≥e f
FooterContent
¥¥ 
=
¥¥ 
$str
¥¥  Q
,
¥¥Q R
CallToAction
µµ 
=
µµ 
$str
µµ Y
,
µµY Z
Language
∂∂ 
=
∂∂ 
$str
∂∂ $
,
∂∂$ %
RecipientType
∑∑ 
=
∑∑ 
$str
∑∑  ,
,
∑∑, -
CreateBy
∏∏ 
=
∏∏ 
$str
∏∏ #
,
∏∏# $

CreateTime
ππ 
=
ππ 
DateTime
ππ %
.
ππ% &
Now
ππ& )
,
ππ) *
UpdateBy
∫∫ 
=
∫∫ 
$str
∫∫ "
,
∫∫" #

UpdateTime
ªª 
=
ªª 
DateTime
ªª %
.
ªª% &
Now
ªª& )
,
ªª) *
Status
ºº 
=
ºº 
$num
ºº 
}
ΩΩ 
,
ΩΩ 
new
ææ 
{
øø 
Id
¿¿ 
=
¿¿ 
Guid
¿¿ 
.
¿¿ 
NewGuid
¿¿ !
(
¿¿! "
)
¿¿" #
,
¿¿# $
TemplateName
¡¡ 
=
¡¡ 
$str
¡¡ 7
,
¡¡7 8

SenderName
¬¬ 
=
¬¬ 
$str
¬¬ *
,
¬¬* +
SenderEmail
√√ 
=
√√ 
$str
√√ :
,
√√: ;
Category
ƒƒ 
=
ƒƒ 
$str
ƒƒ 2
,
ƒƒ2 3
SubjectLine
≈≈ 
=
≈≈ 
$str
≈≈ >
,
≈≈> ?
PreHeaderText
∆∆ 
=
∆∆ 
$str
∆∆  F
,
∆∆F G!
PersonalizationTags
«« #
=
««$ %
$str
««& ?
,
««? @
BodyContent
»» 
=
»» 
$str
»» e
,
»»e f
FooterContent
…… 
=
…… 
$str
……  Q
,
……Q R
CallToAction
   
=
   
$str
   Y
,
  Y Z
Language
ÀÀ 
=
ÀÀ 
$str
ÀÀ $
,
ÀÀ$ %
RecipientType
ÃÃ 
=
ÃÃ 
$str
ÃÃ  )
,
ÃÃ) *
CreateBy
ÕÕ 
=
ÕÕ 
$str
ÕÕ #
,
ÕÕ# $

CreateTime
ŒŒ 
=
ŒŒ 
DateTime
ŒŒ %
.
ŒŒ% &
Now
ŒŒ& )
,
ŒŒ) *
UpdateBy
œœ 
=
œœ 
$str
œœ "
,
œœ" #

UpdateTime
–– 
=
–– 
DateTime
–– %
.
––% &
Now
––& )
,
––) *
Status
—— 
=
—— 
$num
—— 
}
““ 
,
““ 
new
”” 
{
‘‘ 
Id
’’ 
=
’’ 
Guid
’’ 
.
’’ 
NewGuid
’’ !
(
’’! "
)
’’" #
,
’’# $
TemplateName
÷÷ 
=
÷÷ 
$str
÷÷ 4
,
÷÷4 5

SenderName
◊◊ 
=
◊◊ 
$str
◊◊ *
,
◊◊* +
SenderEmail
ÿÿ 
=
ÿÿ 
$str
ÿÿ :
,
ÿÿ: ;
Category
ŸŸ 
=
ŸŸ 
$str
ŸŸ +
,
ŸŸ+ ,
SubjectLine
⁄⁄ 
=
⁄⁄ 
$str
⁄⁄ 6
,
⁄⁄6 7
PreHeaderText
€€ 
=
€€ 
$str
€€  (
,
€€( )!
PersonalizationTags
‹‹ #
=
‹‹$ %
$str
‹‹& ?
,
‹‹? @
BodyContent
›› 
=
›› 
$strﬁﬁ ò
,ﬁﬁò ô
FooterContent
ﬂﬂ 
=
ﬂﬂ 
$str
ﬂﬂ  Q
,
ﬂﬂQ R
CallToAction
‡‡ 
=
‡‡ 
$str
‡‡ Y
,
‡‡Y Z
Language
·· 
=
·· 
$str
·· $
,
··$ %
RecipientType
‚‚ 
=
‚‚ 
$str
‚‚  *
,
‚‚* +
CreateBy
„„ 
=
„„ 
$str
„„ #
,
„„# $

CreateTime
‰‰ 
=
‰‰ 
DateTime
‰‰ %
.
‰‰% &
Now
‰‰& )
,
‰‰) *
UpdateBy
ÂÂ 
=
ÂÂ 
$str
ÂÂ "
,
ÂÂ" #

UpdateTime
ÊÊ 
=
ÊÊ 
DateTime
ÊÊ %
.
ÊÊ% &
Now
ÊÊ& )
,
ÊÊ) *
Status
ÁÁ 
=
ÁÁ 
$num
ÁÁ 
}
ËË 
,
ËË 
new
ÈÈ 
{
ÍÍ 
Id
ÎÎ 
=
ÎÎ 
Guid
ÎÎ 
.
ÎÎ 
NewGuid
ÎÎ !
(
ÎÎ! "
)
ÎÎ" #
,
ÎÎ# $
TemplateName
ÏÏ 
=
ÏÏ 
$str
ÏÏ 6
,
ÏÏ6 7

SenderName
ÌÌ 
=
ÌÌ 
$str
ÌÌ *
,
ÌÌ* +
SenderEmail
ÓÓ 
=
ÓÓ 
$str
ÓÓ :
,
ÓÓ: ;
Category
ÔÔ 
=
ÔÔ 
$str
ÔÔ -
,
ÔÔ- .
SubjectLine
 
=
 
$str
 I
,
I J
PreHeaderText
ÒÒ 
=
ÒÒ 
$str
ÒÒ  (
,
ÒÒ( )!
PersonalizationTags
ÚÚ #
=
ÚÚ$ %
$str
ÚÚ& ?
,
ÚÚ? @
BodyContent
ÛÛ 
=
ÛÛ 
$str
ÙÙ ]
,
ÙÙ] ^
FooterContent
ıı 
=
ıı 
$str
ıı  Q
,
ııQ R
CallToAction
ˆˆ 
=
ˆˆ 
$str
ˆˆ Y
,
ˆˆY Z
Language
˜˜ 
=
˜˜ 
$str
˜˜ $
,
˜˜$ %
RecipientType
¯¯ 
=
¯¯ 
$str
¯¯  *
,
¯¯* +
CreateBy
˘˘ 
=
˘˘ 
$str
˘˘ #
,
˘˘# $

CreateTime
˙˙ 
=
˙˙ 
DateTime
˙˙ %
.
˙˙% &
Now
˙˙& )
,
˙˙) *
UpdateBy
˚˚ 
=
˚˚ 
$str
˚˚ "
,
˚˚" #

UpdateTime
¸¸ 
=
¸¸ 
DateTime
¸¸ %
.
¸¸% &
Now
¸¸& )
,
¸¸) *
Status
˝˝ 
=
˝˝ 
$num
˝˝ 
}
˛˛ 
,
˛˛ 
new
ˇˇ 
{
ÄÄ 
Id
ÅÅ 
=
ÅÅ 
Guid
ÅÅ 
.
ÅÅ 
NewGuid
ÅÅ !
(
ÅÅ! "
)
ÅÅ" #
,
ÅÅ# $
TemplateName
ÇÇ 
=
ÇÇ 
$str
ÇÇ .
,
ÇÇ. /

SenderName
ÉÉ 
=
ÉÉ 
$str
ÉÉ *
,
ÉÉ* +
SenderEmail
ÑÑ 
=
ÑÑ 
$str
ÑÑ :
,
ÑÑ: ;
Category
ÖÖ 
=
ÖÖ 
$str
ÖÖ +
,
ÖÖ+ ,
SubjectLine
ÜÜ 
=
ÜÜ 
$str
ÜÜ /
,
ÜÜ/ 0
PreHeaderText
áá 
=
áá 
$str
áá  (
,
áá( )!
PersonalizationTags
àà #
=
àà$ %
$str
àà& ?
,
àà? @
BodyContent
ââ 
=
ââ 
$str
ää P
,
ääP Q
FooterContent
ãã 
=
ãã 
$str
ãã  Q
,
ããQ R
CallToAction
åå 
=
åå 
$str
åå Y
,
ååY Z
Language
çç 
=
çç 
$str
çç $
,
çç$ %
RecipientType
éé 
=
éé 
$str
éé  *
,
éé* +
CreateBy
èè 
=
èè 
$str
èè #
,
èè# $

CreateTime
êê 
=
êê 
DateTime
êê %
.
êê% &
Now
êê& )
,
êê) *
UpdateBy
ëë 
=
ëë 
$str
ëë "
,
ëë" #

UpdateTime
íí 
=
íí 
DateTime
íí %
.
íí% &
Now
íí& )
,
íí) *
Status
ìì 
=
ìì 
$num
ìì 
}
îî 
,
îî 
new
ïï 
{
ññ 
Id
óó 
=
óó 
Guid
óó 
.
óó 
NewGuid
óó !
(
óó! "
)
óó" #
,
óó# $
TemplateName
òò 
=
òò 
$str
òò @
,
òò@ A

SenderName
ôô 
=
ôô 
$str
ôô *
,
ôô* +
SenderEmail
öö 
=
öö 
$str
öö :
,
öö: ;
Category
õõ 
=
õõ 
$str
õõ #
,
õõ# $
SubjectLine
úú 
=
úú 
$str
úú ?
,
úú? @
PreHeaderText
ùù 
=
ùù 
$str
ùù  4
,
ùù4 5!
PersonalizationTags
ûû #
=
ûû$ %
$str
ûû& b
,
ûûb c
BodyContent
üü 
=
üü 
$str
†≠ 
,
≠≠ 
FooterContent
ÆÆ 
=
ÆÆ 
$str
ÆÆ  Q
,
ÆÆQ R
CallToAction
ØØ 
=
ØØ 
$str
ØØ Y
,
ØØY Z
Language
∞∞ 
=
∞∞ 
$str
∞∞ $
,
∞∞$ %
RecipientType
±± 
=
±± 
$str
±±  *
,
±±* +
CreateBy
≤≤ 
=
≤≤ 
$str
≤≤ #
,
≤≤# $

CreateTime
≥≥ 
=
≥≥ 
DateTime
≥≥ %
.
≥≥% &
Now
≥≥& )
,
≥≥) *
UpdateBy
¥¥ 
=
¥¥ 
$str
¥¥ "
,
¥¥" #

UpdateTime
µµ 
=
µµ 
DateTime
µµ %
.
µµ% &
Now
µµ& )
,
µµ) *
Status
∂∂ 
=
∂∂ 
$num
∂∂ 
}
∑∑ 
)
∏∏ 	
;
∏∏	 

}
ππ 
public
øø 

static
øø 
void
øø 
SeedAdminAccount
øø '
(
øø' (
ModelBuilder
øø( 4
modelBuilder
øø5 A
)
øøA B
{
¿¿ 
var
¡¡ 
studentRoleId
¡¡ 
=
¡¡ 
$str
¡¡ B
;
¡¡B C
var
¬¬ 
instructorRoleId
¬¬ 
=
¬¬ 
$str
¬¬ E
;
¬¬E F
var
√√ 
adminRoleId
√√ 
=
√√ 
$str
√√ @
;
√√@ A
var
≈≈ 
roles
≈≈ 
=
≈≈ 
new
≈≈ 
List
≈≈ 
<
≈≈ 
IdentityRole
≈≈ )
>
≈≈) *
{
∆∆ 	
new
«« 
IdentityRole
«« 
{
»» 
Id
…… 
=
…… 
studentRoleId
…… "
,
……" #
ConcurrencyStamp
    
=
  ! "
StaticUserRoles
  # 2
.
  2 3
Student
  3 :
,
  : ;
Name
ÀÀ 
=
ÀÀ 
StaticUserRoles
ÀÀ &
.
ÀÀ& '
Student
ÀÀ' .
,
ÀÀ. /
NormalizedName
ÃÃ 
=
ÃÃ  
StaticUserRoles
ÃÃ! 0
.
ÃÃ0 1
Student
ÃÃ1 8
,
ÃÃ8 9
}
ÕÕ 
,
ÕÕ 
new
ŒŒ 
IdentityRole
ŒŒ 
{
œœ 
Id
–– 
=
–– 
instructorRoleId
–– %
,
––% &
ConcurrencyStamp
——  
=
——! "
StaticUserRoles
——# 2
.
——2 3

Instructor
——3 =
,
——= >
Name
““ 
=
““ 
StaticUserRoles
““ &
.
““& '

Instructor
““' 1
,
““1 2
NormalizedName
”” 
=
””  
StaticUserRoles
””! 0
.
””0 1

Instructor
””1 ;
,
””; <
}
‘‘ 
,
‘‘ 
new
’’ 
IdentityRole
’’ 
{
÷÷ 
Id
◊◊ 
=
◊◊ 
adminRoleId
◊◊  
,
◊◊  !
ConcurrencyStamp
ÿÿ  
=
ÿÿ! "
StaticUserRoles
ÿÿ# 2
.
ÿÿ2 3
Admin
ÿÿ3 8
,
ÿÿ8 9
Name
ŸŸ 
=
ŸŸ 
StaticUserRoles
ŸŸ &
.
ŸŸ& '
Admin
ŸŸ' ,
,
ŸŸ, -
NormalizedName
⁄⁄ 
=
⁄⁄  
StaticUserRoles
⁄⁄! 0
.
⁄⁄0 1
Admin
⁄⁄1 6
,
⁄⁄6 7
}
€€ 
}
‹‹ 	
;
‹‹	 

modelBuilder
ﬁﬁ 
.
ﬁﬁ 
Entity
ﬁﬁ 
<
ﬁﬁ 
IdentityRole
ﬁﬁ (
>
ﬁﬁ( )
(
ﬁﬁ) *
)
ﬁﬁ* +
.
ﬁﬁ+ ,
HasData
ﬁﬁ, 3
(
ﬁﬁ3 4
roles
ﬁﬁ4 9
)
ﬁﬁ9 :
;
ﬁﬁ: ;
var
·· 
adminUserId
·· 
=
·· 
$str
·· +
;
··+ ,
var
‚‚ 
hasher
‚‚ 
=
‚‚ 
new
‚‚ 
PasswordHasher
‚‚ '
<
‚‚' (
ApplicationUser
‚‚( 7
>
‚‚7 8
(
‚‚8 9
)
‚‚9 :
;
‚‚: ;
var
„„ 
	adminUser
„„ 
=
„„ 
new
„„ 
ApplicationUser
„„ +
{
‰‰ 	
Id
ÂÂ 
=
ÂÂ 
adminUserId
ÂÂ 
,
ÂÂ 
Gender
ÊÊ 
=
ÊÊ 
$str
ÊÊ 
,
ÊÊ 
FullName
ÁÁ 
=
ÁÁ 
$str
ÁÁ #
,
ÁÁ# $
	BirthDate
ËË 
=
ËË 
new
ËË 
DateTime
ËË $
(
ËË$ %
$num
ËË% )
,
ËË) *
$num
ËË+ ,
,
ËË, -
$num
ËË. /
)
ËË/ 0
,
ËË0 1
	AvatarUrl
ÈÈ 
=
ÈÈ 
$str
ÈÈ 8
,
ÈÈ8 9
Country
ÍÍ 
=
ÍÍ 
$str
ÍÍ 
,
ÍÍ  
Address
ÎÎ 
=
ÎÎ 
$str
ÎÎ $
,
ÎÎ$ %
	TaxNumber
ÏÏ 
=
ÏÏ 
$str
ÏÏ #
,
ÏÏ# $
UserName
ÌÌ 
=
ÌÌ 
$str
ÌÌ (
,
ÌÌ( ) 
NormalizedUserName
ÓÓ 
=
ÓÓ  
$str
ÓÓ! 2
,
ÓÓ2 3
Email
ÔÔ 
=
ÔÔ 
$str
ÔÔ %
,
ÔÔ% &
NormalizedEmail
 
=
 
$str
 /
,
/ 0
EmailConfirmed
ÒÒ 
=
ÒÒ 
true
ÒÒ !
,
ÒÒ! "
PasswordHash
ÚÚ 
=
ÚÚ 
hasher
ÚÚ !
.
ÚÚ! "
HashPassword
ÚÚ" .
(
ÚÚ. /
null
ÚÚ/ 3
,
ÚÚ3 4
$str
ÚÚ5 @
)
ÚÚ@ A
,
ÚÚA B
SecurityStamp
ÛÛ 
=
ÛÛ 
Guid
ÛÛ  
.
ÛÛ  !
NewGuid
ÛÛ! (
(
ÛÛ( )
)
ÛÛ) *
.
ÛÛ* +
ToString
ÛÛ+ 3
(
ÛÛ3 4
)
ÛÛ4 5
,
ÛÛ5 6
ConcurrencyStamp
ÙÙ 
=
ÙÙ 
Guid
ÙÙ #
.
ÙÙ# $
NewGuid
ÙÙ$ +
(
ÙÙ+ ,
)
ÙÙ, -
.
ÙÙ- .
ToString
ÙÙ. 6
(
ÙÙ6 7
)
ÙÙ7 8
,
ÙÙ8 9
PhoneNumber
ıı 
=
ıı 
$str
ıı &
,
ıı& '"
PhoneNumberConfirmed
ˆˆ  
=
ˆˆ! "
true
ˆˆ# '
,
ˆˆ' (
TwoFactorEnabled
˜˜ 
=
˜˜ 
false
˜˜ $
,
˜˜$ %

LockoutEnd
¯¯ 
=
¯¯ 
null
¯¯ 
,
¯¯ 
LockoutEnabled
˘˘ 
=
˘˘ 
true
˘˘ !
,
˘˘! "
AccessFailedCount
˙˙ 
=
˙˙ 
$num
˙˙  !
,
˙˙! "

UpdateTime
˚˚ 
=
˚˚ 
new
˚˚ 
DateTime
˚˚ %
(
˚˚% &
$num
˚˚& *
,
˚˚* +
$num
˚˚, -
,
˚˚- .
$num
˚˚/ 1
)
˚˚1 2
}
¸¸ 	
;
¸¸	 

modelBuilder
˛˛ 
.
˛˛ 
Entity
˛˛ 
<
˛˛ 
ApplicationUser
˛˛ +
>
˛˛+ ,
(
˛˛, -
)
˛˛- .
.
˛˛. /
HasData
˛˛/ 6
(
˛˛6 7
	adminUser
˛˛7 @
)
˛˛@ A
;
˛˛A B
modelBuilder
ÅÅ 
.
ÅÅ 
Entity
ÅÅ 
<
ÅÅ 
IdentityUserRole
ÅÅ ,
<
ÅÅ, -
string
ÅÅ- 3
>
ÅÅ3 4
>
ÅÅ4 5
(
ÅÅ5 6
)
ÅÅ6 7
.
ÅÅ7 8
HasData
ÅÅ8 ?
(
ÅÅ? @
new
ÅÅ@ C
IdentityUserRole
ÅÅD T
<
ÅÅT U
string
ÅÅU [
>
ÅÅ[ \
{
ÇÇ 	
RoleId
ÉÉ 
=
ÉÉ 
adminRoleId
ÉÉ  
,
ÉÉ  !
UserId
ÑÑ 
=
ÑÑ 
adminUserId
ÑÑ  
}
ÖÖ 	
)
ÖÖ	 

;
ÖÖ
 
}
ÜÜ 
public
àà 

static
àà 
void
àà 
SeedCompany
àà "
(
àà" #
ModelBuilder
àà# /
modelBuilder
àà0 <
)
àà< =
{
ââ 
modelBuilder
ää 
.
ää 
Entity
ää 
<
ää 
Company
ää #
>
ää# $
(
ää$ %
)
ää% &
.
ää& '
HasData
ää' .
(
ää. /
new
ãã 
Company
ãã 
{
åå 
Id
çç 
=
çç 
Guid
çç 
.
çç 
NewGuid
çç !
(
çç! "
)
çç" #
,
çç# $
Name
éé 
=
éé 
$str
éé !
,
éé! "
Address
èè 
=
èè 
$str
èè '
,
èè' (
City
êê 
=
êê 
$str
êê !
,
êê! "
State
ëë 
=
ëë 
$str
ëë 
,
ëë  
Country
íí 
=
íí 
$str
íí #
,
íí# $

PostalCode
ìì 
=
ìì 
$str
ìì $
,
ìì$ %
Phone
îî 
=
îî 
$str
îî &
,
îî& '
Email
ïï 
=
ïï 
$str
ïï -
,
ïï- .
Website
ññ 
=
ññ 
$str
ññ 2
,
ññ2 3
FoundedDate
óó 
=
óó 
new
óó !
DateTime
óó" *
(
óó* +
$num
óó+ /
,
óó/ 0
$num
óó1 2
,
óó2 3
$num
óó4 5
)
óó5 6
,
óó6 7
LogoUrl
òò 
=
òò 
$str
òò ;
,
òò; <
Description
ôô 
=
ôô 
$str
ôô N
}
öö 
)
õõ 	
;
õõ	 

}
úú 
public
ûû 

static
ûû 
void
ûû 
SeedPrivacy
ûû "
(
ûû" #
ModelBuilder
ûû# /
modelBuilder
ûû0 <
)
ûû< =
{
üü 
modelBuilder
†† 
.
†† 
Entity
†† 
<
†† 
Privacy
†† #
>
††# $
(
††$ %
)
††% &
.
††& '
HasData
††' .
(
††. /
new
°° 
Privacy
°° 
(
°° 
)
°° 
{
¢¢ 
Id
££ 
=
££ 
Guid
££ 
.
££ 
NewGuid
££ !
(
££! "
)
££" #
,
££# $
Title
§§ 
=
§§ 
$str
§§ !
,
§§! "
Content
•• 
=
•• 
$str
•• B
,
••B C
LastUpdated
¶¶ 
=
¶¶ 
DateTime
¶¶ &
.
¶¶& '
UtcNow
¶¶' -
,
¶¶- .
IsActive
ßß 
=
ßß 
true
ßß 
}
®® 
)
©© 	
;
©©	 

}
™™ 
public
¨¨ 

static
¨¨ 
void
¨¨ 
SeedTermOfUse
¨¨ $
(
¨¨$ %
ModelBuilder
¨¨% 1
modelBuilder
¨¨2 >
)
¨¨> ?
{
≠≠ 
modelBuilder
ÆÆ 
.
ÆÆ 
Entity
ÆÆ 
<
ÆÆ 
	TermOfUse
ÆÆ %
>
ÆÆ% &
(
ÆÆ& '
)
ÆÆ' (
.
ÆÆ( )
HasData
ÆÆ) 0
(
ÆÆ0 1
new
ØØ 
	TermOfUse
ØØ 
{
∞∞ 
Id
±± 
=
±± 
Guid
±± 
.
±± 
NewGuid
±± !
(
±±! "
)
±±" #
,
±±# $
Title
≤≤ 
=
≤≤ 
$str
≤≤ &
,
≤≤& '
Content
≥≥ 
=
≥≥ 
$str
≥≥ G
,
≥≥G H
LastUpdated
¥¥ 
=
¥¥ 
DateTime
¥¥ &
.
¥¥& '
UtcNow
¥¥' -
,
¥¥- .
IsActive
µµ 
=
µµ 
true
µµ 
}
∂∂ 
)
∑∑ 	
;
∑∑	 

}
∏∏ 
}ππ ﬂ'
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\UserManagerRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
{ 
public 

class !
UserManagerRepository &
:' ("
IUserManagerRepository) ?
{ 
private 
readonly 
UserManager $
<$ %
ApplicationUser% 4
>4 5
_userManager6 B
;B C
public !
UserManagerRepository $
($ %
UserManager% 0
<0 1
ApplicationUser1 @
>@ A
userManagerB M
)M N
{ 	
_userManager 
= 
userManager &
;& '
} 	
public 
async 
Task 
< 
ApplicationUser )
>) *
FindByEmailAsync+ ;
(; <
string< B
emailC H
)H I
{ 	
return 
await 
_userManager %
.% &
FindByEmailAsync& 6
(6 7
email7 <
)< =
;= >
} 	
public 
async 
Task 
< 
bool 
> )
CheckIfPhoneNumberExistsAsync  =
(= >
string> D
phoneNumberE P
)P Q
{ 	
return 
await 
_userManager %
.% &
Users& +
.+ ,
AnyAsync, 4
(4 5
u5 6
=>7 9
u: ;
.; <
PhoneNumber< G
==H J
phoneNumberK V
)V W
;W X
} 	
public   
async   
Task   
<   
IdentityResult   (
>  ( )
CreateAsync  * 5
(  5 6
ApplicationUser  6 E
user  F J
,  J K
string  L R
password  S [
)  [ \
{!! 	
return"" 
await"" 
_userManager"" %
.""% &
CreateAsync""& 1
(""1 2
user""2 6
,""6 7
password""8 @
)""@ A
;""A B
}## 	
public%% 
async%% 
Task%% 
<%% 
IdentityResult%% (
>%%( )
AddToRoleAsync%%* 8
(%%8 9
ApplicationUser%%9 H
user%%I M
,%%M N
string%%O U
role%%V Z
)%%Z [
{&& 	
return'' 
await'' 
_userManager'' %
.''% &
AddToRoleAsync''& 4
(''4 5
user''5 9
,''9 :
role''; ?
)''? @
;''@ A
}(( 	
public** 
async** 
Task** 
<** 
ApplicationUser** )
>**) *
FindByIdAsync**+ 8
(**8 9
string**9 ?
userId**@ F
)**F G
{++ 	
return,, 
await,, 
_userManager,, %
.,,% &
FindByIdAsync,,& 3
(,,3 4
userId,,4 :
),,: ;
;,,; <
}-- 	
public.. 
async.. 
Task.. 
<.. 
ApplicationUser.. )
>..) *
FindByPhoneAsync..+ ;
(..; <
string..< B
phoneNumber..C N
)..N O
{// 	
return00 
await00 
_userManager00 %
.00% &
Users00& +
.00+ ,
FirstOrDefaultAsync00, ?
(00? @
u00@ A
=>00B D
u00E F
.00F G
PhoneNumber00G R
==00S U
phoneNumber00V a
)00a b
;00b c
}11 	
public33 
Task33 
<33 
List33 
<33 
ApplicationUser33 (
>33( )
>33) *
GetInstructorUser33+ <
(33< =
)33= >
{44 	
throw55 
new55 #
NotImplementedException55 -
(55- .
)55. /
;55/ 0
}66 	
public88 
Task88 
<88 
List88 
<88 
ApplicationUser88 (
>88( )
>88) *
GetStudentUser88+ 9
(889 :
)88: ;
{99 	
throw:: 
new:: #
NotImplementedException:: -
(::- .
)::. /
;::/ 0
};; 	
public== 
async== 
Task== 
<== 
IEnumerable== %
<==% &
ApplicationUser==& 5
>==5 6
>==6 7
GetUsersInRoleAsync==8 K
(==K L
string==L R
role==S W
)==W X
{>> 	
return?? 
await?? 
_userManager?? %
.??% &
GetUsersInRoleAsync??& 9
(??9 :
role??: >
)??> ?
;??? @
}@@ 	
}AA 
}BB ÊY
iD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\UnitOfWork.cs
	namespace		 	
Cursus		
 
.		 
LMS		 
.		 

DataAccess		 
.		  

Repository		  *
{

 
public 

class 

UnitOfWork 
: 
IUnitOfWork )
{ 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public 
IStudentRepository !
StudentRepository" 3
{4 5
get6 9
;9 :
set; >
;> ?
}@ A
public !
IInstructorRepository $ 
InstructorRepository% 9
{: ;
get< ?
;? @
setA D
;D E
}F G
public 
ICategoryRepository "
CategoryRepository# 5
{6 7
get8 ;
;; <
}= >
public $
IEmailTemplateRepository '#
EmailTemplateRepository( ?
{@ A
getB E
;E F
}G H
public "
IUserManagerRepository %!
UserManagerRepository& ;
{< =
get> A
;A B
}C D
public (
IInstructorCommentRepository +'
InstructorCommentRepository, G
{H I
getJ M
;M N
}O P
public 
ICourseRepository  
CourseRepository! 1
{2 3
get4 7
;7 8
set9 <
;< =
}> ?
public '
IInstructorRatingRepository *&
InstructorRatingRepository+ E
{F G
getH K
;K L
setM P
;P Q
}R S
public $
ICourseVersionRepository '#
CourseVersionRepository( ?
{@ A
getB E
;E F
}G H
public +
ICourseSectionVersionRepository .*
CourseSectionVersionRepository/ M
{N O
getP S
;S T
}U V
public ,
 ISectionDetailsVersionRepository /+
SectionDetailsVersionRepository0 O
{P Q
getR U
;U V
}W X
public *
ICourseVersionStatusRepository -)
CourseVersionStatusRepository. K
{L M
getN Q
;Q R
}S T
public +
ICourseVersionCommentRepository .*
CourseVersionCommentRepository/ M
{N O
getP S
;S T
}U V
public $
IStudentCourseRepository '#
StudentCourseRepository( ?
{@ A
getB E
;E F
}G H
public 
ILevelRepository 
LevelRepository  /
{0 1
get2 5
;5 6
}7 8
public !
ICartHeaderRepository $ 
CartHeaderRepository% 9
{: ;
get< ?
;? @
}A B
public "
ICartDetailsRepository %!
CartDetailsRepository& ;
{< =
get> A
;A B
}C D
public #
ICourseReviewRepository &"
CourseReviewRepository' =
{> ?
get@ C
;C D
}E F
public   #
ICourseReportRepository   &"
CourseReportRepository  ' =
{  > ?
get  @ C
;  C D
}  E F
public!! "
IOrderHeaderRepository!! %!
OrderHeaderRepository!!& ;
{!!< =
get!!> A
;!!A B
}!!C D
public"" #
IOrderDetailsRepository"" &"
OrderDetailsRepository""' =
{""> ?
get""@ C
;""C D
}""E F
public## "
IOrderStatusRepository## %!
OrderStatusRepository##& ;
{##< =
get##> A
;##A B
}##C D
public$$ %
IStudentCommentRepository$$ ($
StudentCommentRepository$$) A
{$$B C
get$$D G
;$$G H
}$$I J
public%% *
IStudentCourseStatusRepository%% -)
StudentCourseStatusRepository%%. K
{%%L M
get%%N Q
;%%Q R
}%%S T
public&& 
IBalanceRepository&& !
BalanceRepository&&" 3
{&&4 5
get&&6 9
;&&9 :
}&&; <
public'' "
ITransactionRepository'' %!
TransactionRepository''& ;
{''< =
get''> A
;''A B
}''C D
public(( %
ICourseBookmarkRepository(( ($
CourseBookmarkRepository(() A
{((B C
get((D G
;((G H
}((I J
public)) %
ICourseProgressRepository)) ($
CourseProgressRepository))) A
{))B C
get))D G
;))G H
}))I J
public**  
ITermOfUseRepository** #
TermOfUseRepository**$ 7
{**8 9
get**: =
;**= >
}**? @
public++ 
ICompanyRepository++ !
CompanyRepository++" 3
{++4 5
get++6 9
;++9 :
}++; <
public,, 
IPrivacyRepository,, !
PrivacyRepository,," 3
{,,4 5
get,,6 9
;,,9 :
},,; <
public.. 

UnitOfWork.. 
(..  
ApplicationDbContext.. .
context../ 6
,..6 7
UserManager..8 C
<..C D
ApplicationUser..D S
>..S T
userManager..U `
)..` a
{// 	
_context00 
=00 
context00 
;00 
StudentRepository11 
=11 
new11  #
StudentRepository11$ 5
(115 6
_context116 >
)11> ?
;11? @ 
InstructorRepository22  
=22! "
new22# & 
InstructorRepository22' ;
(22; <
_context22< D
)22D E
;22E F
CategoryRepository33 
=33  
new33! $
CategoryRepository33% 7
(337 8
_context338 @
)33@ A
;33A B#
EmailTemplateRepository44 #
=44$ %
new44& )#
EmailTemplateRepository44* A
(44A B
_context44B J
)44J K
;44K L!
UserManagerRepository55 !
=55" #
new55$ '!
UserManagerRepository55( =
(55= >
userManager55> I
)55I J
;55J K'
InstructorCommentRepository66 '
=66( )
new66* -'
InstructorCommentRepository66. I
(66I J
_context66J R
)66R S
;66S T&
InstructorRatingRepository77 &
=77' (
new77) ,&
InstructorRatingRepository77- G
(77G H
_context77H P
)77P Q
;77Q R
CourseRepository88 
=88 
new88 "
CourseRepository88# 3
(883 4
_context884 <
)88< =
;88= >#
CourseVersionRepository99 #
=99$ %
new99& )#
CourseVersionRepository99* A
(99A B
_context99B J
)99J K
;99K L*
CourseSectionVersionRepository:: *
=::+ ,
new::- 0*
CourseSectionVersionRepository::1 O
(::O P
_context::P X
)::X Y
;::Y Z+
SectionDetailsVersionRepository;; +
=;;, -
new;;. 1+
SectionDetailsVersionRepository;;2 Q
(;;Q R
_context;;R Z
);;Z [
;;;[ \)
CourseVersionStatusRepository<< )
=<<* +
new<<, /)
CourseVersionStatusRepository<<0 M
(<<M N
_context<<N V
)<<V W
;<<W X*
CourseVersionCommentRepository== *
===+ ,
new==- 0*
CourseVersionCommentRepository==1 O
(==O P
_context==P X
)==X Y
;==Y Z#
StudentCourseRepository>> #
=>>$ %
new>>& )#
StudentCourseRepository>>* A
(>>A B
_context>>B J
)>>J K
;>>K L
LevelRepository?? 
=?? 
new?? !
LevelRepository??" 1
(??1 2
_context??2 :
)??: ;
;??; < 
CartHeaderRepository@@  
=@@! "
new@@# & 
CartHeaderRepository@@' ;
(@@; <
_context@@< D
)@@D E
;@@E F!
CartDetailsRepositoryAA !
=AA" #
newAA$ '!
CartDetailsRepositoryAA( =
(AA= >
_contextAA> F
)AAF G
;AAG H"
CourseReviewRepositoryBB "
=BB# $
newBB% ("
CourseReviewRepositoryBB) ?
(BB? @
_contextBB@ H
)BBH I
;BBI J"
CourseReportRepositoryCC "
=CC# $
newCC% ("
CourseReportRepositoryCC) ?
(CC? @
_contextCC@ H
)CCH I
;CCI J!
OrderHeaderRepositoryDD !
=DD" #
newDD$ '!
OrderHeaderRepositoryDD( =
(DD= >
_contextDD> F
)DDF G
;DDG H"
OrderDetailsRepositoryEE "
=EE# $
newEE% ("
OrderDetailsRepositoryEE) ?
(EE? @
_contextEE@ H
)EEH I
;EEI J!
OrderStatusRepositoryFF !
=FF" #
newFF$ '!
OrderStatusRepositoryFF( =
(FF= >
_contextFF> F
)FFF G
;FFG H$
StudentCommentRepositoryGG $
=GG% &
newGG' *$
StudentCommentRepositoryGG+ C
(GGC D
_contextGGD L
)GGL M
;GGM N)
StudentCourseStatusRepositoryHH )
=HH* +
newHH, /)
StudentCourseStatusRepositoryHH0 M
(HHM N
_contextHHN V
)HHV W
;HHW X
BalanceRepositoryII 
=II 
newII  #
BalanceRepositoryII$ 5
(II5 6
_contextII6 >
)II> ?
;II? @!
TransactionRepositoryJJ !
=JJ" #
newJJ$ '!
TransactionRepositoryJJ( =
(JJ= >
_contextJJ> F
)JJF G
;JJG H$
CourseBookmarkRepositoryKK $
=KK% &
newKK' *$
CourseBookmarkRepositoryKK+ C
(KKC D
_contextKKD L
)KKL M
;KKM N$
CourseProgressRepositoryLL $
=LL% &
newLL' *$
CourseProgressRepositoryLL+ C
(LLC D
_contextLLD L
)LLL M
;LLM N
TermOfUseRepositoryMM 
=MM  !
newMM" %
TermOfUseRepositoryMM& 9
(MM9 :
_contextMM: B
)MMB C
;MMC D
CompanyRepositoryNN 
=NN 
newNN  #
CompanyRepositoryNN$ 5
(NN5 6
_contextNN6 >
)NN> ?
;NN? @
PrivacyRepositoryOO 
=OO 
newOO  #
PrivacyRepositoryOO$ 5
(OO5 6
_contextOO6 >
)OO> ?
;OO? @
}PP 	
publicRR 
asyncRR 
TaskRR 
<RR 
intRR 
>RR 
	SaveAsyncRR (
(RR( )
)RR) *
{SS 	
returnTT 
awaitTT 
_contextTT !
.TT! "
SaveChangesAsyncTT" 2
(TT2 3
)TT3 4
;TT4 5
}UU 	
}VV 
}WW ´
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\TransactionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class !
TransactionRepository "
:# $

Repository% /
</ 0
Transaction0 ;
>; <
,< ="
ITransactionRepository> T
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
!
TransactionRepository  
(  ! 
ApplicationDbContext! 5
context6 =
)= >
:? @
baseA E
(E F
contextF M
)M N
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
Transaction "
transaction# .
). /
{ 
_context 
. 
Transactions 
. 
Update $
($ %
transaction% 0
)0 1
;1 2
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Transaction( 3
>3 4
transactions5 A
)A B
{ 
_context 
. 
Transactions 
. 
UpdateRange )
() *
transactions* 6
)6 7
;7 8
} 
} ë
rD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\TermOfUseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
TermOfUseRepository  
:! "

Repository# -
<- .
	TermOfUse. 7
>7 8
,8 9 
ITermOfUseRepository: N
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 

TermOfUseRepository 
(  
ApplicationDbContext 3
context4 ;
); <
:= >
base? C
(C D
contextD K
)K L
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
	TermOfUse  
	termOfUse! *
)* +
{ 
_context 
. 

TermOfUses 
. 
Update "
(" #
	termOfUse# ,
), -
;- .
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
	TermOfUse( 1
>1 2

termOfUses3 =
)= >
{ 
_context 
. 

TermOfUses 
. 
UpdateRange '
(' (

termOfUses( 2
)2 3
;3 4
} 
} ô
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\StudentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
StudentRepository 
:  

Repository! +
<+ ,
Student, 3
>3 4
,4 5
IStudentRepository6 H
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 

StudentRepository 
(  
ApplicationDbContext 1
context2 9
)9 :
:; <
base= A
(A B
contextB I
)I J
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
Student 
student &
)& '
{ 
_context 
. 
Students 
. 
Update  
(  !
student! (
)( )
;) *
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Student( /
>/ 0
students1 9
)9 :
{ 
_context 
. 
Students 
. 
UpdateRange %
(% &
students& .
). /
;/ 0
} 
public 

async 
Task 
< 
Student 
> 
AddAsync '
(' (
Student( /
student0 7
)7 8
{ 
var 
entityEntry 
= 
await 
_context  (
.( )
Students) 1
.1 2
AddAsync2 :
(: ;
student; B
)B C
;C D
return 
entityEntry 
. 
Entity !
;! "
} 
public   

async   
Task   
<   
Student   
?   
>   
GetByUserId    +
(  + ,
string  , 2
id  3 5
)  5 6
{!! 
return"" 
await"" 
_context"" 
."" 
Students"" &
.""& '
Include""' .
("". /
$str""/ @
)""@ A
.""A B
FirstOrDefaultAsync""B U
(""U V
x""V W
=>""X Z
x""[ \
.""\ ]
UserId""] c
==""d f
id""g i
)""i j
;""j k
}## 
public%% 

async%% 
Task%% 
<%% 
Student%% 
?%% 
>%% 
GetById%%  '
(%%' (
Guid%%( ,
id%%- /
)%%/ 0
{&& 
return'' 
await'' 
_context'' 
.'' 
Students'' &
.''& '
Include''' .
(''. /
$str''/ @
)''@ A
.''A B
FirstOrDefaultAsync''B U
(''U V
x''V W
=>''X Z
x''[ \
.''\ ]
	StudentId''] f
==''g i
id''j l
)''l m
;''m n
})) 
}** ì
|D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\StudentCourseStatusRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class )
StudentCourseStatusRepository *
:+ ,

Repository- 7
<7 8
StudentCourseStatus8 K
>K L
,L M*
IStudentCourseStatusRepositoryN l
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
)
StudentCourseStatusRepository (
(( ) 
ApplicationDbContext) =
context> E
)E F
:G H
baseI M
(M N
contextN U
)U V
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
StudentCourseStatus *
studentCourseStatus+ >
)> ?
{ 
_context 
.  
StudentCoursesStatus %
.% &
Update& ,
(, -
studentCourseStatus- @
)@ A
;A B
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
StudentCourseStatus( ;
>; < 
studentCoursesStatus= Q
)Q R
{ 
_context 
.  
StudentCoursesStatus %
.% &
UpdateRange& 1
(1 2 
studentCoursesStatus2 F
)F G
;G H
} 
} ≈
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\StudentCourseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class #
StudentCourseRepository $
:% &

Repository' 1
<1 2
StudentCourse2 ?
>? @
,@ A$
IStudentCourseRepositoryB Z
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
#
StudentCourseRepository "
(" # 
ApplicationDbContext# 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
StudentCourse $
studentCourse% 2
)2 3
{ 
_context 
. 
StudentCourses 
.  
Update  &
(& '
studentCourse' 4
)4 5
;5 6
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
StudentCourse( 5
>5 6
studentCourses7 E
)E F
{ 
_context 
. 
StudentCourses 
.  
UpdateRange  +
(+ ,
studentCourses, :
): ;
;; <
} 
} “
wD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\StudentCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class $
StudentCommentRepository %
:& '

Repository( 2
<2 3
StudentComment3 A
>A B
,B C%
IStudentCommentRepositoryD ]
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public

 
$
StudentCommentRepository

 #
(

# $ 
ApplicationDbContext

$ 8
context

9 @
)

@ A
:

B C
base

D H
(

H I
context

I P
)

P Q
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
StudentComment %
studentComment& 4
)4 5
{ 
_context 
. 
StudentComments  
.  !
Update! '
(' (
studentComment( 6
)6 7
;7 8
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
StudentComment( 6
>6 7
studentComments8 G
)G H
{ 
_context 
. 
StudentComments  
.  !
UpdateRange! ,
(, -
studentComments- <
)< =
;= >
} 
} Ô
~D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\SectionDetailsVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class +
SectionDetailsVersionRepository ,
:- .

Repository/ 9
<9 :!
SectionDetailsVersion: O
>O P
,P Q,
 ISectionDetailsVersionRepositoryR r
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
+
SectionDetailsVersionRepository *
(* + 
ApplicationDbContext+ ?
context@ G
)G H
:I J
baseK O
(O P
contextP W
)W X
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( !
SectionDetailsVersion ,!
sectionDetailsVersion- B
)B C
{ 
_context 
. "
SectionDetailsVersions '
.' (
Update( .
(. /!
sectionDetailsVersion/ D
)D E
;E F
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (!
SectionDetailsVersion( =
>= >"
sectionDetailsVersions? U
)U V
{ 
_context 
. "
SectionDetailsVersions '
.' (
UpdateRange( 3
(3 4"
sectionDetailsVersions4 J
)J K
;K L
} 
public 

async 
Task 
< 
List 
< !
SectionDetailsVersion 0
>0 1
?1 2
>2 3@
4GetSectionDetailsVersionsOfCourseSectionVersionAsync4 h
( 
Guid "
courseSectionVersionId #
,# $
bool 
? 
asNoTracking 
) 
{   
return!! 
asNoTracking!! 
is!! 
true!! #
?"" 
await"" 
_context"" 
."" "
SectionDetailsVersions"" 3
.## 
AsNoTracking## 
(## 
)## 
.$$ 
Where$$ 
($$ 
x$$ 
=>$$ 
x$$ 
.$$ "
CourseSectionVersionId$$ 4
==$$5 7"
courseSectionVersionId$$8 N
)$$N O
.%% 
ToListAsync%% 
(%% 
)%% 
:&& 
await&& 
_context&& 
.&& "
SectionDetailsVersions&& 3
.'' 
Where'' 
('' 
x'' 
=>'' 
x'' 
.'' "
CourseSectionVersionId'' 4
==''5 7"
courseSectionVersionId''8 N
)''N O
.(( 
ToListAsync(( 
((( 
)(( 
;(( 
})) 
public++ 

async++ 
Task++ 
<++ !
SectionDetailsVersion++ +
?+++ ,
>++, -(
GetSectionDetailsVersionById++. J
(++J K
Guid++K O
	detailsId++P Y
)++Y Z
{,, 
return-- 
await-- 
_context-- 
.-- "
SectionDetailsVersions-- 4
.--4 5
FirstOrDefaultAsync--5 H
(--H I
x--I J
=>--K M
x--N O
.--O P
Id--P R
==--S U
	detailsId--V _
)--_ `
;--` a
}.. 
}// ≠0
iD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\Repository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public		 
class		 

Repository		 
<		 
T		 
>		 
:		 
IRepository		 (
<		( )
T		) *
>		* +
where		, 1
T		2 3
:		4 5
class		6 ;
{

 
private 
readonly  
ApplicationDbContext )
_context* 2
;2 3
internal 
DbSet 
< 
T 
> 
dbSet 
; 
public 


Repository 
(  
ApplicationDbContext *
context+ 2
)2 3
{ 
_context 
= 
context 
; 
dbSet 
= 
_context 
. 
Set 
< 
T 
> 
(  
)  !
;! "
} 
public 

async 
Task 
AddAsync 
( 
T  
entity! '
)' (
{ 
await 
dbSet 
. 
AddAsync 
( 
entity #
)# $
;$ %
} 
public 

async 
Task 
AddRangeAsync #
(# $
IEnumerable$ /
</ 0
T0 1
>1 2
entities3 ;
); <
{ 
await 
dbSet 
. 
AddRangeAsync !
(! "
entities" *
)* +
;+ ,
} 
public$$ 

async$$ 
Task$$ 
<$$ 
T$$ 
?$$ 
>$$ 
GetAsync$$ "
($$" #

Expression$$# -
<$$- .
Func$$. 2
<$$2 3
T$$3 4
,$$4 5
bool$$6 :
>$$: ;
>$$; <
filter$$= C
,$$C D
string$$E K
?$$K L
includeProperties$$M ^
=$$_ `
null$$a e
)$$e f
{%% 

IQueryable&& 
<&& 
T&& 
>&& 
query&& 
=&& 
dbSet&& #
;&&# $
query'' 
='' 
query'' 
.'' 
Where'' 
('' 
filter'' "
)''" #
;''# $
if)) 

()) 
!)) 
string)) 
.)) 
IsNullOrEmpty)) !
())! "
includeProperties))" 3
)))3 4
)))4 5
{** 	
foreach++ 
(++ 
var++ 
property++ !
in++" $
includeProperties++% 6
.++6 7
Split++7 <
(++< =
new++= @
char++A E
[++E F
]++F G
{++H I
$char++J M
}++N O
,++O P
StringSplitOptions++Q c
.++c d
RemoveEmptyEntries++d v
)++v w
)++w x
{,, 
query-- 
=-- 
query-- 
.-- 
Include-- %
(--% &
property--& .
)--. /
;--/ 0
}.. 
}// 	
return11 
await11 
query11 
.11 
FirstOrDefaultAsync11 .
(11. /
)11/ 0
;110 1
}22 
public== 

async== 
Task== 
<== 
IEnumerable== !
<==! "
T==" #
>==# $
>==$ %
GetAllAsync==& 1
(==1 2

Expression==2 <
<==< =
Func=== A
<==A B
T==B C
,==C D
bool==E I
>==I J
>==J K
?==K L
filter==M S
===T U
null==V Z
,==Z [
string>> 
?>> 
includeProperties>> !
=>>" #
null>>$ (
)>>( )
{?? 

IQueryable@@ 
<@@ 
T@@ 
>@@ 
query@@ 
=@@ 
dbSet@@ #
;@@# $
ifBB 

(BB 
filterBB 
!=BB 
nullBB 
)BB 
{CC 	
queryDD 
=DD 
queryDD 
.DD 
WhereDD 
(DD  
filterDD  &
)DD& '
;DD' (
}EE 	
ifGG 

(GG 
!GG 
stringGG 
.GG 
IsNullOrEmptyGG !
(GG! "
includePropertiesGG" 3
)GG3 4
)GG4 5
{HH 	
foreachII 
(II 
varII 
propertyII !
inII" $
includePropertiesII% 6
.II6 7
SplitII7 <
(II< =
newII= @
charIIA E
[IIE F
]IIF G
{IIH I
$charIIJ M
}IIN O
,IIO P
StringSplitOptionsIIQ c
.IIc d
RemoveEmptyEntriesIId v
)IIv w
)IIw x
{JJ 
queryKK 
=KK 
queryKK 
.KK 
IncludeKK %
(KK% &
propertyKK& .
)KK. /
;KK/ 0
}LL 
}MM 	
returnOO 
awaitOO 
queryOO 
.OO 
ToListAsyncOO &
(OO& '
)OO' (
;OO( )
}PP 
publicRR 

voidRR 
RemoveRR 
(RR 
TRR 
entityRR 
)RR  
{SS 
dbSetTT 
.TT 
RemoveTT 
(TT 
entityTT 
)TT 
;TT 
}UU 
publicWW 

voidWW 
RemoveRangeWW 
(WW 
IEnumerableWW '
<WW' (
TWW( )
>WW) *
entitiesWW+ 3
)WW3 4
{XX 
dbSetYY 
.YY 
RemoveRangeYY 
(YY 
entitiesYY "
)YY" #
;YY# $
}ZZ 
}[[ ˚
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\PrivacyRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
PrivacyRepository 
:  

Repository! +
<+ ,
Privacy, 3
>3 4
,4 5
IPrivacyRepository6 H
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 

PrivacyRepository 
(  
ApplicationDbContext 1
context2 9
)9 :
:; <
base= A
(A B
contextB I
)I J
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
Privacy 
privacy &
)& '
{ 
_context 
. 
	Privacies 
. 
Update !
(! "
privacy" )
)) *
;* +
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Privacy( /
>/ 0
	privacies1 :
): ;
{ 
_context 
. 
	Privacies 
. 
UpdateRange &
(& '
	privacies' 0
)0 1
;1 2
} 
} ´
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\OrderStatusRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class !
OrderStatusRepository "
:# $

Repository% /
</ 0
OrderStatus0 ;
>; <
,< ="
IOrderStatusRepository> T
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
!
OrderStatusRepository  
(  ! 
ApplicationDbContext! 5
context6 =
)= >
:? @
baseA E
(E F
contextF M
)M N
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
OrderStatus "
orderStatus# .
). /
{ 
_context 
. 
OrdersStatus 
. 
Update $
($ %
orderStatus% 0
)0 1
;1 2
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
OrderStatus( 3
>3 4
ordersStatus5 A
)A B
{ 
_context 
. 
OrdersStatus 
. 
UpdateRange )
() *
ordersStatus* 6
)6 7
;7 8
} 
} ´
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\OrderHeaderRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class !
OrderHeaderRepository "
:# $

Repository% /
</ 0
OrderHeader0 ;
>; <
,< ="
IOrderHeaderRepository> T
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
!
OrderHeaderRepository  
(  ! 
ApplicationDbContext! 5
context6 =
)= >
:? @
baseA E
(E F
contextF M
)M N
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
OrderHeader "
orderHeader# .
). /
{ 
_context 
. 
OrderHeaders 
. 
Update $
($ %
orderHeader% 0
)0 1
;1 2
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
OrderHeader( 3
>3 4
orderHeaders5 A
)A B
{ 
_context 
. 
OrderHeaders 
. 
UpdateRange )
() *
orderHeaders* 6
)6 7
;7 8
} 
} ∂
uD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\OrderDetailsRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class "
OrderDetailsRepository #
:$ %

Repository& 0
<0 1
OrderDetails1 =
>= >
,> ?#
IOrderDetailsRepository@ W
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
"
OrderDetailsRepository !
(! " 
ApplicationDbContext" 6
context7 >
)> ?
:@ A
baseB F
(F G
contextG N
)N O
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
OrderDetails #
orderDetails$ 0
)0 1
{ 
_context 
. 
OrderDetails 
. 
Update $
($ %
orderDetails% 1
)1 2
;2 3
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
OrderDetails( 4
>4 5
ordersDetails6 C
)C D
{ 
_context 
. 
OrderDetails 
. 
UpdateRange )
() *
ordersDetails* 7
)7 8
;8 9
} 
} Û
nD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\LevelRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
LevelRepository 
: 

Repository )
<) *
Level* /
>/ 0
,0 1
ILevelRepository2 B
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 

LevelRepository 
(  
ApplicationDbContext /
context0 7
)7 8
:9 :
base; ?
(? @
context@ G
)G H
{ 
_context 
= 
context 
; 
} 
public 

async 
Task 
< 
Level 
> 
GetLevelById )
() *
Guid* .
levelId/ 6
)6 7
{ 
return 
await 
_context 
. 
Levels $
.$ %
FirstOrDefaultAsync% 8
(8 9
x9 :
=>; =
x> ?
.? @
Id@ B
==C E
levelIdF M
)M N
;N O
} 
public 

void 
Update 
( 
Level 
level "
)" #
{ 
_context 
. 
Levels 
. 
Update 
( 
level $
)$ %
;% &
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Level( -
>- .
levels/ 5
)5 6
{ 
_context 
. 
Levels 
. 
UpdateRange #
(# $
levels$ *
)* +
;+ ,
} 
}   ¥
sD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\InstructorRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public		 
class		  
InstructorRepository		 !
:		" #

Repository		$ .
<		. /

Instructor		/ 9
>		9 :
,		: ;!
IInstructorRepository		< Q
{

 
private 
readonly  
ApplicationDbContext )
_context* 2
;2 3
public 
 
InstructorRepository 
(   
ApplicationDbContext  4
context5 <
)< =
:> ?
base@ D
(D E
contextE L
)L M
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 

Instructor !

instructor" ,
), -
{ 
_context 
. 
Instructors 
. 
Update #
(# $

instructor$ .
). /
;/ 0
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (

Instructor( 2
>2 3
instructors4 ?
)? @
{ 
_context 
. 
Instructors 
. 
UpdateRange (
(( )
instructors) 4
)4 5
;5 6
} 
public 

async 
Task 
< 

Instructor  
?  !
>! "
GetById# *
(* +
Guid+ /
id0 2
)2 3
{ 
return 
await 
_context 
. 
Instructors )
.) *
Include* 1
(1 2
$str2 C
)C D
.D E
FirstOrDefaultAsyncE X
(X Y
xY Z
=>[ ]
x^ _
._ `
InstructorId` l
==m o
idp r
)r s
;s t
} 
public   

async   
Task   
<   

Instructor    
?    !
>  ! "
GetByUserId  # .
(  . /
string  / 5
id  6 8
)  8 9
{!! 
return"" 
await"" 
_context"" 
."" 
Instructors"" )
."") *
Include""* 1
(""1 2
$str""2 C
)""C D
.""D E
FirstOrDefaultAsync""E X
(""X Y
x""Y Z
=>""[ ]
x""^ _
.""_ `
UserId""` f
==""g i
id""j l
)""l m
;""m n
}## 
public$$ 

async$$ 
Task$$ 
<$$ !
IDbContextTransaction$$ +
>$$+ ,!
BeginTransactionAsync$$- B
($$B C
)$$C D
{%% 
return&& 
await&& 
_context&& 
.&& 
Database&& &
.&&& '!
BeginTransactionAsync&&' <
(&&< =
)&&= >
;&&> ?
}'' 
}(( ˘
zD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\InstructorCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class '
InstructorCommentRepository (
:) *

Repository+ 5
<5 6
InstructorComment6 G
>G H
,H I(
IInstructorCommentRepositoryJ f
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
'
InstructorCommentRepository &
(& ' 
ApplicationDbContext' ;
context< C
)C D
:E F
baseG K
(K L
contextL S
)S T
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
InstructorComment (
instructorComment) :
): ;
{ 
_context 
. 
InstructorComments #
.# $
Update$ *
(* +
instructorComment+ <
)< =
;= >
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
InstructorComment( 9
>9 :
instructorComments; M
)M N
{ 
_context 
. 
InstructorComments #
.# $
UpdateRange$ /
(/ 0
instructorComments0 B
)B C
;C D
} 
} «
zD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\IInstructorRatingRepository.cs
public 
class &
InstructorRatingRepository '
:( )

Repository* 4
<4 5
InstructorRating5 E
>E F
,F G'
IInstructorRatingRepositoryH c
{ 
private 
readonly  
ApplicationDbContext )
_context* 2
;2 3
public

 
&
InstructorRatingRepository

 %
(

% & 
ApplicationDbContext

& :
context

; B
)

B C
:

D E
base

F J
(

J K
context

K R
)

R S
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
InstructorRating '
instructorRating( 8
)8 9
{ 
_context 
. 
InstructorRatings "
." #
Update# )
() *
instructorRating* :
): ;
;; <
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
InstructorRating( 8
>8 9
instructorRatings: K
)K L
{ 
_context 
. 
InstructorRatings "
." #
UpdateRange# .
(. /
instructorRatings/ @
)@ A
;A B
} 
} ™

vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\EmailTemplateRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class #
EmailTemplateRepository $
:% &

Repository' 1
<1 2
EmailTemplate2 ?
>? @
,@ A$
IEmailTemplateRepositoryB Z
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
#
EmailTemplateRepository "
(" # 
ApplicationDbContext# 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
EmailTemplate $
emailTemplate% 2
)2 3
{ 
_context 
. 
EmailTemplates 
.  
Update  &
(& '
emailTemplate' 4
)4 5
;5 6
} 
} Ä
|D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseVersionStatusRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class )
CourseVersionStatusRepository *
:+ ,

Repository- 7
<7 8
CourseVersionStatus8 K
>K L
,L M*
ICourseVersionStatusRepositoryN l
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
)
CourseVersionStatusRepository (
(( ) 
ApplicationDbContext) =
context> E
)E F
:G H
baseI M
(M N
contextN U
)U V
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CourseVersionStatus *
courseVersionStatus+ >
)> ?
{ 
_context 
. 
CourseVersionStatus $
.$ %
Update% +
(+ ,
courseVersionStatus, ?
)? @
;@ A
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CourseVersionStatus( ;
>; < 
courseVersionsStatus= Q
)Q R
{ 
_context 
. 
CourseVersionStatus $
.$ %
UpdateRange% 0
(0 1 
courseVersionsStatus1 E
)E F
;F G
} 
public 

async 
Task 
< 
CourseVersionStatus )
?) *
>* ++
GetCourseVersionStatusByIdAsync, K
(K L
GuidL P!
courseVersionStatusIdQ f
)f g
{ 
return 
await 
_context 
. 
CourseVersionStatus 1
.1 2
FirstOrDefaultAsync2 E
(E F
xF G
=>H J
xK L
.L M
IdM O
==P R!
courseVersionStatusIdS h
)h i
;i j
} 
} ˇ
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class #
CourseVersionRepository $
:% &

Repository' 1
<1 2
CourseVersion2 ?
>? @
,@ A$
ICourseVersionRepositoryB Z
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
#
CourseVersionRepository "
(" # 
ApplicationDbContext# 7
context8 ?
)? @
:A B
baseC G
(G H
contextH O
)O P
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CourseVersion $
courseVersion% 2
)2 3
{ 
_context 
. 
CourseVersions 
.  
Update  &
(& '
courseVersion' 4
)4 5
;5 6
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CourseVersion( 5
>5 6
courseVersions7 E
)E F
{ 
_context 
. 
CourseVersions 
.  
UpdateRange  +
(+ ,
courseVersions, :
): ;
;; <
} 
public 

async 
Task 
< 
CourseVersion #
?# $
>$ %!
GetCourseVersionAsync& ;
( 
Guid 
courseVersionId 
, 
bool 
? 
asNoTracking 
= 
false "
) 
{   
return!! 
asNoTracking!! 
is!! 
not!! "
null!!# '
?"" 
await"" 
_context"" 
."" 
CourseVersions"" +
.## 
AsNoTracking## 
(## 
)## 
.$$ 
FirstOrDefaultAsync$$ $
($$$ %
x$$% &
=>$$' )
x$$* +
.$$+ ,
Id$$, .
==$$/ 1
courseVersionId$$2 A
)$$A B
:%% 
await%% 
_context%% 
.%% 
CourseVersions%% +
.&& 
FirstOrDefaultAsync&& $
(&&$ %
x&&% &
=>&&' )
x&&* +
.&&+ ,
Id&&, .
==&&/ 1
courseVersionId&&2 A
)&&A B
;&&B C
}'' 
public)) 

async)) 
Task)) 
<)) 
int)) 
>)) '
GetTotalCourseVersionsAsync)) 6
())6 7
Guid))7 ;
?)); <
courseId))= E
)))E F
{** 
return++ 
courseId++ 
is++ 
not++ 
null++ #
?,, 
await,, 
_context,, 
.,, 
CourseVersions,, +
.,,+ ,

CountAsync,,, 6
(,,6 7
x,,7 8
=>,,9 ;
x,,< =
.,,= >
CourseId,,> F
==,,G I
courseId,,J R
),,R S
:-- 
$num-- 
;-- 
}.. 
}// ê
}D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseVersionCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class *
CourseVersionCommentRepository +
:, -

Repository. 8
<8 9 
CourseVersionComment9 M
>M N
,N O+
ICourseVersionCommentRepositoryP o
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
*
CourseVersionCommentRepository )
() * 
ApplicationDbContext* >
context? F
)F G
:H I
baseJ N
(N O
contextO V
)V W
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
(  
CourseVersionComment + 
courseVersionComment, @
)@ A
{ 
_context 
. !
CourseVersionComments &
.& '
Update' -
(- . 
courseVersionComment. B
)B C
;C D
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' ( 
CourseVersionComment( <
>< =!
courseVersionComments> S
)S T
{ 
_context 
. !
CourseVersionComments &
.& '
UpdateRange' 2
(2 3!
courseVersionComments3 H
)H I
;I J
} 
public 

async 
Task 
<  
CourseVersionComment *
?* +
>+ ,'
GetCourseVersionCommentById- H
(H I
GuidI M"
courseversioncommentIdN d
)d e
{ 
return 
await 
_context 
. !
CourseVersionComments 3
.3 4
FirstOrDefaultAsync4 G
(G H
xH I
=>J L
xM N
.N O
IdO Q
==R T"
courseversioncommentIdU k
)k l
;l m
} 
} ˝
}D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseSectionVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class *
CourseSectionVersionRepository +
:, -

Repository. 8
<8 9 
CourseSectionVersion9 M
>M N
,N O+
ICourseSectionVersionRepositoryP o
{		 
private

 
readonly

  
ApplicationDbContext

 )
_context

* 2
;

2 3
public 
*
CourseSectionVersionRepository )
() * 
ApplicationDbContext* >
context? F
)F G
:H I
baseJ N
(N O
contextO V
)V W
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
(  
CourseSectionVersion + 
courseSectionVersion, @
)@ A
{ 
_context 
. !
CourseSectionVersions &
.& '
Update' -
(- . 
courseSectionVersion. B
)B C
;C D
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' ( 
CourseSectionVersion( <
>< =!
courseSectionVersions> S
)S T
{ 
_context 
. !
CourseSectionVersions &
.& '
UpdateRange' 2
(2 3!
courseSectionVersions3 H
)H I
;I J
} 
public 

async 
Task 
< 
List 
<  
CourseSectionVersion /
>/ 0
?0 1
>1 28
,GetCourseSectionVersionsOfCourseVersionAsync3 _
( 
Guid 
courseVersionId 
, 
bool 
? 
asNoTracking 
= 
false "
) 
{   
return!! 
asNoTracking!! 
is!! 
true!! #
?"" 
await"" 
_context"" 
."" !
CourseSectionVersions"" 2
.## 
AsNoTracking## 
(## 
)## 
.$$ 
Where$$ 
($$ 
x$$ 
=>$$ 
x$$ 
.$$ 
CourseVersionId$$ -
==$$. 0
courseVersionId$$1 @
)$$@ A
.%% 
ToListAsync%% 
(%% 
)%% 
:&& 
await&& 
_context&& 
.&& !
CourseSectionVersions&& 2
.'' 
Where'' 
('' 
x'' 
=>'' 
x'' 
.'' 
CourseVersionId'' -
==''. 0
courseVersionId''1 @
)''@ A
.(( 
ToListAsync(( 
((( 
)(( 
;(( 
})) 
}** Ê
uD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseReviewRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class "
CourseReviewRepository #
:$ %

Repository& 0
<0 1
CourseReview1 =
>= >
,> ?#
ICourseReviewRepository@ W
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public

 
"
CourseReviewRepository

 !
(

! " 
ApplicationDbContext

" 6
context

7 >
)

> ?
:

@ A
base

B F
(

F G
context

G N
)

N O
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CourseReview #
courseReview$ 0
)0 1
{ 
_context 
. 
CourseReviews 
. 
Update %
(% &
courseReview& 2
)2 3
;3 4
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CourseReview( 4
>4 5
courseReviews6 C
)C D
{ 
_context 
. 
CourseReviews 
. 
UpdateRange *
(* +
courseReviews+ 8
)8 9
;9 :
} 
public 

async 
Task 
< 
CourseReview "
>" #
GetById$ +
(+ ,
Guid, 0
id1 3
)3 4
{ 
return 
await 
_context 
. 
CourseReviews +
.+ ,
	FindAsync, 5
(5 6
id6 8
)8 9
;9 :
} 
} ü
oD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
{ 
public		 

class		 
CourseRepository		 !
:		" #

Repository		$ .
<		. /
Course		/ 5
>		5 6
,		6 7
ICourseRepository		8 I
{

 
private 
readonly  
ApplicationDbContext -
_context. 6
;6 7
public 
CourseRepository 
(   
ApplicationDbContext  4
context5 <
)< =
:> ?
base@ D
(D E
contextE L
)L M
{ 	
_context 
= 
context 
; 
} 	
public 
void 
Update 
( 
Course !
course" (
)( )
{ 	
_context 
. 
Courses 
. 
Update #
(# $
course$ *
)* +
;+ ,
} 	
public 
void 
UpdateRange 
(  
IEnumerable  +
<+ ,
Course, 2
>2 3
courses4 ;
); <
{ 	
_context 
. 
Courses 
. 
UpdateRange (
(( )
courses) 0
)0 1
;1 2
} 	
public 
async 
Task 
< 
Course  
?  !
>! "
GetById# *
(* +
Guid+ /
courseId0 8
)8 9
{ 	
return 
await 
_context !
.! "
Courses" )
.) *
FirstOrDefaultAsync* =
(= >
x> ?
=>@ B
xC D
.D E
IdE G
==H J
courseIdK S
)S T
;T U
} 	
} 
}   Ê
uD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseReportRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class "
CourseReportRepository #
:$ %

Repository& 0
<0 1
CourseReport1 =
>= >
,> ?#
ICourseReportRepository@ W
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
"
CourseReportRepository !
(! " 
ApplicationDbContext" 6
context7 >
)> ?
:@ A
baseB F
(F G
contextG N
)N O
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CourseReport #
courseReport$ 0
)0 1
{ 
_context 
. 
CourseReports 
. 
Update %
(% &
courseReport& 2
)2 3
;3 4
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CourseReport( 4
>4 5
courseReports6 C
)C D
{ 
_context 
. 
CourseReports 
. 
UpdateRange *
(* +
courseReports+ 8
)8 9
;9 :
} 
public 

async 
Task 
< 
CourseReport "
>" #
GetById$ +
(+ ,
Guid, 0
id1 3
)3 4
{ 
return 
await 
_context 
. 
CourseReports +
.+ ,
	FindAsync, 5
(5 6
id6 8
)8 9
;9 :
} 
} ÷
wD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseProgressRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class $
CourseProgressRepository %
:& '

Repository( 2
<2 3
CourseProgress3 A
>A B
,B C%
ICourseProgressRepositoryD ]
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
$
CourseProgressRepository #
(# $ 
ApplicationDbContext$ 8
context9 @
)@ A
:B C
baseD H
(H I
contextI P
)P Q
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CourseProgress %
courseProgress& 4
)4 5
{ 
_context 
. 
CourseProgresses !
.! "
Update" (
(( )
courseProgress) 7
)7 8
;8 9
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CourseProgress( 6
>6 7
courseProgresses8 H
)H I
{ 
_context 
. 
CourseProgresses !
.! "
UpdateRange" -
(- .
courseProgresses. >
)> ?
;? @
} 
} “
wD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CourseBookmarkRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class $
CourseBookmarkRepository %
:& '

Repository( 2
<2 3
CourseBookmark3 A
>A B
,B C%
ICourseBookmarkRepositoryD ]
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
$
CourseBookmarkRepository #
(# $ 
ApplicationDbContext$ 8
context9 @
)@ A
:B C
baseD H
(H I
contextI P
)P Q
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CourseBookmark %
courseBookmark& 4
)4 5
{ 
_context 
. 
CourseBookmarks  
.  !
Update! '
(' (
courseBookmark( 6
)6 7
;7 8
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CourseBookmark( 6
>6 7
courseBookmarks8 G
)G H
{ 
_context 
. 
CourseBookmarks  
.  !
UpdateRange! ,
(, -
courseBookmarks- <
)< =
;= >
} 
} ˚
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CompanyRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
CompanyRepository 
:  

Repository! +
<+ ,
Company, 3
>3 4
,4 5
ICompanyRepository6 H
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 

CompanyRepository 
(  
ApplicationDbContext 1
context2 9
)9 :
:; <
base= A
(A B
contextB I
)I J
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
Company 
company &
)& '
{ 
_context 
. 
	Companies 
. 
Update !
(! "
company" )
)) *
;* +
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Company( /
>/ 0
	companies1 :
): ;
{ 
_context 
. 
	Companies 
. 
UpdateRange &
(& '
	companies' 0
)0 1
;1 2
} 
} £
qD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CategoryRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
CategoryRepository 
:  

Repository! +
<+ ,
Category, 4
>4 5
,5 6
ICategoryRepository7 J
{		 
private 
readonly  
ApplicationDbContext )
_context* 2
;2 3
public 

CategoryRepository 
(  
ApplicationDbContext 2
context3 :
): ;
:< =
base> B
(B C
contextC J
)J K
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
Category 
category  (
)( )
{ 
_context 
. 

Categories 
. 
Update "
(" #
category# +
)+ ,
;, -
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Category( 0
>0 1

categories2 <
)< =
{ 
_context 
. 

Categories 
. 
UpdateRange '
(' (

categories( 2
)2 3
;3 4
} 
public 

async 
Task 
< 
Category 
>  
GetCategoryByIdAsync  4
(4 5
Guid5 9
id: <
)< =
{ 
return 
await 
_context 
. 

Categories (
.( )
FirstOrDefaultAsync) <
(< =
c= >
=>? A
cB C
.C D
IdD F
==G I
idJ L
)L M
;M N
} 
} û
sD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CartHeaderRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class  
CartHeaderRepository !
:! "

Repository# -
<- .

CartHeader. 8
>8 9
,9 :!
ICartHeaderRepository; P
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
 
CartHeaderRepository 
(   
ApplicationDbContext  4
context5 <
)< =
:> ?
base@ D
(D E
contextE L
)L M
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 

CartHeader !

cartHeader" ,
), -
{ 
_context 
. 
CartHeaders 
. 
Update #
(# $

cartHeader$ .
). /
;/ 0
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (

CartHeader( 2
>2 3
cartHeaders4 ?
)? @
{ 
_context 
. 
CartHeaders 
. 
UpdateRange (
(( )
cartHeaders) 4
)4 5
;5 6
} 
} ©
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\CartDetailsRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class !
CartDetailsRepository "
:# $

Repository% /
</ 0
CartDetails0 ;
>; <
,< ="
ICartDetailsRepository> T
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 
!
CartDetailsRepository  
(  ! 
ApplicationDbContext! 5
context6 =
)= >
:? @
baseA E
(E F
contextF M
)M N
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
CartDetails "
cartDetails# .
). /
{ 
_context 
. 
CartDetails 
. 
Update #
(# $
cartDetails$ /
)/ 0
;0 1
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
CartDetails( 3
>3 4
cartsDetails5 A
)A B
{ 
_context 
. 
CartDetails 
. 
UpdateRange (
(( )
cartsDetails) 5
)5 6
;6 7
} 
} ˜
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Repository\BalanceRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Repository  *
;* +
public 
class 
BalanceRepository 
:  

Repository! +
<+ ,
Balance, 3
>3 4
,4 5
IBalanceRepository6 H
{ 
private		 
readonly		  
ApplicationDbContext		 )
_context		* 2
;		2 3
public 

BalanceRepository 
(  
ApplicationDbContext 1
context2 9
)9 :
:; <
base= A
(A B
contextB I
)I J
{ 
_context 
= 
context 
; 
} 
public 

void 
Update 
( 
Balance 
balance &
)& '
{ 
_context 
. 
Balances 
. 
Update  
(  !
balance! (
)( )
;) *
} 
public 

void 
UpdateRange 
( 
IEnumerable '
<' (
Balance( /
>/ 0
balances1 9
)9 :
{ 
_context 
. 
Balances 
. 
UpdateRange %
(% &
balances& .
). /
;/ 0
} 
} –À
áD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240730053015_SeedDataForWebsiteContent.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class %
SeedDataForWebsiteContent 2
:3 4
	Migration5 >
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 

UpdateDataQQ '
(QQ' (
tableRR 
:RR 
$strRR $
,RR$ %
	keyColumnSS 
:SS 
$strSS 
,SS  
keyValueTT 
:TT 
$strTT +
,TT+ ,
columnsUU 
:UU 
newUU 
[UU 
]UU 
{UU  
$strUU! 3
,UU3 4
$strUU5 A
,UUA B
$strUUC Q
,UUQ R
$strUUS b
}UUc d
,UUd e
valuesVV 
:VV 
newVV 
objectVV "
[VV" #
]VV# $
{VV% &
$strVV' M
,VVM N
newVVO R
DateTimeVVS [
(VV[ \
$numVV\ `
,VV` a
$numVVb c
,VVc d
$numVVe g
,VVg h
$numVVi j
,VVj k
$numVVl n
,VVn o
$numVVp r
,VVr s
$numVVt w
,VVw x
DateTimeKind	VVy Ö
.
VVÖ Ü
Utc
VVÜ â
)
VVâ ä
.
VVä ã
AddTicks
VVã ì
(
VVì î
$num
VVî ò
)
VVò ô
,
VVô ö
$str
VVõ Ò
,
VVÒ Ú
$str
VVÛ ô
}
VVö õ
)
VVõ ú
;
VVú ù
migrationBuilderXX 
.XX 

InsertDataXX '
(XX' (
tableYY 
:YY 
$strYY "
,YY" #
columnsZZ 
:ZZ 
newZZ 
[ZZ 
]ZZ 
{ZZ  
$strZZ! %
,ZZ% &
$strZZ' 0
,ZZ0 1
$strZZ2 8
,ZZ8 9
$strZZ: C
,ZZC D
$strZZE R
,ZZR S
$strZZT [
,ZZ[ \
$strZZ] j
,ZZj k
$strZZl u
,ZZu v
$strZZw }
,ZZ} ~
$str	ZZ Ü
,
ZZÜ á
$str
ZZà î
,
ZZî ï
$str
ZZñ ù
,
ZZù û
$str
ZZü ®
}
ZZ© ™
,
ZZ™ ´
values[[ 
:[[ 
new[[ 
object[[ "
[[[" #
][[# $
{[[% &
new[[' *
Guid[[+ /
([[/ 0
$str[[0 V
)[[V W
,[[W X
$str[[Y f
,[[f g
$str[[h r
,[[r s
$str[[t }
,[[} ~
$str	[[ Ø
,
[[Ø ∞
$str
[[± ∆
,
[[∆ «
new
[[» À
DateTime
[[Ã ‘
(
[[‘ ’
$num
[[’ Ÿ
,
[[Ÿ ⁄
$num
[[€ ‹
,
[[‹ ›
$num
[[ﬁ ﬂ
,
[[ﬂ ‡
$num
[[· ‚
,
[[‚ „
$num
[[‰ Â
,
[[Â Ê
$num
[[Á Ë
,
[[Ë È
$num
[[Í Î
,
[[Î Ï
DateTimeKind
[[Ì ˘
.
[[˘ ˙
Unspecified
[[˙ Ö
)
[[Ö Ü
,
[[Ü á
$str
[[à ©
,
[[© ™
$str
[[´ µ
,
[[µ ∂
$str
[[∑ ≈
,
[[≈ ∆
$str
[[« Œ
,
[[Œ œ
$str
[[– ◊
,
[[◊ ÿ
$str
[[Ÿ Ò
}
[[Ú Û
)
[[Û Ù
;
[[Ù ı
migrationBuilder]] 
.]] 

InsertData]] '
(]]' (
table^^ 
:^^ 
$str^^ '
,^^' (
columns__ 
:__ 
new__ 
[__ 
]__ 
{__  
$str__! %
,__% &
$str__' 4
,__4 5
$str__6 D
,__D E
$str__F P
,__P Q
$str__R ]
,__] ^
$str___ l
,__l m
$str__n }
,__} ~
$str	__ â
,
__â ä
$str
__ã †
,
__† °
$str
__¢ ±
,
__± ≤
$str
__≥ ¬
,
__¬ √
$str
__ƒ —
,
__— “
$str
__” ﬂ
,
__ﬂ ‡
$str
__· È
,
__È Í
$str
__Î ¯
,
__¯ ˘
$str
__˙ à
,
__à â
$str
__ä ï
,
__ï ñ
$str
__ó §
}
__• ¶
,
__¶ ß
values`` 
:`` 
new`` 
object`` "
[``" #
,``# $
]``$ %
{aa 
{bb 
newbb 
Guidbb 
(bb 
$strbb E
)bbE F
,bbF G
$str	bbH ”
,
bb” ‘
$str
bb’ è
,
bbè ê
$str
bbë ô
,
bbô ö
null
bbõ ü
,
bbü †
null
bb° •
,
bb• ¶
$str
bbß ÿ
,
bbÿ Ÿ
$str
bb⁄ „
,
bb„ ‰
$str
bbÂ °
,
bb° ¢
$str
bb£ ∑
,
bb∑ ∏
$str
bbπ √
,
bb√ ƒ
$str
bb≈ ·
,
bb· ‚
$str
bb„ 
,
bb Ò
$num
bbÚ Û
,
bbÛ Ù
$str
bbı ñ
,
bbñ ó
$str
bbò π
,
bbπ ∫
null
bbª ø
,
bbø ¿
null
bb¡ ≈
}
bb∆ «
,
bb« »
{cc 
newcc 
Guidcc 
(cc 
$strcc E
)ccE F
,ccF G
$str	ccH æ
,
ccæ ø
$str
cc¿ ù
,
ccù û
$str
ccü ©
,
cc© ™
null
cc´ Ø
,
ccØ ∞
null
cc± µ
,
ccµ ∂
$str
cc∑ ˚
,
cc˚ ¸
$str
cc˝ Ü
,
ccÜ á
$str
ccà ≠
,
cc≠ Æ
$str
ccØ ’
,
cc’ ÷
$str
cc◊ ·
,
cc· ‚
$str
cc„ ˇ
,
ccˇ Ä
$str
ccÅ é
,
ccé è
$num
ccê ë
,
ccë í
$str
ccì ®
,
cc® ©
$str
cc™ ø
,
ccø ¿
null
cc¡ ≈
,
cc≈ ∆
null
cc« À
}
ccÃ Õ
,
ccÕ Œ
{dd 
newdd 
Guiddd 
(dd 
$strdd E
)ddE F
,ddF G
$str	ddH è
,
ddè ê
$str
ddë À
,
ddÀ Ã
$str
ddÕ ‰
,
dd‰ Â
null
ddÊ Í
,
ddÍ Î
null
ddÏ 
,
dd Ò
$str
ddÚ £
,
dd£ §
$str
dd• Æ
,
ddÆ Ø
$str
dd∞ …
,
dd…  
$str
ddÀ Ò
,
ddÒ Ú
$str
ddÛ ¸
,
dd¸ ˝
$str
dd˛ ö
,
ddö õ
$str
ddú ©
,
dd© ™
$num
dd´ ¨
,
dd¨ ≠
$str
ddÆ Œ
,
ddŒ œ
$str
dd– Ë
,
ddË È
null
ddÍ Ó
,
ddÓ Ô
null
dd Ù
}
ddı ˆ
,
ddˆ ˜
{ee 
newee 
Guidee 
(ee 
$stree E
)eeE F
,eeF G
$str	eeH ë
,
eeë í
$str
eeì Õ
,
eeÕ Œ
$str
eeœ ·
,
ee· ‚
null
ee„ Á
,
eeÁ Ë
null
eeÈ Ì
,
eeÌ Ó
$str
eeÔ †
,
ee† °
$str
ee¢ ´
,
ee´ ¨
$str
ee≠ ∆
,
ee∆ «
$str
ee» –
,
ee– —
$str
ee“ ‹
,
ee‹ ›
$str
eeﬁ ˙
,
ee˙ ˚
$str
ee¸ â
,
eeâ ä
$num
eeã å
,
eeå ç
$str
eeé π
,
eeπ ∫
$str
eeª “
,
ee“ ”
null
ee‘ ÿ
,
eeÿ Ÿ
null
ee⁄ ﬁ
}
eeﬂ ‡
,
ee‡ ·
{ff 
newff 
Guidff 
(ff 
$strff E
)ffE F
,ffF G
$strffH s
,ffs t
$str	ffu ô
,
ffô ö
$str
ffõ •
,
ff• ¶
null
ffß ´
,
ff´ ¨
null
ff≠ ±
,
ff± ≤
$str
ff≥ ˘
,
ff˘ ˙
$str
ff˚ Ñ
,
ffÑ Ö
$str
ffÜ ü
,
ffü †
$str
ff° Œ
,
ffŒ œ
$str
ff– ‹
,
ff‹ ›
$str
ffﬁ ˙
,
ff˙ ˚
$str
ff¸ â
,
ffâ ä
$num
ffã å
,
ffå ç
$str
ffé ª
,
ffª º
$str
ffΩ ›
,
ff› ﬁ
null
ffﬂ „
,
ff„ ‰
null
ffÂ È
}
ffÍ Î
,
ffÎ Ï
{gg 
newgg 
Guidgg 
(gg 
$strgg E
)ggE F
,ggF G
$str	ggH Ã
,
ggÃ Õ
$str
ggŒ à
,
ggà â
$str
ggä ö
,
ggö õ
null
ggú †
,
gg† °
null
gg¢ ¶
,
gg¶ ß
$str
gg® Ÿ
,
ggŸ ⁄
$str
gg€ ‰
,
gg‰ Â
$str
ggÊ ˇ
,
ggˇ Ä
$str
ggÅ â
,
ggâ ä
$str
ggã ï
,
ggï ñ
$str
ggó ≥
,
gg≥ ¥
$str
ggµ ¬
,
gg¬ √
$num
ggƒ ≈
,
gg≈ ∆
$str
gg« ﬂ
,
ggﬂ ‡
$str
gg· ˆ
,
ggˆ ˜
null
gg¯ ¸
,
gg¸ ˝
null
gg˛ Ç
}
ggÉ Ñ
,
ggÑ Ö
{hh 
newhh 
Guidhh 
(hh 
$strhh E
)hhE F
,hhF G
$str	hhH ®
,
hh® ©
$str
hh™ ÿ
,
hhÿ Ÿ
$str
hh⁄ ‰
,
hh‰ Â
null
hhÊ Í
,
hhÍ Î
null
hhÏ 
,
hh Ò
$str
hhÚ £
,
hh£ §
$str
hh• Æ
,
hhÆ Ø
$str
hh∞  
,
hh  À
$str
hhÃ Û
,
hhÛ Ù
$str
hhı ˇ
,
hhˇ Ä
$str
hhÅ ù
,
hhù û
$str
hhü ¨
,
hh¨ ≠
$num
hhÆ Ø
,
hhØ ∞
$str
hh± ∆
,
hh∆ «
$str
hh» ÿ
,
hhÿ Ÿ
null
hh⁄ ﬁ
,
hhﬁ ﬂ
null
hh‡ ‰
}
hhÂ Ê
,
hhÊ Á
{ii 
newii 
Guidii 
(ii 
$strii E
)iiE F
,iiF G
$str	iiH ∞
,
ii∞ ±
$str
ii≤ Ï
,
iiÏ Ì
$str
iiÓ ˜
,
ii˜ ¯
null
ii˘ ˝
,
ii˝ ˛
null
iiˇ É
,
iiÉ Ñ
$str
iiÖ ∂
,
ii∂ ∑
$str
ii∏ ¡
,
ii¡ ¬
$str
ii√ ‹
,
ii‹ ›
$str
iiﬁ ˘
,
ii˘ ˙
$str
ii˚ Ö
,
iiÖ Ü
$str
iiá £
,
ii£ §
$str
ii• ≤
,
ii≤ ≥
$num
ii¥ µ
,
iiµ ∂
$str
ii∑ À
,
iiÀ Ã
$str
iiÕ €
,
ii€ ‹
null
ii› ·
,
ii· ‚
null
ii„ Á
}
iiË È
,
iiÈ Í
{jj 
newjj 
Guidjj 
(jj 
$strjj E
)jjE F
,jjF G
$str	jjH ë
,
jjë í
$str
jjì Õ
,
jjÕ Œ
$str
jjœ ·
,
jj· ‚
null
jj„ Á
,
jjÁ Ë
null
jjÈ Ì
,
jjÌ Ó
$str
jjÔ †
,
jj† °
$str
jj¢ ´
,
jj´ ¨
$str
jj≠ ∆
,
jj∆ «
$str
jj» Ê
,
jjÊ Á
$str
jjË Ô
,
jjÔ 
$str
jjÒ ç
,
jjç é
$str
jjè ú
,
jjú ù
$num
jjû ü
,
jjü †
$str
jj° ø
,
jjø ¿
$str
jj¡ Â
,
jjÂ Ê
null
jjÁ Î
,
jjÎ Ï
null
jjÌ Ò
}
jjÚ Û
,
jjÛ Ù
{kk 
newkk 
Guidkk 
(kk 
$strkk E
)kkE F
,kkF G
$str	kkH Ñ
,
kkÑ Ö
$str
kkÜ ¿
,
kk¿ ¡
$str
kk¬ “
,
kk“ ”
null
kk‘ ÿ
,
kkÿ Ÿ
null
kk⁄ ﬁ
,
kkﬁ ﬂ
$str
kk‡ ë
,
kkë í
$str
kkì ú
,
kkú ù
$str
kkû ∑
,
kk∑ ∏
$str
kkπ ¡
,
kk¡ ¬
$str
kk√ Õ
,
kkÕ Œ
$str
kkœ Î
,
kkÎ Ï
$str
kkÌ ˙
,
kk˙ ˚
$num
kk¸ ˝
,
kk˝ ˛
$str
kkˇ ê
,
kkê ë
$str
kkí °
,
kk° ¢
null
kk£ ß
,
kkß ®
null
kk© ≠
}
kkÆ Ø
,
kkØ ∞
{ll 
newll 
Guidll 
(ll 
$strll E
)llE F
,llF G
$str	llH è
,
llè ê
$str
llë ∫
,
ll∫ ª
$str
llº  
,
ll  À
null
llÃ –
,
ll– —
null
ll“ ÷
,
ll÷ ◊
$str
llÿ â
,
llâ ä
$str
llã î
,
llî ï
$str
llñ ¢
,
ll¢ £
$str
ll§ ¥
,
ll¥ µ
$str
ll∂ ¿
,
ll¿ ¡
$str
ll¬ ÿ
,
llÿ Ÿ
$str
ll⁄ Ê
,
llÊ Á
$num
llË È
,
llÈ Í
$str
llÎ ¸
,
ll¸ ˝
$str
ll˛ ì
,
llì î
null
llï ô
,
llô ö
null
llõ ü
}
ll† °
,
ll° ¢
{mm 
newmm 
Guidmm 
(mm 
$strmm E
)mmE F
,mmF G
$str	mmH è
,
mmè ê
$str
mmë À
,
mmÀ Ã
$str
mmÕ ‰
,
mm‰ Â
null
mmÊ Í
,
mmÍ Î
null
mmÏ 
,
mm Ò
$str
mmÚ £
,
mm£ §
$str
mm• Æ
,
mmÆ Ø
$str
mm∞ …
,
mm…  
$str
mmÀ Ì
,
mmÌ Ó
$str
mmÔ ˚
,
mm˚ ¸
$str
mm˝ ô
,
mmô ö
$str
mmõ ®
,
mm® ©
$num
mm™ ´
,
mm´ ¨
$str
mm≠ Õ
,
mmÕ Œ
$str
mmœ Ë
,
mmË È
null
mmÍ Ó
,
mmÓ Ô
null
mm Ù
}
mmı ˆ
,
mmˆ ˜
{nn 
newnn 
Guidnn 
(nn 
$strnn E
)nnE F
,nnF G
$str	nnH û
,
nnû ü
$str
nn† ≈
,
nn≈ ∆
$str
nn« œ
,
nnœ –
null
nn— ’
,
nn’ ÷
null
nn◊ €
,
nn€ ‹
$str
nn› é
,
nné è
$str
nnê ô
,
nnô ö
$str
nnõ µ
,
nnµ ∂
$str
nn∑ œ
,
nnœ –
$str
nn— €
,
nn€ ‹
$str
nn› ˘
,
nn˘ ˙
$str
nn˚ à
,
nnà â
$num
nnä ã
,
nnã å
$str
nnç ¢
,
nn¢ £
$str
nn§ µ
,
nnµ ∂
null
nn∑ ª
,
nnª º
null
nnΩ ¡
}
nn¬ √
}oo 
)oo 
;oo 
migrationBuilderqq 
.qq 

InsertDataqq '
(qq' (
tablerr 
:rr 
$strrr "
,rr" #
columnsss 
:ss 
newss 
[ss 
]ss 
{ss  
$strss! %
,ss% &
$strss' 0
,ss0 1
$strss2 <
,ss< =
$strss> K
,ssK L
$strssM T
}ssU V
,ssV W
valuestt 
:tt 
newtt 
objecttt "
[tt" #
]tt# $
{tt% &
newtt' *
Guidtt+ /
(tt/ 0
$strtt0 V
)ttV W
,ttW X
$str	ttY Å
,
ttÅ Ç
true
ttÉ á
,
ttá à
new
ttâ å
DateTime
ttç ï
(
ttï ñ
$num
ttñ ö
,
ttö õ
$num
ttú ù
,
ttù û
$num
ttü °
,
tt° ¢
$num
tt£ §
,
tt§ •
$num
tt¶ ®
,
tt® ©
$num
tt™ ¨
,
tt¨ ≠
$num
ttÆ ±
,
tt± ≤
DateTimeKind
tt≥ ø
.
ttø ¿
Utc
tt¿ √
)
tt√ ƒ
.
ttƒ ≈
AddTicks
tt≈ Õ
(
ttÕ Œ
$num
ttŒ “
)
tt“ ”
,
tt” ‘
$str
tt’ ﬁ
}
ttﬂ ‡
)
tt‡ ·
;
tt· ‚
migrationBuildervv 
.vv 

InsertDatavv '
(vv' (
tableww 
:ww 
$strww #
,ww# $
columnsxx 
:xx 
newxx 
[xx 
]xx 
{xx  
$strxx! %
,xx% &
$strxx' 0
,xx0 1
$strxx2 <
,xx< =
$strxx> K
,xxK L
$strxxM T
}xxU V
,xxV W
valuesyy 
:yy 
newyy 
objectyy "
[yy" #
]yy# $
{yy% &
newyy' *
Guidyy+ /
(yy/ 0
$stryy0 V
)yyV W
,yyW X
$str	yyY Ü
,
yyÜ á
true
yyà å
,
yyå ç
new
yyé ë
DateTime
yyí ö
(
yyö õ
$num
yyõ ü
,
yyü †
$num
yy° ¢
,
yy¢ £
$num
yy§ ¶
,
yy¶ ß
$num
yy® ©
,
yy© ™
$num
yy´ ≠
,
yy≠ Æ
$num
yyØ ±
,
yy± ≤
$num
yy≥ ∂
,
yy∂ ∑
DateTimeKind
yy∏ ƒ
.
yyƒ ≈
Utc
yy≈ »
)
yy» …
.
yy…  
AddTicks
yy  “
(
yy“ ”
$num
yy” ◊
)
yy◊ ÿ
,
yyÿ Ÿ
$str
yy⁄ Ë
}
yyÈ Í
)
yyÍ Î
;
yyÎ Ï
}zz 	
	protected}} 
override}} 
void}} 
Down}}  $
(}}$ %
MigrationBuilder}}% 5
migrationBuilder}}6 F
)}}F G
{~~ 	
migrationBuilder 
. 

DeleteData '
(' (
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ "
,
ÄÄ" #
	keyColumn
ÅÅ 
:
ÅÅ 
$str
ÅÅ 
,
ÅÅ  
keyValue
ÇÇ 
:
ÇÇ 
new
ÇÇ 
Guid
ÇÇ "
(
ÇÇ" #
$str
ÇÇ# I
)
ÇÇI J
)
ÇÇJ K
;
ÇÇK L
migrationBuilder
ÑÑ 
.
ÑÑ 

DeleteData
ÑÑ '
(
ÑÑ' (
table
ÖÖ 
:
ÖÖ 
$str
ÖÖ '
,
ÖÖ' (
	keyColumn
ÜÜ 
:
ÜÜ 
$str
ÜÜ 
,
ÜÜ  
keyValue
áá 
:
áá 
new
áá 
Guid
áá "
(
áá" #
$str
áá# I
)
ááI J
)
ááJ K
;
ááK L
migrationBuilder
ââ 
.
ââ 

DeleteData
ââ '
(
ââ' (
table
ää 
:
ää 
$str
ää '
,
ää' (
	keyColumn
ãã 
:
ãã 
$str
ãã 
,
ãã  
keyValue
åå 
:
åå 
new
åå 
Guid
åå "
(
åå" #
$str
åå# I
)
ååI J
)
ååJ K
;
ååK L
migrationBuilder
éé 
.
éé 

DeleteData
éé '
(
éé' (
table
èè 
:
èè 
$str
èè '
,
èè' (
	keyColumn
êê 
:
êê 
$str
êê 
,
êê  
keyValue
ëë 
:
ëë 
new
ëë 
Guid
ëë "
(
ëë" #
$str
ëë# I
)
ëëI J
)
ëëJ K
;
ëëK L
migrationBuilder
ìì 
.
ìì 

DeleteData
ìì '
(
ìì' (
table
îî 
:
îî 
$str
îî '
,
îî' (
	keyColumn
ïï 
:
ïï 
$str
ïï 
,
ïï  
keyValue
ññ 
:
ññ 
new
ññ 
Guid
ññ "
(
ññ" #
$str
ññ# I
)
ññI J
)
ññJ K
;
ññK L
migrationBuilder
òò 
.
òò 

DeleteData
òò '
(
òò' (
table
ôô 
:
ôô 
$str
ôô '
,
ôô' (
	keyColumn
öö 
:
öö 
$str
öö 
,
öö  
keyValue
õõ 
:
õõ 
new
õõ 
Guid
õõ "
(
õõ" #
$str
õõ# I
)
õõI J
)
õõJ K
;
õõK L
migrationBuilder
ùù 
.
ùù 

DeleteData
ùù '
(
ùù' (
table
ûû 
:
ûû 
$str
ûû '
,
ûû' (
	keyColumn
üü 
:
üü 
$str
üü 
,
üü  
keyValue
†† 
:
†† 
new
†† 
Guid
†† "
(
††" #
$str
††# I
)
††I J
)
††J K
;
††K L
migrationBuilder
¢¢ 
.
¢¢ 

DeleteData
¢¢ '
(
¢¢' (
table
££ 
:
££ 
$str
££ '
,
££' (
	keyColumn
§§ 
:
§§ 
$str
§§ 
,
§§  
keyValue
•• 
:
•• 
new
•• 
Guid
•• "
(
••" #
$str
••# I
)
••I J
)
••J K
;
••K L
migrationBuilder
ßß 
.
ßß 

DeleteData
ßß '
(
ßß' (
table
®® 
:
®® 
$str
®® '
,
®®' (
	keyColumn
©© 
:
©© 
$str
©© 
,
©©  
keyValue
™™ 
:
™™ 
new
™™ 
Guid
™™ "
(
™™" #
$str
™™# I
)
™™I J
)
™™J K
;
™™K L
migrationBuilder
¨¨ 
.
¨¨ 

DeleteData
¨¨ '
(
¨¨' (
table
≠≠ 
:
≠≠ 
$str
≠≠ '
,
≠≠' (
	keyColumn
ÆÆ 
:
ÆÆ 
$str
ÆÆ 
,
ÆÆ  
keyValue
ØØ 
:
ØØ 
new
ØØ 
Guid
ØØ "
(
ØØ" #
$str
ØØ# I
)
ØØI J
)
ØØJ K
;
ØØK L
migrationBuilder
±± 
.
±± 

DeleteData
±± '
(
±±' (
table
≤≤ 
:
≤≤ 
$str
≤≤ '
,
≤≤' (
	keyColumn
≥≥ 
:
≥≥ 
$str
≥≥ 
,
≥≥  
keyValue
¥¥ 
:
¥¥ 
new
¥¥ 
Guid
¥¥ "
(
¥¥" #
$str
¥¥# I
)
¥¥I J
)
¥¥J K
;
¥¥K L
migrationBuilder
∂∂ 
.
∂∂ 

DeleteData
∂∂ '
(
∂∂' (
table
∑∑ 
:
∑∑ 
$str
∑∑ '
,
∑∑' (
	keyColumn
∏∏ 
:
∏∏ 
$str
∏∏ 
,
∏∏  
keyValue
ππ 
:
ππ 
new
ππ 
Guid
ππ "
(
ππ" #
$str
ππ# I
)
ππI J
)
ππJ K
;
ππK L
migrationBuilder
ªª 
.
ªª 

DeleteData
ªª '
(
ªª' (
table
ºº 
:
ºº 
$str
ºº '
,
ºº' (
	keyColumn
ΩΩ 
:
ΩΩ 
$str
ΩΩ 
,
ΩΩ  
keyValue
ææ 
:
ææ 
new
ææ 
Guid
ææ "
(
ææ" #
$str
ææ# I
)
ææI J
)
ææJ K
;
ææK L
migrationBuilder
¿¿ 
.
¿¿ 

DeleteData
¿¿ '
(
¿¿' (
table
¡¡ 
:
¡¡ 
$str
¡¡ '
,
¡¡' (
	keyColumn
¬¬ 
:
¬¬ 
$str
¬¬ 
,
¬¬  
keyValue
√√ 
:
√√ 
new
√√ 
Guid
√√ "
(
√√" #
$str
√√# I
)
√√I J
)
√√J K
;
√√K L
migrationBuilder
≈≈ 
.
≈≈ 

DeleteData
≈≈ '
(
≈≈' (
table
∆∆ 
:
∆∆ 
$str
∆∆ "
,
∆∆" #
	keyColumn
«« 
:
«« 
$str
«« 
,
««  
keyValue
»» 
:
»» 
new
»» 
Guid
»» "
(
»»" #
$str
»»# I
)
»»I J
)
»»J K
;
»»K L
migrationBuilder
   
.
   

DeleteData
   '
(
  ' (
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ #
,
ÀÀ# $
	keyColumn
ÃÃ 
:
ÃÃ 
$str
ÃÃ 
,
ÃÃ  
keyValue
ÕÕ 
:
ÕÕ 
new
ÕÕ 
Guid
ÕÕ "
(
ÕÕ" #
$str
ÕÕ# I
)
ÕÕI J
)
ÕÕJ K
;
ÕÕK L
migrationBuilder
œœ 
.
œœ 

UpdateData
œœ '
(
œœ' (
table
–– 
:
–– 
$str
–– $
,
––$ %
	keyColumn
—— 
:
—— 
$str
—— 
,
——  
keyValue
““ 
:
““ 
$str
““ +
,
““+ ,
columns
”” 
:
”” 
new
”” 
[
”” 
]
”” 
{
””  
$str
””! 3
,
””3 4
$str
””5 A
,
””A B
$str
””C Q
,
””Q R
$str
””S b
}
””c d
,
””d e
values
‘‘ 
:
‘‘ 
new
‘‘ 
object
‘‘ "
[
‘‘" #
]
‘‘# $
{
‘‘% &
$str
‘‘' M
,
‘‘M N
new
‘‘O R
DateTime
‘‘S [
(
‘‘[ \
$num
‘‘\ `
,
‘‘` a
$num
‘‘b c
,
‘‘c d
$num
‘‘e g
,
‘‘g h
$num
‘‘i j
,
‘‘j k
$num
‘‘l n
,
‘‘n o
$num
‘‘p q
,
‘‘q r
$num
‘‘s t
,
‘‘t u
DateTimeKind‘‘v Ç
.‘‘Ç É
Utc‘‘É Ü
)‘‘Ü á
.‘‘á à
AddTicks‘‘à ê
(‘‘ê ë
$num‘‘ë ï
)‘‘ï ñ
,‘‘ñ ó
$str‘‘ò Ó
,‘‘Ó Ô
$str‘‘ ñ
}‘‘ó ò
)‘‘ò ô
;‘‘ô ö
migrationBuilder
÷÷ 
.
÷÷ 

InsertData
÷÷ '
(
÷÷' (
table
◊◊ 
:
◊◊ 
$str
◊◊ '
,
◊◊' (
columns
ÿÿ 
:
ÿÿ 
new
ÿÿ 
[
ÿÿ 
]
ÿÿ 
{
ÿÿ  
$str
ÿÿ! %
,
ÿÿ% &
$str
ÿÿ' 4
,
ÿÿ4 5
$str
ÿÿ6 D
,
ÿÿD E
$str
ÿÿF P
,
ÿÿP Q
$str
ÿÿR ]
,
ÿÿ] ^
$str
ÿÿ_ l
,
ÿÿl m
$str
ÿÿn }
,
ÿÿ} ~
$strÿÿ â
,ÿÿâ ä
$strÿÿã †
,ÿÿ† °
$strÿÿ¢ ±
,ÿÿ± ≤
$strÿÿ≥ ¬
,ÿÿ¬ √
$strÿÿƒ —
,ÿÿ— “
$strÿÿ” ﬂ
,ÿÿﬂ ‡
$strÿÿ· È
,ÿÿÈ Í
$strÿÿÎ ¯
,ÿÿ¯ ˘
$strÿÿ˙ à
,ÿÿà â
$strÿÿä ï
,ÿÿï ñ
$strÿÿó §
}ÿÿ• ¶
,ÿÿ¶ ß
values
ŸŸ 
:
ŸŸ 
new
ŸŸ 
object
ŸŸ "
[
ŸŸ" #
,
ŸŸ# $
]
ŸŸ$ %
{
⁄⁄ 
{
€€ 
new
€€ 
Guid
€€ 
(
€€ 
$str
€€ E
)
€€E F
,
€€F G
$str€€H Ã
,€€Ã Õ
$str€€Œ à
,€€à â
$str€€ä ö
,€€ö õ
null€€ú †
,€€† °
null€€¢ ¶
,€€¶ ß
$str€€® Ÿ
,€€Ÿ ⁄
$str€€€ ‰
,€€‰ Â
$str€€Ê ˇ
,€€ˇ Ä
$str€€Å â
,€€â ä
$str€€ã ï
,€€ï ñ
$str€€ó ≥
,€€≥ ¥
$str€€µ ¬
,€€¬ √
$num€€ƒ ≈
,€€≈ ∆
$str€€« ﬂ
,€€ﬂ ‡
$str€€· ˆ
,€€ˆ ˜
null€€¯ ¸
,€€¸ ˝
null€€˛ Ç
}€€É Ñ
,€€Ñ Ö
{
‹‹ 
new
‹‹ 
Guid
‹‹ 
(
‹‹ 
$str
‹‹ E
)
‹‹E F
,
‹‹F G
$str‹‹H ë
,‹‹ë í
$str‹‹ì Õ
,‹‹Õ Œ
$str‹‹œ ·
,‹‹· ‚
null‹‹„ Á
,‹‹Á Ë
null‹‹È Ì
,‹‹Ì Ó
$str‹‹Ô †
,‹‹† °
$str‹‹¢ ´
,‹‹´ ¨
$str‹‹≠ ∆
,‹‹∆ «
$str‹‹» –
,‹‹– —
$str‹‹“ ‹
,‹‹‹ ›
$str‹‹ﬁ ˙
,‹‹˙ ˚
$str‹‹¸ â
,‹‹â ä
$num‹‹ã å
,‹‹å ç
$str‹‹é π
,‹‹π ∫
$str‹‹ª “
,‹‹“ ”
null‹‹‘ ÿ
,‹‹ÿ Ÿ
null‹‹⁄ ﬁ
}‹‹ﬂ ‡
,‹‹‡ ·
{
›› 
new
›› 
Guid
›› 
(
›› 
$str
›› E
)
››E F
,
››F G
$str››H ”
,››” ‘
$str››’ è
,››è ê
$str››ë ô
,››ô ö
null››õ ü
,››ü †
null››° •
,››• ¶
$str››ß ÿ
,››ÿ Ÿ
$str››⁄ „
,››„ ‰
$str››Â °
,››° ¢
$str››£ ∑
,››∑ ∏
$str››π √
,››√ ƒ
$str››≈ ·
,››· ‚
$str››„ 
,›› Ò
$num››Ú Û
,››Û Ù
$str››ı ñ
,››ñ ó
$str››ò π
,››π ∫
null››ª ø
,››ø ¿
null››¡ ≈
}››∆ «
,››« »
{
ﬁﬁ 
new
ﬁﬁ 
Guid
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ E
)
ﬁﬁE F
,
ﬁﬁF G
$strﬁﬁH è
,ﬁﬁè ê
$strﬁﬁë À
,ﬁﬁÀ Ã
$strﬁﬁÕ ‰
,ﬁﬁ‰ Â
nullﬁﬁÊ Í
,ﬁﬁÍ Î
nullﬁﬁÏ 
,ﬁﬁ Ò
$strﬁﬁÚ £
,ﬁﬁ£ §
$strﬁﬁ• Æ
,ﬁﬁÆ Ø
$strﬁﬁ∞ …
,ﬁﬁ…  
$strﬁﬁÀ Ò
,ﬁﬁÒ Ú
$strﬁﬁÛ ¸
,ﬁﬁ¸ ˝
$strﬁﬁ˛ ö
,ﬁﬁö õ
$strﬁﬁú ©
,ﬁﬁ© ™
$numﬁﬁ´ ¨
,ﬁﬁ¨ ≠
$strﬁﬁÆ Œ
,ﬁﬁŒ œ
$strﬁﬁ– Ë
,ﬁﬁË È
nullﬁﬁÍ Ó
,ﬁﬁÓ Ô
nullﬁﬁ Ù
}ﬁﬁı ˆ
,ﬁﬁˆ ˜
{
ﬂﬂ 
new
ﬂﬂ 
Guid
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ E
)
ﬂﬂE F
,
ﬂﬂF G
$strﬂﬂH ë
,ﬂﬂë í
$strﬂﬂì Õ
,ﬂﬂÕ Œ
$strﬂﬂœ ·
,ﬂﬂ· ‚
nullﬂﬂ„ Á
,ﬂﬂÁ Ë
nullﬂﬂÈ Ì
,ﬂﬂÌ Ó
$strﬂﬂÔ †
,ﬂﬂ† °
$strﬂﬂ¢ ´
,ﬂﬂ´ ¨
$strﬂﬂ≠ ∆
,ﬂﬂ∆ «
$strﬂﬂ» Ê
,ﬂﬂÊ Á
$strﬂﬂË Ô
,ﬂﬂÔ 
$strﬂﬂÒ ç
,ﬂﬂç é
$strﬂﬂè ú
,ﬂﬂú ù
$numﬂﬂû ü
,ﬂﬂü †
$strﬂﬂ° ø
,ﬂﬂø ¿
$strﬂﬂ¡ Â
,ﬂﬂÂ Ê
nullﬂﬂÁ Î
,ﬂﬂÎ Ï
nullﬂﬂÌ Ò
}ﬂﬂÚ Û
,ﬂﬂÛ Ù
{
‡‡ 
new
‡‡ 
Guid
‡‡ 
(
‡‡ 
$str
‡‡ E
)
‡‡E F
,
‡‡F G
$str‡‡H æ
,‡‡æ ø
$str‡‡¿ ù
,‡‡ù û
$str‡‡ü ©
,‡‡© ™
null‡‡´ Ø
,‡‡Ø ∞
null‡‡± µ
,‡‡µ ∂
$str‡‡∑ ˚
,‡‡˚ ¸
$str‡‡˝ Ü
,‡‡Ü á
$str‡‡à ≠
,‡‡≠ Æ
$str‡‡Ø ’
,‡‡’ ÷
$str‡‡◊ ·
,‡‡· ‚
$str‡‡„ ˇ
,‡‡ˇ Ä
$str‡‡Å é
,‡‡é è
$num‡‡ê ë
,‡‡ë í
$str‡‡ì ®
,‡‡® ©
$str‡‡™ ø
,‡‡ø ¿
null‡‡¡ ≈
,‡‡≈ ∆
null‡‡« À
}‡‡Ã Õ
,‡‡Õ Œ
{
·· 
new
·· 
Guid
·· 
(
·· 
$str
·· E
)
··E F
,
··F G
$str··H è
,··è ê
$str··ë ∫
,··∫ ª
$str··º  
,··  À
null··Ã –
,··– —
null··“ ÷
,··÷ ◊
$str··ÿ â
,··â ä
$str··ã î
,··î ï
$str··ñ ¢
,··¢ £
$str··§ ¥
,··¥ µ
$str··∂ ¿
,··¿ ¡
$str··¬ ÿ
,··ÿ Ÿ
$str··⁄ Ê
,··Ê Á
$num··Ë È
,··È Í
$str··Î ¸
,··¸ ˝
$str··˛ ì
,··ì î
null··ï ô
,··ô ö
null··õ ü
}··† °
,··° ¢
{
‚‚ 
new
‚‚ 
Guid
‚‚ 
(
‚‚ 
$str
‚‚ E
)
‚‚E F
,
‚‚F G
$str‚‚H Ñ
,‚‚Ñ Ö
$str‚‚Ü ¿
,‚‚¿ ¡
$str‚‚¬ “
,‚‚“ ”
null‚‚‘ ÿ
,‚‚ÿ Ÿ
null‚‚⁄ ﬁ
,‚‚ﬁ ﬂ
$str‚‚‡ ë
,‚‚ë í
$str‚‚ì ú
,‚‚ú ù
$str‚‚û ∑
,‚‚∑ ∏
$str‚‚π ¡
,‚‚¡ ¬
$str‚‚√ Õ
,‚‚Õ Œ
$str‚‚œ Î
,‚‚Î Ï
$str‚‚Ì ˙
,‚‚˙ ˚
$num‚‚¸ ˝
,‚‚˝ ˛
$str‚‚ˇ ê
,‚‚ê ë
$str‚‚í °
,‚‚° ¢
null‚‚£ ß
,‚‚ß ®
null‚‚© ≠
}‚‚Æ Ø
,‚‚Ø ∞
{
„„ 
new
„„ 
Guid
„„ 
(
„„ 
$str
„„ E
)
„„E F
,
„„F G
$str„„H ®
,„„® ©
$str„„™ ÿ
,„„ÿ Ÿ
$str„„⁄ ‰
,„„‰ Â
null„„Ê Í
,„„Í Î
null„„Ï 
,„„ Ò
$str„„Ú £
,„„£ §
$str„„• Æ
,„„Æ Ø
$str„„∞  
,„„  À
$str„„Ã Û
,„„Û Ù
$str„„ı ˇ
,„„ˇ Ä
$str„„Å ù
,„„ù û
$str„„ü ¨
,„„¨ ≠
$num„„Æ Ø
,„„Ø ∞
$str„„± ∆
,„„∆ «
$str„„» ÿ
,„„ÿ Ÿ
null„„⁄ ﬁ
,„„ﬁ ﬂ
null„„‡ ‰
}„„Â Ê
,„„Ê Á
{
‰‰ 
new
‰‰ 
Guid
‰‰ 
(
‰‰ 
$str
‰‰ E
)
‰‰E F
,
‰‰F G
$str
‰‰H s
,
‰‰s t
$str‰‰u ô
,‰‰ô ö
$str‰‰õ •
,‰‰• ¶
null‰‰ß ´
,‰‰´ ¨
null‰‰≠ ±
,‰‰± ≤
$str‰‰≥ ˘
,‰‰˘ ˙
$str‰‰˚ Ñ
,‰‰Ñ Ö
$str‰‰Ü ü
,‰‰ü †
$str‰‰° Œ
,‰‰Œ œ
$str‰‰– ‹
,‰‰‹ ›
$str‰‰ﬁ ˙
,‰‰˙ ˚
$str‰‰¸ â
,‰‰â ä
$num‰‰ã å
,‰‰å ç
$str‰‰é ª
,‰‰ª º
$str‰‰Ω ›
,‰‰› ﬁ
null‰‰ﬂ „
,‰‰„ ‰
null‰‰Â È
}‰‰Í Î
,‰‰Î Ï
{
ÂÂ 
new
ÂÂ 
Guid
ÂÂ 
(
ÂÂ 
$str
ÂÂ E
)
ÂÂE F
,
ÂÂF G
$strÂÂH è
,ÂÂè ê
$strÂÂë À
,ÂÂÀ Ã
$strÂÂÕ ‰
,ÂÂ‰ Â
nullÂÂÊ Í
,ÂÂÍ Î
nullÂÂÏ 
,ÂÂ Ò
$strÂÂÚ £
,ÂÂ£ §
$strÂÂ• Æ
,ÂÂÆ Ø
$strÂÂ∞ …
,ÂÂ…  
$strÂÂÀ Ì
,ÂÂÌ Ó
$strÂÂÔ ˚
,ÂÂ˚ ¸
$strÂÂ˝ ô
,ÂÂô ö
$strÂÂõ ®
,ÂÂ® ©
$numÂÂ™ ´
,ÂÂ´ ¨
$strÂÂ≠ Õ
,ÂÂÕ Œ
$strÂÂœ Ë
,ÂÂË È
nullÂÂÍ Ó
,ÂÂÓ Ô
nullÂÂ Ù
}ÂÂı ˆ
,ÂÂˆ ˜
{
ÊÊ 
new
ÊÊ 
Guid
ÊÊ 
(
ÊÊ 
$str
ÊÊ E
)
ÊÊE F
,
ÊÊF G
$strÊÊH ∞
,ÊÊ∞ ±
$strÊÊ≤ Ï
,ÊÊÏ Ì
$strÊÊÓ ˜
,ÊÊ˜ ¯
nullÊÊ˘ ˝
,ÊÊ˝ ˛
nullÊÊˇ É
,ÊÊÉ Ñ
$strÊÊÖ ∂
,ÊÊ∂ ∑
$strÊÊ∏ ¡
,ÊÊ¡ ¬
$strÊÊ√ ‹
,ÊÊ‹ ›
$strÊÊﬁ ˘
,ÊÊ˘ ˙
$strÊÊ˚ Ö
,ÊÊÖ Ü
$strÊÊá £
,ÊÊ£ §
$strÊÊ• ≤
,ÊÊ≤ ≥
$numÊÊ¥ µ
,ÊÊµ ∂
$strÊÊ∑ À
,ÊÊÀ Ã
$strÊÊÕ €
,ÊÊ€ ‹
nullÊÊ› ·
,ÊÊ· ‚
nullÊÊ„ Á
}ÊÊË È
,ÊÊÈ Í
{
ÁÁ 
new
ÁÁ 
Guid
ÁÁ 
(
ÁÁ 
$str
ÁÁ E
)
ÁÁE F
,
ÁÁF G
$strÁÁH û
,ÁÁû ü
$strÁÁ† ≈
,ÁÁ≈ ∆
$strÁÁ« œ
,ÁÁœ –
nullÁÁ— ’
,ÁÁ’ ÷
nullÁÁ◊ €
,ÁÁ€ ‹
$strÁÁ› é
,ÁÁé è
$strÁÁê ô
,ÁÁô ö
$strÁÁõ µ
,ÁÁµ ∂
$strÁÁ∑ œ
,ÁÁœ –
$strÁÁ— €
,ÁÁ€ ‹
$strÁÁ› ˘
,ÁÁ˘ ˙
$strÁÁ˚ à
,ÁÁà â
$numÁÁä ã
,ÁÁã å
$strÁÁç ¢
,ÁÁ¢ £
$strÁÁ§ µ
,ÁÁµ ∂
nullÁÁ∑ ª
,ÁÁª º
nullÁÁΩ ¡
}ÁÁ¬ √
}
ËË 
)
ËË 
;
ËË 
}
ÈÈ 	
}
ÍÍ 
}ÎÎ √Ù
|D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240730043206_AddWebsitTable.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class 
AddWebsitTable '
:( )
	Migration* 3
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 
CreateTableQQ (
(QQ( )
nameRR 
:RR 
$strRR !
,RR! "
columnsSS 
:SS 
tableSS 
=>SS !
newSS" %
{TT 
IdUU 
=UU 
tableUU 
.UU 
ColumnUU %
<UU% &
GuidUU& *
>UU* +
(UU+ ,
typeUU, 0
:UU0 1
$strUU2 D
,UUD E
nullableUUF N
:UUN O
falseUUP U
)UUU V
,UUV W
NameVV 
=VV 
tableVV  
.VV  !
ColumnVV! '
<VV' (
stringVV( .
>VV. /
(VV/ 0
typeVV0 4
:VV4 5
$strVV6 E
,VVE F
nullableVVG O
:VVO P
falseVVQ V
)VVV W
,VVW X
AddressWW 
=WW 
tableWW #
.WW# $
ColumnWW$ *
<WW* +
stringWW+ 1
>WW1 2
(WW2 3
typeWW3 7
:WW7 8
$strWW9 H
,WWH I
nullableWWJ R
:WWR S
falseWWT Y
)WWY Z
,WWZ [
CityXX 
=XX 
tableXX  
.XX  !
ColumnXX! '
<XX' (
stringXX( .
>XX. /
(XX/ 0
typeXX0 4
:XX4 5
$strXX6 E
,XXE F
nullableXXG O
:XXO P
falseXXQ V
)XXV W
,XXW X
StateYY 
=YY 
tableYY !
.YY! "
ColumnYY" (
<YY( )
stringYY) /
>YY/ 0
(YY0 1
typeYY1 5
:YY5 6
$strYY7 F
,YYF G
nullableYYH P
:YYP Q
falseYYR W
)YYW X
,YYX Y
CountryZZ 
=ZZ 
tableZZ #
.ZZ# $
ColumnZZ$ *
<ZZ* +
stringZZ+ 1
>ZZ1 2
(ZZ2 3
typeZZ3 7
:ZZ7 8
$strZZ9 H
,ZZH I
nullableZZJ R
:ZZR S
falseZZT Y
)ZZY Z
,ZZZ [

PostalCode[[ 
=[[  
table[[! &
.[[& '
Column[[' -
<[[- .
string[[. 4
>[[4 5
([[5 6
type[[6 :
:[[: ;
$str[[< K
,[[K L
nullable[[M U
:[[U V
false[[W \
)[[\ ]
,[[] ^
Phone\\ 
=\\ 
table\\ !
.\\! "
Column\\" (
<\\( )
string\\) /
>\\/ 0
(\\0 1
type\\1 5
:\\5 6
$str\\7 F
,\\F G
nullable\\H P
:\\P Q
false\\R W
)\\W X
,\\X Y
Email]] 
=]] 
table]] !
.]]! "
Column]]" (
<]]( )
string]]) /
>]]/ 0
(]]0 1
type]]1 5
:]]5 6
$str]]7 F
,]]F G
nullable]]H P
:]]P Q
false]]R W
)]]W X
,]]X Y
Website^^ 
=^^ 
table^^ #
.^^# $
Column^^$ *
<^^* +
string^^+ 1
>^^1 2
(^^2 3
type^^3 7
:^^7 8
$str^^9 H
,^^H I
nullable^^J R
:^^R S
false^^T Y
)^^Y Z
,^^Z [
FoundedDate__ 
=__  !
table__" '
.__' (
Column__( .
<__. /
DateTime__/ 7
>__7 8
(__8 9
type__9 =
:__= >
$str__? J
,__J K
nullable__L T
:__T U
false__V [
)__[ \
,__\ ]
LogoUrl`` 
=`` 
table`` #
.``# $
Column``$ *
<``* +
string``+ 1
>``1 2
(``2 3
type``3 7
:``7 8
$str``9 H
,``H I
nullable``J R
:``R S
false``T Y
)``Y Z
,``Z [
Descriptionaa 
=aa  !
tableaa" '
.aa' (
Columnaa( .
<aa. /
stringaa/ 5
>aa5 6
(aa6 7
typeaa7 ;
:aa; <
$straa= L
,aaL M
nullableaaN V
:aaV W
falseaaX ]
)aa] ^
}bb 
,bb 
constraintscc 
:cc 
tablecc "
=>cc# %
{dd 
tableee 
.ee 

PrimaryKeyee $
(ee$ %
$stree% 3
,ee3 4
xee5 6
=>ee7 9
xee: ;
.ee; <
Idee< >
)ee> ?
;ee? @
}ff 
)ff 
;ff 
migrationBuilderhh 
.hh 
CreateTablehh (
(hh( )
nameii 
:ii 
$strii !
,ii! "
columnsjj 
:jj 
tablejj 
=>jj !
newjj" %
{kk 
Idll 
=ll 
tablell 
.ll 
Columnll %
<ll% &
Guidll& *
>ll* +
(ll+ ,
typell, 0
:ll0 1
$strll2 D
,llD E
nullablellF N
:llN O
falsellP U
)llU V
,llV W
Titlemm 
=mm 
tablemm !
.mm! "
Columnmm" (
<mm( )
stringmm) /
>mm/ 0
(mm0 1
typemm1 5
:mm5 6
$strmm7 F
,mmF G
nullablemmH P
:mmP Q
falsemmR W
)mmW X
,mmX Y
Contentnn 
=nn 
tablenn #
.nn# $
Columnnn$ *
<nn* +
stringnn+ 1
>nn1 2
(nn2 3
typenn3 7
:nn7 8
$strnn9 H
,nnH I
nullablennJ R
:nnR S
falsennT Y
)nnY Z
,nnZ [
LastUpdatedoo 
=oo  !
tableoo" '
.oo' (
Columnoo( .
<oo. /
DateTimeoo/ 7
>oo7 8
(oo8 9
typeoo9 =
:oo= >
$stroo? J
,ooJ K
nullableooL T
:ooT U
falseooV [
)oo[ \
,oo\ ]
IsActivepp 
=pp 
tablepp $
.pp$ %
Columnpp% +
<pp+ ,
boolpp, 0
>pp0 1
(pp1 2
typepp2 6
:pp6 7
$strpp8 =
,pp= >
nullablepp? G
:ppG H
falseppI N
)ppN O
}qq 
,qq 
constraintsrr 
:rr 
tablerr "
=>rr# %
{ss 
tablett 
.tt 

PrimaryKeytt $
(tt$ %
$strtt% 3
,tt3 4
xtt5 6
=>tt7 9
xtt: ;
.tt; <
Idtt< >
)tt> ?
;tt? @
}uu 
)uu 
;uu 
migrationBuilderww 
.ww 
CreateTableww (
(ww( )
namexx 
:xx 
$strxx "
,xx" #
columnsyy 
:yy 
tableyy 
=>yy !
newyy" %
{zz 
Id{{ 
={{ 
table{{ 
.{{ 
Column{{ %
<{{% &
Guid{{& *
>{{* +
({{+ ,
type{{, 0
:{{0 1
$str{{2 D
,{{D E
nullable{{F N
:{{N O
false{{P U
){{U V
,{{V W
Title|| 
=|| 
table|| !
.||! "
Column||" (
<||( )
string||) /
>||/ 0
(||0 1
type||1 5
:||5 6
$str||7 F
,||F G
nullable||H P
:||P Q
false||R W
)||W X
,||X Y
Content}} 
=}} 
table}} #
.}}# $
Column}}$ *
<}}* +
string}}+ 1
>}}1 2
(}}2 3
type}}3 7
:}}7 8
$str}}9 H
,}}H I
nullable}}J R
:}}R S
false}}T Y
)}}Y Z
,}}Z [
LastUpdated~~ 
=~~  !
table~~" '
.~~' (
Column~~( .
<~~. /
DateTime~~/ 7
>~~7 8
(~~8 9
type~~9 =
:~~= >
$str~~? J
,~~J K
nullable~~L T
:~~T U
false~~V [
)~~[ \
,~~\ ]
IsActive 
= 
table $
.$ %
Column% +
<+ ,
bool, 0
>0 1
(1 2
type2 6
:6 7
$str8 =
,= >
nullable? G
:G H
falseI N
)N O
}
ÄÄ 
,
ÄÄ 
constraints
ÅÅ 
:
ÅÅ 
table
ÅÅ "
=>
ÅÅ# %
{
ÇÇ 
table
ÉÉ 
.
ÉÉ 

PrimaryKey
ÉÉ $
(
ÉÉ$ %
$str
ÉÉ% 4
,
ÉÉ4 5
x
ÉÉ6 7
=>
ÉÉ8 :
x
ÉÉ; <
.
ÉÉ< =
Id
ÉÉ= ?
)
ÉÉ? @
;
ÉÉ@ A
}
ÑÑ 
)
ÑÑ 
;
ÑÑ 
migrationBuilder
ÜÜ 
.
ÜÜ 

UpdateData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá $
,
áá$ %
	keyColumn
àà 
:
àà 
$str
àà 
,
àà  
keyValue
ââ 
:
ââ 
$str
ââ +
,
ââ+ ,
columns
ää 
:
ää 
new
ää 
[
ää 
]
ää 
{
ää  
$str
ää! 3
,
ää3 4
$str
ää5 A
,
ääA B
$str
ääC Q
,
ääQ R
$str
ääS b
}
ääc d
,
ääd e
values
ãã 
:
ãã 
new
ãã 
object
ãã "
[
ãã" #
]
ãã# $
{
ãã% &
$str
ãã' M
,
ããM N
new
ããO R
DateTime
ããS [
(
ãã[ \
$num
ãã\ `
,
ãã` a
$num
ããb c
,
ããc d
$num
ããe g
,
ããg h
$num
ããi j
,
ããj k
$num
ããl n
,
ããn o
$num
ããp q
,
ããq r
$num
ããs t
,
ããt u
DateTimeKindããv Ç
.ããÇ É
UtcããÉ Ü
)ããÜ á
.ããá à
AddTicksããà ê
(ããê ë
$numããë ï
)ããï ñ
,ããñ ó
$strããò Ó
,ããÓ Ô
$strãã ñ
}ããó ò
)ããò ô
;ããô ö
migrationBuilder
çç 
.
çç 

InsertData
çç '
(
çç' (
table
éé 
:
éé 
$str
éé '
,
éé' (
columns
èè 
:
èè 
new
èè 
[
èè 
]
èè 
{
èè  
$str
èè! %
,
èè% &
$str
èè' 4
,
èè4 5
$str
èè6 D
,
èèD E
$str
èèF P
,
èèP Q
$str
èèR ]
,
èè] ^
$str
èè_ l
,
èèl m
$str
èèn }
,
èè} ~
$strèè â
,èèâ ä
$strèèã †
,èè† °
$strèè¢ ±
,èè± ≤
$strèè≥ ¬
,èè¬ √
$strèèƒ —
,èè— “
$strèè” ﬂ
,èèﬂ ‡
$strèè· È
,èèÈ Í
$strèèÎ ¯
,èè¯ ˘
$strèè˙ à
,èèà â
$strèèä ï
,èèï ñ
$strèèó §
}èè• ¶
,èè¶ ß
values
êê 
:
êê 
new
êê 
object
êê "
[
êê" #
,
êê# $
]
êê$ %
{
ëë 
{
íí 
new
íí 
Guid
íí 
(
íí 
$str
íí E
)
ííE F
,
ííF G
$strííH Ã
,ííÃ Õ
$strííŒ à
,ííà â
$strííä ö
,ííö õ
nullííú †
,íí† °
nullíí¢ ¶
,íí¶ ß
$stríí® Ÿ
,ííŸ ⁄
$stríí€ ‰
,íí‰ Â
$strííÊ ˇ
,ííˇ Ä
$strííÅ â
,ííâ ä
$strííã ï
,ííï ñ
$strííó ≥
,íí≥ ¥
$strííµ ¬
,íí¬ √
$numííƒ ≈
,íí≈ ∆
$stríí« ﬂ
,ííﬂ ‡
$stríí· ˆ
,ííˆ ˜
nullíí¯ ¸
,íí¸ ˝
nullíí˛ Ç
}ííÉ Ñ
,ííÑ Ö
{
ìì 
new
ìì 
Guid
ìì 
(
ìì 
$str
ìì E
)
ììE F
,
ììF G
$strììH ë
,ììë í
$strììì Õ
,ììÕ Œ
$strììœ ·
,ìì· ‚
nullìì„ Á
,ììÁ Ë
nullììÈ Ì
,ììÌ Ó
$strììÔ †
,ìì† °
$strìì¢ ´
,ìì´ ¨
$strìì≠ ∆
,ìì∆ «
$strìì» –
,ìì– —
$strìì“ ‹
,ìì‹ ›
$strììﬁ ˙
,ìì˙ ˚
$strìì¸ â
,ììâ ä
$numììã å
,ììå ç
$strììé π
,ììπ ∫
$strììª “
,ìì“ ”
nullìì‘ ÿ
,ììÿ Ÿ
nullìì⁄ ﬁ
}ììﬂ ‡
,ìì‡ ·
{
îî 
new
îî 
Guid
îî 
(
îî 
$str
îî E
)
îîE F
,
îîF G
$strîîH ”
,îî” ‘
$strîî’ è
,îîè ê
$strîîë ô
,îîô ö
nullîîõ ü
,îîü †
nullîî° •
,îî• ¶
$strîîß ÿ
,îîÿ Ÿ
$strîî⁄ „
,îî„ ‰
$strîîÂ °
,îî° ¢
$strîî£ ∑
,îî∑ ∏
$strîîπ √
,îî√ ƒ
$strîî≈ ·
,îî· ‚
$strîî„ 
,îî Ò
$numîîÚ Û
,îîÛ Ù
$strîîı ñ
,îîñ ó
$strîîò π
,îîπ ∫
nullîîª ø
,îîø ¿
nullîî¡ ≈
}îî∆ «
,îî« »
{
ïï 
new
ïï 
Guid
ïï 
(
ïï 
$str
ïï E
)
ïïE F
,
ïïF G
$strïïH è
,ïïè ê
$strïïë À
,ïïÀ Ã
$strïïÕ ‰
,ïï‰ Â
nullïïÊ Í
,ïïÍ Î
nullïïÏ 
,ïï Ò
$strïïÚ £
,ïï£ §
$strïï• Æ
,ïïÆ Ø
$strïï∞ …
,ïï…  
$strïïÀ Ò
,ïïÒ Ú
$strïïÛ ¸
,ïï¸ ˝
$strïï˛ ö
,ïïö õ
$strïïú ©
,ïï© ™
$numïï´ ¨
,ïï¨ ≠
$strïïÆ Œ
,ïïŒ œ
$strïï– Ë
,ïïË È
nullïïÍ Ó
,ïïÓ Ô
nullïï Ù
}ïïı ˆ
,ïïˆ ˜
{
ññ 
new
ññ 
Guid
ññ 
(
ññ 
$str
ññ E
)
ññE F
,
ññF G
$strññH ë
,ññë í
$strññì Õ
,ññÕ Œ
$strññœ ·
,ññ· ‚
nullññ„ Á
,ññÁ Ë
nullññÈ Ì
,ññÌ Ó
$strññÔ †
,ññ† °
$strññ¢ ´
,ññ´ ¨
$strññ≠ ∆
,ññ∆ «
$strññ» Ê
,ññÊ Á
$strññË Ô
,ññÔ 
$strññÒ ç
,ññç é
$strññè ú
,ññú ù
$numññû ü
,ññü †
$strññ° ø
,ññø ¿
$strññ¡ Â
,ññÂ Ê
nullññÁ Î
,ññÎ Ï
nullññÌ Ò
}ññÚ Û
,ññÛ Ù
{
óó 
new
óó 
Guid
óó 
(
óó 
$str
óó E
)
óóE F
,
óóF G
$stróóH æ
,óóæ ø
$stróó¿ ù
,óóù û
$stróóü ©
,óó© ™
nullóó´ Ø
,óóØ ∞
nullóó± µ
,óóµ ∂
$stróó∑ ˚
,óó˚ ¸
$stróó˝ Ü
,óóÜ á
$stróóà ≠
,óó≠ Æ
$stróóØ ’
,óó’ ÷
$stróó◊ ·
,óó· ‚
$stróó„ ˇ
,óóˇ Ä
$stróóÅ é
,óóé è
$numóóê ë
,óóë í
$stróóì ®
,óó® ©
$stróó™ ø
,óóø ¿
nullóó¡ ≈
,óó≈ ∆
nullóó« À
}óóÃ Õ
,óóÕ Œ
{
òò 
new
òò 
Guid
òò 
(
òò 
$str
òò E
)
òòE F
,
òòF G
$stròòH è
,òòè ê
$stròòë ∫
,òò∫ ª
$stròòº  
,òò  À
nullòòÃ –
,òò– —
nullòò“ ÷
,òò÷ ◊
$stròòÿ â
,òòâ ä
$stròòã î
,òòî ï
$stròòñ ¢
,òò¢ £
$stròò§ ¥
,òò¥ µ
$stròò∂ ¿
,òò¿ ¡
$stròò¬ ÿ
,òòÿ Ÿ
$stròò⁄ Ê
,òòÊ Á
$numòòË È
,òòÈ Í
$stròòÎ ¸
,òò¸ ˝
$stròò˛ ì
,òòì î
nullòòï ô
,òòô ö
nullòòõ ü
}òò† °
,òò° ¢
{
ôô 
new
ôô 
Guid
ôô 
(
ôô 
$str
ôô E
)
ôôE F
,
ôôF G
$strôôH Ñ
,ôôÑ Ö
$strôôÜ ¿
,ôô¿ ¡
$strôô¬ “
,ôô“ ”
nullôô‘ ÿ
,ôôÿ Ÿ
nullôô⁄ ﬁ
,ôôﬁ ﬂ
$strôô‡ ë
,ôôë í
$strôôì ú
,ôôú ù
$strôôû ∑
,ôô∑ ∏
$strôôπ ¡
,ôô¡ ¬
$strôô√ Õ
,ôôÕ Œ
$strôôœ Î
,ôôÎ Ï
$strôôÌ ˙
,ôô˙ ˚
$numôô¸ ˝
,ôô˝ ˛
$strôôˇ ê
,ôôê ë
$strôôí °
,ôô° ¢
nullôô£ ß
,ôôß ®
nullôô© ≠
}ôôÆ Ø
,ôôØ ∞
{
öö 
new
öö 
Guid
öö 
(
öö 
$str
öö E
)
ööE F
,
ööF G
$strööH ®
,öö® ©
$ströö™ ÿ
,ööÿ Ÿ
$ströö⁄ ‰
,öö‰ Â
nullööÊ Í
,ööÍ Î
nullööÏ 
,öö Ò
$strööÚ £
,öö£ §
$ströö• Æ
,ööÆ Ø
$ströö∞  
,öö  À
$strööÃ Û
,ööÛ Ù
$strööı ˇ
,ööˇ Ä
$strööÅ ù
,ööù û
$strööü ¨
,öö¨ ≠
$numööÆ Ø
,ööØ ∞
$ströö± ∆
,öö∆ «
$ströö» ÿ
,ööÿ Ÿ
nullöö⁄ ﬁ
,ööﬁ ﬂ
nullöö‡ ‰
}ööÂ Ê
,ööÊ Á
{
õõ 
new
õõ 
Guid
õõ 
(
õõ 
$str
õõ E
)
õõE F
,
õõF G
$str
õõH s
,
õõs t
$strõõu ô
,õõô ö
$strõõõ •
,õõ• ¶
nullõõß ´
,õõ´ ¨
nullõõ≠ ±
,õõ± ≤
$strõõ≥ ˘
,õõ˘ ˙
$strõõ˚ Ñ
,õõÑ Ö
$strõõÜ ü
,õõü †
$strõõ° Œ
,õõŒ œ
$strõõ– ‹
,õõ‹ ›
$strõõﬁ ˙
,õõ˙ ˚
$strõõ¸ â
,õõâ ä
$numõõã å
,õõå ç
$strõõé ª
,õõª º
$strõõΩ ›
,õõ› ﬁ
nullõõﬂ „
,õõ„ ‰
nullõõÂ È
}õõÍ Î
,õõÎ Ï
{
úú 
new
úú 
Guid
úú 
(
úú 
$str
úú E
)
úúE F
,
úúF G
$strúúH è
,úúè ê
$strúúë À
,úúÀ Ã
$strúúÕ ‰
,úú‰ Â
nullúúÊ Í
,úúÍ Î
nullúúÏ 
,úú Ò
$strúúÚ £
,úú£ §
$strúú• Æ
,úúÆ Ø
$strúú∞ …
,úú…  
$strúúÀ Ì
,úúÌ Ó
$strúúÔ ˚
,úú˚ ¸
$strúú˝ ô
,úúô ö
$strúúõ ®
,úú® ©
$numúú™ ´
,úú´ ¨
$strúú≠ Õ
,úúÕ Œ
$strúúœ Ë
,úúË È
nullúúÍ Ó
,úúÓ Ô
nullúú Ù
}úúı ˆ
,úúˆ ˜
{
ùù 
new
ùù 
Guid
ùù 
(
ùù 
$str
ùù E
)
ùùE F
,
ùùF G
$strùùH ∞
,ùù∞ ±
$strùù≤ Ï
,ùùÏ Ì
$strùùÓ ˜
,ùù˜ ¯
nullùù˘ ˝
,ùù˝ ˛
nullùùˇ É
,ùùÉ Ñ
$strùùÖ ∂
,ùù∂ ∑
$strùù∏ ¡
,ùù¡ ¬
$strùù√ ‹
,ùù‹ ›
$strùùﬁ ˘
,ùù˘ ˙
$strùù˚ Ö
,ùùÖ Ü
$strùùá £
,ùù£ §
$strùù• ≤
,ùù≤ ≥
$numùù¥ µ
,ùùµ ∂
$strùù∑ À
,ùùÀ Ã
$strùùÕ €
,ùù€ ‹
nullùù› ·
,ùù· ‚
nullùù„ Á
}ùùË È
,ùùÈ Í
{
ûû 
new
ûû 
Guid
ûû 
(
ûû 
$str
ûû E
)
ûûE F
,
ûûF G
$strûûH û
,ûûû ü
$strûû† ≈
,ûû≈ ∆
$strûû« œ
,ûûœ –
nullûû— ’
,ûû’ ÷
nullûû◊ €
,ûû€ ‹
$strûû› é
,ûûé è
$strûûê ô
,ûûô ö
$strûûõ µ
,ûûµ ∂
$strûû∑ œ
,ûûœ –
$strûû— €
,ûû€ ‹
$strûû› ˘
,ûû˘ ˙
$strûû˚ à
,ûûà â
$numûûä ã
,ûûã å
$strûûç ¢
,ûû¢ £
$strûû§ µ
,ûûµ ∂
nullûû∑ ª
,ûûª º
nullûûΩ ¡
}ûû¬ √
}
üü 
)
üü 
;
üü 
}
†† 	
	protected
££ 
override
££ 
void
££ 
Down
££  $
(
££$ %
MigrationBuilder
££% 5
migrationBuilder
££6 F
)
££F G
{
§§ 	
migrationBuilder
•• 
.
•• 
	DropTable
•• &
(
••& '
name
¶¶ 
:
¶¶ 
$str
¶¶ !
)
¶¶! "
;
¶¶" #
migrationBuilder
®® 
.
®® 
	DropTable
®® &
(
®®& '
name
©© 
:
©© 
$str
©© !
)
©©! "
;
©©" #
migrationBuilder
´´ 
.
´´ 
	DropTable
´´ &
(
´´& '
name
¨¨ 
:
¨¨ 
$str
¨¨ "
)
¨¨" #
;
¨¨# $
migrationBuilder
ÆÆ 
.
ÆÆ 

DeleteData
ÆÆ '
(
ÆÆ' (
table
ØØ 
:
ØØ 
$str
ØØ '
,
ØØ' (
	keyColumn
∞∞ 
:
∞∞ 
$str
∞∞ 
,
∞∞  
keyValue
±± 
:
±± 
new
±± 
Guid
±± "
(
±±" #
$str
±±# I
)
±±I J
)
±±J K
;
±±K L
migrationBuilder
≥≥ 
.
≥≥ 

DeleteData
≥≥ '
(
≥≥' (
table
¥¥ 
:
¥¥ 
$str
¥¥ '
,
¥¥' (
	keyColumn
µµ 
:
µµ 
$str
µµ 
,
µµ  
keyValue
∂∂ 
:
∂∂ 
new
∂∂ 
Guid
∂∂ "
(
∂∂" #
$str
∂∂# I
)
∂∂I J
)
∂∂J K
;
∂∂K L
migrationBuilder
∏∏ 
.
∏∏ 

DeleteData
∏∏ '
(
∏∏' (
table
ππ 
:
ππ 
$str
ππ '
,
ππ' (
	keyColumn
∫∫ 
:
∫∫ 
$str
∫∫ 
,
∫∫  
keyValue
ªª 
:
ªª 
new
ªª 
Guid
ªª "
(
ªª" #
$str
ªª# I
)
ªªI J
)
ªªJ K
;
ªªK L
migrationBuilder
ΩΩ 
.
ΩΩ 

DeleteData
ΩΩ '
(
ΩΩ' (
table
ææ 
:
ææ 
$str
ææ '
,
ææ' (
	keyColumn
øø 
:
øø 
$str
øø 
,
øø  
keyValue
¿¿ 
:
¿¿ 
new
¿¿ 
Guid
¿¿ "
(
¿¿" #
$str
¿¿# I
)
¿¿I J
)
¿¿J K
;
¿¿K L
migrationBuilder
¬¬ 
.
¬¬ 

DeleteData
¬¬ '
(
¬¬' (
table
√√ 
:
√√ 
$str
√√ '
,
√√' (
	keyColumn
ƒƒ 
:
ƒƒ 
$str
ƒƒ 
,
ƒƒ  
keyValue
≈≈ 
:
≈≈ 
new
≈≈ 
Guid
≈≈ "
(
≈≈" #
$str
≈≈# I
)
≈≈I J
)
≈≈J K
;
≈≈K L
migrationBuilder
«« 
.
«« 

DeleteData
«« '
(
««' (
table
»» 
:
»» 
$str
»» '
,
»»' (
	keyColumn
…… 
:
…… 
$str
…… 
,
……  
keyValue
   
:
   
new
   
Guid
   "
(
  " #
$str
  # I
)
  I J
)
  J K
;
  K L
migrationBuilder
ÃÃ 
.
ÃÃ 

DeleteData
ÃÃ '
(
ÃÃ' (
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ '
,
ÕÕ' (
	keyColumn
ŒŒ 
:
ŒŒ 
$str
ŒŒ 
,
ŒŒ  
keyValue
œœ 
:
œœ 
new
œœ 
Guid
œœ "
(
œœ" #
$str
œœ# I
)
œœI J
)
œœJ K
;
œœK L
migrationBuilder
—— 
.
—— 

DeleteData
—— '
(
——' (
table
““ 
:
““ 
$str
““ '
,
““' (
	keyColumn
”” 
:
”” 
$str
”” 
,
””  
keyValue
‘‘ 
:
‘‘ 
new
‘‘ 
Guid
‘‘ "
(
‘‘" #
$str
‘‘# I
)
‘‘I J
)
‘‘J K
;
‘‘K L
migrationBuilder
÷÷ 
.
÷÷ 

DeleteData
÷÷ '
(
÷÷' (
table
◊◊ 
:
◊◊ 
$str
◊◊ '
,
◊◊' (
	keyColumn
ÿÿ 
:
ÿÿ 
$str
ÿÿ 
,
ÿÿ  
keyValue
ŸŸ 
:
ŸŸ 
new
ŸŸ 
Guid
ŸŸ "
(
ŸŸ" #
$str
ŸŸ# I
)
ŸŸI J
)
ŸŸJ K
;
ŸŸK L
migrationBuilder
€€ 
.
€€ 

DeleteData
€€ '
(
€€' (
table
‹‹ 
:
‹‹ 
$str
‹‹ '
,
‹‹' (
	keyColumn
›› 
:
›› 
$str
›› 
,
››  
keyValue
ﬁﬁ 
:
ﬁﬁ 
new
ﬁﬁ 
Guid
ﬁﬁ "
(
ﬁﬁ" #
$str
ﬁﬁ# I
)
ﬁﬁI J
)
ﬁﬁJ K
;
ﬁﬁK L
migrationBuilder
‡‡ 
.
‡‡ 

DeleteData
‡‡ '
(
‡‡' (
table
·· 
:
·· 
$str
·· '
,
··' (
	keyColumn
‚‚ 
:
‚‚ 
$str
‚‚ 
,
‚‚  
keyValue
„„ 
:
„„ 
new
„„ 
Guid
„„ "
(
„„" #
$str
„„# I
)
„„I J
)
„„J K
;
„„K L
migrationBuilder
ÂÂ 
.
ÂÂ 

DeleteData
ÂÂ '
(
ÂÂ' (
table
ÊÊ 
:
ÊÊ 
$str
ÊÊ '
,
ÊÊ' (
	keyColumn
ÁÁ 
:
ÁÁ 
$str
ÁÁ 
,
ÁÁ  
keyValue
ËË 
:
ËË 
new
ËË 
Guid
ËË "
(
ËË" #
$str
ËË# I
)
ËËI J
)
ËËJ K
;
ËËK L
migrationBuilder
ÍÍ 
.
ÍÍ 

DeleteData
ÍÍ '
(
ÍÍ' (
table
ÎÎ 
:
ÎÎ 
$str
ÎÎ '
,
ÎÎ' (
	keyColumn
ÏÏ 
:
ÏÏ 
$str
ÏÏ 
,
ÏÏ  
keyValue
ÌÌ 
:
ÌÌ 
new
ÌÌ 
Guid
ÌÌ "
(
ÌÌ" #
$str
ÌÌ# I
)
ÌÌI J
)
ÌÌJ K
;
ÌÌK L
migrationBuilder
ÔÔ 
.
ÔÔ 

UpdateData
ÔÔ '
(
ÔÔ' (
table
 
:
 
$str
 $
,
$ %
	keyColumn
ÒÒ 
:
ÒÒ 
$str
ÒÒ 
,
ÒÒ  
keyValue
ÚÚ 
:
ÚÚ 
$str
ÚÚ +
,
ÚÚ+ ,
columns
ÛÛ 
:
ÛÛ 
new
ÛÛ 
[
ÛÛ 
]
ÛÛ 
{
ÛÛ  
$str
ÛÛ! 3
,
ÛÛ3 4
$str
ÛÛ5 A
,
ÛÛA B
$str
ÛÛC Q
,
ÛÛQ R
$str
ÛÛS b
}
ÛÛc d
,
ÛÛd e
values
ÙÙ 
:
ÙÙ 
new
ÙÙ 
object
ÙÙ "
[
ÙÙ" #
]
ÙÙ# $
{
ÙÙ% &
$str
ÙÙ' M
,
ÙÙM N
new
ÙÙO R
DateTime
ÙÙS [
(
ÙÙ[ \
$num
ÙÙ\ `
,
ÙÙ` a
$num
ÙÙb c
,
ÙÙc d
$num
ÙÙe g
,
ÙÙg h
$num
ÙÙi j
,
ÙÙj k
$num
ÙÙl n
,
ÙÙn o
$num
ÙÙp q
,
ÙÙq r
$num
ÙÙs v
,
ÙÙv w
DateTimeKindÙÙx Ñ
.ÙÙÑ Ö
UtcÙÙÖ à
)ÙÙà â
.ÙÙâ ä
AddTicksÙÙä í
(ÙÙí ì
$numÙÙì ó
)ÙÙó ò
,ÙÙò ô
$strÙÙö 
,ÙÙ Ò
$strÙÙÚ ò
}ÙÙô ö
)ÙÙö õ
;ÙÙõ ú
migrationBuilder
ˆˆ 
.
ˆˆ 

InsertData
ˆˆ '
(
ˆˆ' (
table
˜˜ 
:
˜˜ 
$str
˜˜ '
,
˜˜' (
columns
¯¯ 
:
¯¯ 
new
¯¯ 
[
¯¯ 
]
¯¯ 
{
¯¯  
$str
¯¯! %
,
¯¯% &
$str
¯¯' 4
,
¯¯4 5
$str
¯¯6 D
,
¯¯D E
$str
¯¯F P
,
¯¯P Q
$str
¯¯R ]
,
¯¯] ^
$str
¯¯_ l
,
¯¯l m
$str
¯¯n }
,
¯¯} ~
$str¯¯ â
,¯¯â ä
$str¯¯ã †
,¯¯† °
$str¯¯¢ ±
,¯¯± ≤
$str¯¯≥ ¬
,¯¯¬ √
$str¯¯ƒ —
,¯¯— “
$str¯¯” ﬂ
,¯¯ﬂ ‡
$str¯¯· È
,¯¯È Í
$str¯¯Î ¯
,¯¯¯ ˘
$str¯¯˙ à
,¯¯à â
$str¯¯ä ï
,¯¯ï ñ
$str¯¯ó §
}¯¯• ¶
,¯¯¶ ß
values
˘˘ 
:
˘˘ 
new
˘˘ 
object
˘˘ "
[
˘˘" #
,
˘˘# $
]
˘˘$ %
{
˙˙ 
{
˚˚ 
new
˚˚ 
Guid
˚˚ 
(
˚˚ 
$str
˚˚ E
)
˚˚E F
,
˚˚F G
$str˚˚H Ñ
,˚˚Ñ Ö
$str˚˚Ü ¿
,˚˚¿ ¡
$str˚˚¬ “
,˚˚“ ”
null˚˚‘ ÿ
,˚˚ÿ Ÿ
null˚˚⁄ ﬁ
,˚˚ﬁ ﬂ
$str˚˚‡ ë
,˚˚ë í
$str˚˚ì ú
,˚˚ú ù
$str˚˚û ∑
,˚˚∑ ∏
$str˚˚π ¡
,˚˚¡ ¬
$str˚˚√ Õ
,˚˚Õ Œ
$str˚˚œ Î
,˚˚Î Ï
$str˚˚Ì ˙
,˚˚˙ ˚
$num˚˚¸ ˝
,˚˚˝ ˛
$str˚˚ˇ ê
,˚˚ê ë
$str˚˚í °
,˚˚° ¢
null˚˚£ ß
,˚˚ß ®
null˚˚© ≠
}˚˚Æ Ø
,˚˚Ø ∞
{
¸¸ 
new
¸¸ 
Guid
¸¸ 
(
¸¸ 
$str
¸¸ E
)
¸¸E F
,
¸¸F G
$str¸¸H ®
,¸¸® ©
$str¸¸™ ÿ
,¸¸ÿ Ÿ
$str¸¸⁄ ‰
,¸¸‰ Â
null¸¸Ê Í
,¸¸Í Î
null¸¸Ï 
,¸¸ Ò
$str¸¸Ú £
,¸¸£ §
$str¸¸• Æ
,¸¸Æ Ø
$str¸¸∞  
,¸¸  À
$str¸¸Ã Û
,¸¸Û Ù
$str¸¸ı ˇ
,¸¸ˇ Ä
$str¸¸Å ù
,¸¸ù û
$str¸¸ü ¨
,¸¸¨ ≠
$num¸¸Æ Ø
,¸¸Ø ∞
$str¸¸± ∆
,¸¸∆ «
$str¸¸» ÿ
,¸¸ÿ Ÿ
null¸¸⁄ ﬁ
,¸¸ﬁ ﬂ
null¸¸‡ ‰
}¸¸Â Ê
,¸¸Ê Á
{
˝˝ 
new
˝˝ 
Guid
˝˝ 
(
˝˝ 
$str
˝˝ E
)
˝˝E F
,
˝˝F G
$str˝˝H è
,˝˝è ê
$str˝˝ë À
,˝˝À Ã
$str˝˝Õ ‰
,˝˝‰ Â
null˝˝Ê Í
,˝˝Í Î
null˝˝Ï 
,˝˝ Ò
$str˝˝Ú £
,˝˝£ §
$str˝˝• Æ
,˝˝Æ Ø
$str˝˝∞ …
,˝˝…  
$str˝˝À Ì
,˝˝Ì Ó
$str˝˝Ô ˚
,˝˝˚ ¸
$str˝˝˝ ô
,˝˝ô ö
$str˝˝õ ®
,˝˝® ©
$num˝˝™ ´
,˝˝´ ¨
$str˝˝≠ Õ
,˝˝Õ Œ
$str˝˝œ Ë
,˝˝Ë È
null˝˝Í Ó
,˝˝Ó Ô
null˝˝ Ù
}˝˝ı ˆ
,˝˝ˆ ˜
{
˛˛ 
new
˛˛ 
Guid
˛˛ 
(
˛˛ 
$str
˛˛ E
)
˛˛E F
,
˛˛F G
$str˛˛H æ
,˛˛æ ø
$str˛˛¿ ù
,˛˛ù û
$str˛˛ü ©
,˛˛© ™
null˛˛´ Ø
,˛˛Ø ∞
null˛˛± µ
,˛˛µ ∂
$str˛˛∑ ˚
,˛˛˚ ¸
$str˛˛˝ Ü
,˛˛Ü á
$str˛˛à ≠
,˛˛≠ Æ
$str˛˛Ø ’
,˛˛’ ÷
$str˛˛◊ ·
,˛˛· ‚
$str˛˛„ ˇ
,˛˛ˇ Ä
$str˛˛Å é
,˛˛é è
$num˛˛ê ë
,˛˛ë í
$str˛˛ì ®
,˛˛® ©
$str˛˛™ ø
,˛˛ø ¿
null˛˛¡ ≈
,˛˛≈ ∆
null˛˛« À
}˛˛Ã Õ
,˛˛Õ Œ
{
ˇˇ 
new
ˇˇ 
Guid
ˇˇ 
(
ˇˇ 
$str
ˇˇ E
)
ˇˇE F
,
ˇˇF G
$strˇˇH Ã
,ˇˇÃ Õ
$strˇˇŒ à
,ˇˇà â
$strˇˇä ö
,ˇˇö õ
nullˇˇú †
,ˇˇ† °
nullˇˇ¢ ¶
,ˇˇ¶ ß
$strˇˇ® Ÿ
,ˇˇŸ ⁄
$strˇˇ€ ‰
,ˇˇ‰ Â
$strˇˇÊ ˇ
,ˇˇˇ Ä
$strˇˇÅ â
,ˇˇâ ä
$strˇˇã ï
,ˇˇï ñ
$strˇˇó ≥
,ˇˇ≥ ¥
$strˇˇµ ¬
,ˇˇ¬ √
$numˇˇƒ ≈
,ˇˇ≈ ∆
$strˇˇ« ﬂ
,ˇˇﬂ ‡
$strˇˇ· ˆ
,ˇˇˆ ˜
nullˇˇ¯ ¸
,ˇˇ¸ ˝
nullˇˇ˛ Ç
}ˇˇÉ Ñ
,ˇˇÑ Ö
{
ÄÄ 
new
ÄÄ 
Guid
ÄÄ 
(
ÄÄ 
$str
ÄÄ E
)
ÄÄE F
,
ÄÄF G
$strÄÄH ∞
,ÄÄ∞ ±
$strÄÄ≤ Ï
,ÄÄÏ Ì
$strÄÄÓ ˜
,ÄÄ˜ ¯
nullÄÄ˘ ˝
,ÄÄ˝ ˛
nullÄÄˇ É
,ÄÄÉ Ñ
$strÄÄÖ ∂
,ÄÄ∂ ∑
$strÄÄ∏ ¡
,ÄÄ¡ ¬
$strÄÄ√ ‹
,ÄÄ‹ ›
$strÄÄﬁ ˘
,ÄÄ˘ ˙
$strÄÄ˚ Ö
,ÄÄÖ Ü
$strÄÄá £
,ÄÄ£ §
$strÄÄ• ≤
,ÄÄ≤ ≥
$numÄÄ¥ µ
,ÄÄµ ∂
$strÄÄ∑ À
,ÄÄÀ Ã
$strÄÄÕ €
,ÄÄ€ ‹
nullÄÄ› ·
,ÄÄ· ‚
nullÄÄ„ Á
}ÄÄË È
,ÄÄÈ Í
{
ÅÅ 
new
ÅÅ 
Guid
ÅÅ 
(
ÅÅ 
$str
ÅÅ E
)
ÅÅE F
,
ÅÅF G
$strÅÅH ë
,ÅÅë í
$strÅÅì Õ
,ÅÅÕ Œ
$strÅÅœ ·
,ÅÅ· ‚
nullÅÅ„ Á
,ÅÅÁ Ë
nullÅÅÈ Ì
,ÅÅÌ Ó
$strÅÅÔ †
,ÅÅ† °
$strÅÅ¢ ´
,ÅÅ´ ¨
$strÅÅ≠ ∆
,ÅÅ∆ «
$strÅÅ» Ê
,ÅÅÊ Á
$strÅÅË Ô
,ÅÅÔ 
$strÅÅÒ ç
,ÅÅç é
$strÅÅè ú
,ÅÅú ù
$numÅÅû ü
,ÅÅü †
$strÅÅ° ø
,ÅÅø ¿
$strÅÅ¡ Â
,ÅÅÂ Ê
nullÅÅÁ Î
,ÅÅÎ Ï
nullÅÅÌ Ò
}ÅÅÚ Û
,ÅÅÛ Ù
{
ÇÇ 
new
ÇÇ 
Guid
ÇÇ 
(
ÇÇ 
$str
ÇÇ E
)
ÇÇE F
,
ÇÇF G
$str
ÇÇH s
,
ÇÇs t
$strÇÇu ô
,ÇÇô ö
$strÇÇõ •
,ÇÇ• ¶
nullÇÇß ´
,ÇÇ´ ¨
nullÇÇ≠ ±
,ÇÇ± ≤
$strÇÇ≥ ˘
,ÇÇ˘ ˙
$strÇÇ˚ Ñ
,ÇÇÑ Ö
$strÇÇÜ ü
,ÇÇü †
$strÇÇ° Œ
,ÇÇŒ œ
$strÇÇ– ‹
,ÇÇ‹ ›
$strÇÇﬁ ˙
,ÇÇ˙ ˚
$strÇÇ¸ â
,ÇÇâ ä
$numÇÇã å
,ÇÇå ç
$strÇÇé ª
,ÇÇª º
$strÇÇΩ ›
,ÇÇ› ﬁ
nullÇÇﬂ „
,ÇÇ„ ‰
nullÇÇÂ È
}ÇÇÍ Î
,ÇÇÎ Ï
{
ÉÉ 
new
ÉÉ 
Guid
ÉÉ 
(
ÉÉ 
$str
ÉÉ E
)
ÉÉE F
,
ÉÉF G
$strÉÉH û
,ÉÉû ü
$strÉÉ† ≈
,ÉÉ≈ ∆
$strÉÉ« œ
,ÉÉœ –
nullÉÉ— ’
,ÉÉ’ ÷
nullÉÉ◊ €
,ÉÉ€ ‹
$strÉÉ› é
,ÉÉé è
$strÉÉê ô
,ÉÉô ö
$strÉÉõ µ
,ÉÉµ ∂
$strÉÉ∑ œ
,ÉÉœ –
$strÉÉ— €
,ÉÉ€ ‹
$strÉÉ› ˘
,ÉÉ˘ ˙
$strÉÉ˚ à
,ÉÉà â
$numÉÉä ã
,ÉÉã å
$strÉÉç ¢
,ÉÉ¢ £
$strÉÉ§ µ
,ÉÉµ ∂
nullÉÉ∑ ª
,ÉÉª º
nullÉÉΩ ¡
}ÉÉ¬ √
,ÉÉ√ ƒ
{
ÑÑ 
new
ÑÑ 
Guid
ÑÑ 
(
ÑÑ 
$str
ÑÑ E
)
ÑÑE F
,
ÑÑF G
$strÑÑH è
,ÑÑè ê
$strÑÑë À
,ÑÑÀ Ã
$strÑÑÕ ‰
,ÑÑ‰ Â
nullÑÑÊ Í
,ÑÑÍ Î
nullÑÑÏ 
,ÑÑ Ò
$strÑÑÚ £
,ÑÑ£ §
$strÑÑ• Æ
,ÑÑÆ Ø
$strÑÑ∞ …
,ÑÑ…  
$strÑÑÀ Ò
,ÑÑÒ Ú
$strÑÑÛ ¸
,ÑÑ¸ ˝
$strÑÑ˛ ö
,ÑÑö õ
$strÑÑú ©
,ÑÑ© ™
$numÑÑ´ ¨
,ÑÑ¨ ≠
$strÑÑÆ Œ
,ÑÑŒ œ
$strÑÑ– Ë
,ÑÑË È
nullÑÑÍ Ó
,ÑÑÓ Ô
nullÑÑ Ù
}ÑÑı ˆ
,ÑÑˆ ˜
{
ÖÖ 
new
ÖÖ 
Guid
ÖÖ 
(
ÖÖ 
$str
ÖÖ E
)
ÖÖE F
,
ÖÖF G
$strÖÖH ë
,ÖÖë í
$strÖÖì Õ
,ÖÖÕ Œ
$strÖÖœ ·
,ÖÖ· ‚
nullÖÖ„ Á
,ÖÖÁ Ë
nullÖÖÈ Ì
,ÖÖÌ Ó
$strÖÖÔ †
,ÖÖ† °
$strÖÖ¢ ´
,ÖÖ´ ¨
$strÖÖ≠ ∆
,ÖÖ∆ «
$strÖÖ» –
,ÖÖ– —
$strÖÖ“ ‹
,ÖÖ‹ ›
$strÖÖﬁ ˙
,ÖÖ˙ ˚
$strÖÖ¸ â
,ÖÖâ ä
$numÖÖã å
,ÖÖå ç
$strÖÖé π
,ÖÖπ ∫
$strÖÖª “
,ÖÖ“ ”
nullÖÖ‘ ÿ
,ÖÖÿ Ÿ
nullÖÖ⁄ ﬁ
}ÖÖﬂ ‡
,ÖÖ‡ ·
{
ÜÜ 
new
ÜÜ 
Guid
ÜÜ 
(
ÜÜ 
$str
ÜÜ E
)
ÜÜE F
,
ÜÜF G
$strÜÜH è
,ÜÜè ê
$strÜÜë ∫
,ÜÜ∫ ª
$strÜÜº  
,ÜÜ  À
nullÜÜÃ –
,ÜÜ– —
nullÜÜ“ ÷
,ÜÜ÷ ◊
$strÜÜÿ â
,ÜÜâ ä
$strÜÜã î
,ÜÜî ï
$strÜÜñ ¢
,ÜÜ¢ £
$strÜÜ§ ¥
,ÜÜ¥ µ
$strÜÜ∂ ¿
,ÜÜ¿ ¡
$strÜÜ¬ ÿ
,ÜÜÿ Ÿ
$strÜÜ⁄ Ê
,ÜÜÊ Á
$numÜÜË È
,ÜÜÈ Í
$strÜÜÎ ¸
,ÜÜ¸ ˝
$strÜÜ˛ ì
,ÜÜì î
nullÜÜï ô
,ÜÜô ö
nullÜÜõ ü
}ÜÜ† °
,ÜÜ° ¢
{
áá 
new
áá 
Guid
áá 
(
áá 
$str
áá E
)
ááE F
,
ááF G
$strááH ”
,áá” ‘
$stráá’ è
,ááè ê
$strááë ô
,ááô ö
nullááõ ü
,ááü †
nulláá° •
,áá• ¶
$strááß ÿ
,ááÿ Ÿ
$stráá⁄ „
,áá„ ‰
$strááÂ °
,áá° ¢
$stráá£ ∑
,áá∑ ∏
$strááπ √
,áá√ ƒ
$stráá≈ ·
,áá· ‚
$stráá„ 
,áá Ò
$numááÚ Û
,ááÛ Ù
$strááı ñ
,ááñ ó
$strááò π
,ááπ ∫
nullááª ø
,ááø ¿
nulláá¡ ≈
}áá∆ «
}
àà 
)
àà 
;
àà 
}
ââ 	
}
ää 
}ãã ¿•
ÖD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240730035005_AddColumnSendClearEmail.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class #
AddColumnSendClearEmail 0
:1 2
	Migration3 <
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 
	AddColumnQQ &
<QQ& '
boolQQ' +
>QQ+ ,
(QQ, -
nameRR 
:RR 
$strRR &
,RR& '
tableSS 
:SS 
$strSS $
,SS$ %
typeTT 
:TT 
$strTT 
,TT 
nullableUU 
:UU 
falseUU 
,UU  
defaultValueVV 
:VV 
falseVV #
)VV# $
;VV$ %
migrationBuilderXX 
.XX 

UpdateDataXX '
(XX' (
tableYY 
:YY 
$strYY $
,YY$ %
	keyColumnZZ 
:ZZ 
$strZZ 
,ZZ  
keyValue[[ 
:[[ 
$str[[ +
,[[+ ,
columns\\ 
:\\ 
new\\ 
[\\ 
]\\ 
{\\  
$str\\! 3
,\\3 4
$str\\5 A
,\\A B
$str\\C Q
,\\Q R
$str\\S b
,\\b c
$str\\d t
}\\u v
,\\v w
values]] 
:]] 
new]] 
object]] "
[]]" #
]]]# $
{]]% &
$str]]' M
,]]M N
new]]O R
DateTime]]S [
(]][ \
$num]]\ `
,]]` a
$num]]b c
,]]c d
$num]]e g
,]]g h
$num]]i j
,]]j k
$num]]l n
,]]n o
$num]]p q
,]]q r
$num]]s v
,]]v w
DateTimeKind	]]x Ñ
.
]]Ñ Ö
Utc
]]Ö à
)
]]à â
.
]]â ä
AddTicks
]]ä í
(
]]í ì
$num
]]ì ó
)
]]ó ò
,
]]ò ô
$str
]]ö 
,
]] Ò
$str
]]Ú ò
,
]]ò ô
false
]]ö ü
}
]]† °
)
]]° ¢
;
]]¢ £
migrationBuilder__ 
.__ 

InsertData__ '
(__' (
table`` 
:`` 
$str`` '
,``' (
columnsaa 
:aa 
newaa 
[aa 
]aa 
{aa  
$straa! %
,aa% &
$straa' 4
,aa4 5
$straa6 D
,aaD E
$straaF P
,aaP Q
$straaR ]
,aa] ^
$straa_ l
,aal m
$straan }
,aa} ~
$str	aa â
,
aaâ ä
$str
aaã †
,
aa† °
$str
aa¢ ±
,
aa± ≤
$str
aa≥ ¬
,
aa¬ √
$str
aaƒ —
,
aa— “
$str
aa” ﬂ
,
aaﬂ ‡
$str
aa· È
,
aaÈ Í
$str
aaÎ ¯
,
aa¯ ˘
$str
aa˙ à
,
aaà â
$str
aaä ï
,
aaï ñ
$str
aaó §
}
aa• ¶
,
aa¶ ß
valuesbb 
:bb 
newbb 
objectbb "
[bb" #
,bb# $
]bb$ %
{cc 
{dd 
newdd 
Guiddd 
(dd 
$strdd E
)ddE F
,ddF G
$str	ddH Ñ
,
ddÑ Ö
$str
ddÜ ¿
,
dd¿ ¡
$str
dd¬ “
,
dd“ ”
null
dd‘ ÿ
,
ddÿ Ÿ
null
dd⁄ ﬁ
,
ddﬁ ﬂ
$str
dd‡ ë
,
ddë í
$str
ddì ú
,
ddú ù
$str
ddû ∑
,
dd∑ ∏
$str
ddπ ¡
,
dd¡ ¬
$str
dd√ Õ
,
ddÕ Œ
$str
ddœ Î
,
ddÎ Ï
$str
ddÌ ˙
,
dd˙ ˚
$num
dd¸ ˝
,
dd˝ ˛
$str
ddˇ ê
,
ddê ë
$str
ddí °
,
dd° ¢
null
dd£ ß
,
ddß ®
null
dd© ≠
}
ddÆ Ø
,
ddØ ∞
{ee 
newee 
Guidee 
(ee 
$stree E
)eeE F
,eeF G
$str	eeH ®
,
ee® ©
$str
ee™ ÿ
,
eeÿ Ÿ
$str
ee⁄ ‰
,
ee‰ Â
null
eeÊ Í
,
eeÍ Î
null
eeÏ 
,
ee Ò
$str
eeÚ £
,
ee£ §
$str
ee• Æ
,
eeÆ Ø
$str
ee∞  
,
ee  À
$str
eeÃ Û
,
eeÛ Ù
$str
eeı ˇ
,
eeˇ Ä
$str
eeÅ ù
,
eeù û
$str
eeü ¨
,
ee¨ ≠
$num
eeÆ Ø
,
eeØ ∞
$str
ee± ∆
,
ee∆ «
$str
ee» ÿ
,
eeÿ Ÿ
null
ee⁄ ﬁ
,
eeﬁ ﬂ
null
ee‡ ‰
}
eeÂ Ê
,
eeÊ Á
{ff 
newff 
Guidff 
(ff 
$strff E
)ffE F
,ffF G
$str	ffH è
,
ffè ê
$str
ffë À
,
ffÀ Ã
$str
ffÕ ‰
,
ff‰ Â
null
ffÊ Í
,
ffÍ Î
null
ffÏ 
,
ff Ò
$str
ffÚ £
,
ff£ §
$str
ff• Æ
,
ffÆ Ø
$str
ff∞ …
,
ff…  
$str
ffÀ Ì
,
ffÌ Ó
$str
ffÔ ˚
,
ff˚ ¸
$str
ff˝ ô
,
ffô ö
$str
ffõ ®
,
ff® ©
$num
ff™ ´
,
ff´ ¨
$str
ff≠ Õ
,
ffÕ Œ
$str
ffœ Ë
,
ffË È
null
ffÍ Ó
,
ffÓ Ô
null
ff Ù
}
ffı ˆ
,
ffˆ ˜
{gg 
newgg 
Guidgg 
(gg 
$strgg E
)ggE F
,ggF G
$str	ggH æ
,
ggæ ø
$str
gg¿ ù
,
ggù û
$str
ggü ©
,
gg© ™
null
gg´ Ø
,
ggØ ∞
null
gg± µ
,
ggµ ∂
$str
gg∑ ˚
,
gg˚ ¸
$str
gg˝ Ü
,
ggÜ á
$str
ggà ≠
,
gg≠ Æ
$str
ggØ ’
,
gg’ ÷
$str
gg◊ ·
,
gg· ‚
$str
gg„ ˇ
,
ggˇ Ä
$str
ggÅ é
,
ggé è
$num
ggê ë
,
ggë í
$str
ggì ®
,
gg® ©
$str
gg™ ø
,
ggø ¿
null
gg¡ ≈
,
gg≈ ∆
null
gg« À
}
ggÃ Õ
,
ggÕ Œ
{hh 
newhh 
Guidhh 
(hh 
$strhh E
)hhE F
,hhF G
$str	hhH Ã
,
hhÃ Õ
$str
hhŒ à
,
hhà â
$str
hhä ö
,
hhö õ
null
hhú †
,
hh† °
null
hh¢ ¶
,
hh¶ ß
$str
hh® Ÿ
,
hhŸ ⁄
$str
hh€ ‰
,
hh‰ Â
$str
hhÊ ˇ
,
hhˇ Ä
$str
hhÅ â
,
hhâ ä
$str
hhã ï
,
hhï ñ
$str
hhó ≥
,
hh≥ ¥
$str
hhµ ¬
,
hh¬ √
$num
hhƒ ≈
,
hh≈ ∆
$str
hh« ﬂ
,
hhﬂ ‡
$str
hh· ˆ
,
hhˆ ˜
null
hh¯ ¸
,
hh¸ ˝
null
hh˛ Ç
}
hhÉ Ñ
,
hhÑ Ö
{ii 
newii 
Guidii 
(ii 
$strii E
)iiE F
,iiF G
$str	iiH ∞
,
ii∞ ±
$str
ii≤ Ï
,
iiÏ Ì
$str
iiÓ ˜
,
ii˜ ¯
null
ii˘ ˝
,
ii˝ ˛
null
iiˇ É
,
iiÉ Ñ
$str
iiÖ ∂
,
ii∂ ∑
$str
ii∏ ¡
,
ii¡ ¬
$str
ii√ ‹
,
ii‹ ›
$str
iiﬁ ˘
,
ii˘ ˙
$str
ii˚ Ö
,
iiÖ Ü
$str
iiá £
,
ii£ §
$str
ii• ≤
,
ii≤ ≥
$num
ii¥ µ
,
iiµ ∂
$str
ii∑ À
,
iiÀ Ã
$str
iiÕ €
,
ii€ ‹
null
ii› ·
,
ii· ‚
null
ii„ Á
}
iiË È
,
iiÈ Í
{jj 
newjj 
Guidjj 
(jj 
$strjj E
)jjE F
,jjF G
$str	jjH ë
,
jjë í
$str
jjì Õ
,
jjÕ Œ
$str
jjœ ·
,
jj· ‚
null
jj„ Á
,
jjÁ Ë
null
jjÈ Ì
,
jjÌ Ó
$str
jjÔ †
,
jj† °
$str
jj¢ ´
,
jj´ ¨
$str
jj≠ ∆
,
jj∆ «
$str
jj» Ê
,
jjÊ Á
$str
jjË Ô
,
jjÔ 
$str
jjÒ ç
,
jjç é
$str
jjè ú
,
jjú ù
$num
jjû ü
,
jjü †
$str
jj° ø
,
jjø ¿
$str
jj¡ Â
,
jjÂ Ê
null
jjÁ Î
,
jjÎ Ï
null
jjÌ Ò
}
jjÚ Û
,
jjÛ Ù
{kk 
newkk 
Guidkk 
(kk 
$strkk E
)kkE F
,kkF G
$strkkH s
,kks t
$str	kku ô
,
kkô ö
$str
kkõ •
,
kk• ¶
null
kkß ´
,
kk´ ¨
null
kk≠ ±
,
kk± ≤
$str
kk≥ ˘
,
kk˘ ˙
$str
kk˚ Ñ
,
kkÑ Ö
$str
kkÜ ü
,
kkü †
$str
kk° Œ
,
kkŒ œ
$str
kk– ‹
,
kk‹ ›
$str
kkﬁ ˙
,
kk˙ ˚
$str
kk¸ â
,
kkâ ä
$num
kkã å
,
kkå ç
$str
kké ª
,
kkª º
$str
kkΩ ›
,
kk› ﬁ
null
kkﬂ „
,
kk„ ‰
null
kkÂ È
}
kkÍ Î
,
kkÎ Ï
{ll 
newll 
Guidll 
(ll 
$strll E
)llE F
,llF G
$str	llH û
,
llû ü
$str
ll† ≈
,
ll≈ ∆
$str
ll« œ
,
llœ –
null
ll— ’
,
ll’ ÷
null
ll◊ €
,
ll€ ‹
$str
ll› é
,
llé è
$str
llê ô
,
llô ö
$str
llõ µ
,
llµ ∂
$str
ll∑ œ
,
llœ –
$str
ll— €
,
ll€ ‹
$str
ll› ˘
,
ll˘ ˙
$str
ll˚ à
,
llà â
$num
llä ã
,
llã å
$str
llç ¢
,
ll¢ £
$str
ll§ µ
,
llµ ∂
null
ll∑ ª
,
llª º
null
llΩ ¡
}
ll¬ √
,
ll√ ƒ
{mm 
newmm 
Guidmm 
(mm 
$strmm E
)mmE F
,mmF G
$str	mmH è
,
mmè ê
$str
mmë À
,
mmÀ Ã
$str
mmÕ ‰
,
mm‰ Â
null
mmÊ Í
,
mmÍ Î
null
mmÏ 
,
mm Ò
$str
mmÚ £
,
mm£ §
$str
mm• Æ
,
mmÆ Ø
$str
mm∞ …
,
mm…  
$str
mmÀ Ò
,
mmÒ Ú
$str
mmÛ ¸
,
mm¸ ˝
$str
mm˛ ö
,
mmö õ
$str
mmú ©
,
mm© ™
$num
mm´ ¨
,
mm¨ ≠
$str
mmÆ Œ
,
mmŒ œ
$str
mm– Ë
,
mmË È
null
mmÍ Ó
,
mmÓ Ô
null
mm Ù
}
mmı ˆ
,
mmˆ ˜
{nn 
newnn 
Guidnn 
(nn 
$strnn E
)nnE F
,nnF G
$str	nnH ë
,
nnë í
$str
nnì Õ
,
nnÕ Œ
$str
nnœ ·
,
nn· ‚
null
nn„ Á
,
nnÁ Ë
null
nnÈ Ì
,
nnÌ Ó
$str
nnÔ †
,
nn† °
$str
nn¢ ´
,
nn´ ¨
$str
nn≠ ∆
,
nn∆ «
$str
nn» –
,
nn– —
$str
nn“ ‹
,
nn‹ ›
$str
nnﬁ ˙
,
nn˙ ˚
$str
nn¸ â
,
nnâ ä
$num
nnã å
,
nnå ç
$str
nné π
,
nnπ ∫
$str
nnª “
,
nn“ ”
null
nn‘ ÿ
,
nnÿ Ÿ
null
nn⁄ ﬁ
}
nnﬂ ‡
,
nn‡ ·
{oo 
newoo 
Guidoo 
(oo 
$stroo E
)ooE F
,ooF G
$str	ooH è
,
ooè ê
$str
ooë ∫
,
oo∫ ª
$str
ooº  
,
oo  À
null
ooÃ –
,
oo– —
null
oo“ ÷
,
oo÷ ◊
$str
ooÿ â
,
ooâ ä
$str
ooã î
,
ooî ï
$str
ooñ ¢
,
oo¢ £
$str
oo§ ¥
,
oo¥ µ
$str
oo∂ ¿
,
oo¿ ¡
$str
oo¬ ÿ
,
ooÿ Ÿ
$str
oo⁄ Ê
,
ooÊ Á
$num
ooË È
,
ooÈ Í
$str
ooÎ ¸
,
oo¸ ˝
$str
oo˛ ì
,
ooì î
null
ooï ô
,
ooô ö
null
ooõ ü
}
oo† °
,
oo° ¢
{pp 
newpp 
Guidpp 
(pp 
$strpp E
)ppE F
,ppF G
$str	ppH ”
,
pp” ‘
$str
pp’ è
,
ppè ê
$str
ppë ô
,
ppô ö
null
ppõ ü
,
ppü †
null
pp° •
,
pp• ¶
$str
ppß ÿ
,
ppÿ Ÿ
$str
pp⁄ „
,
pp„ ‰
$str
ppÂ °
,
pp° ¢
$str
pp£ ∑
,
pp∑ ∏
$str
ppπ √
,
pp√ ƒ
$str
pp≈ ·
,
pp· ‚
$str
pp„ 
,
pp Ò
$num
ppÚ Û
,
ppÛ Ù
$str
ppı ñ
,
ppñ ó
$str
ppò π
,
ppπ ∫
null
ppª ø
,
ppø ¿
null
pp¡ ≈
}
pp∆ «
}qq 
)qq 
;qq 
}rr 	
	protecteduu 
overrideuu 
voiduu 
Downuu  $
(uu$ %
MigrationBuilderuu% 5
migrationBuilderuu6 F
)uuF G
{vv 	
migrationBuilderww 
.ww 

DeleteDataww '
(ww' (
tablexx 
:xx 
$strxx '
,xx' (
	keyColumnyy 
:yy 
$stryy 
,yy  
keyValuezz 
:zz 
newzz 
Guidzz "
(zz" #
$strzz# I
)zzI J
)zzJ K
;zzK L
migrationBuilder|| 
.|| 

DeleteData|| '
(||' (
table}} 
:}} 
$str}} '
,}}' (
	keyColumn~~ 
:~~ 
$str~~ 
,~~  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder
ÅÅ 
.
ÅÅ 

DeleteData
ÅÅ '
(
ÅÅ' (
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ '
,
ÇÇ' (
	keyColumn
ÉÉ 
:
ÉÉ 
$str
ÉÉ 
,
ÉÉ  
keyValue
ÑÑ 
:
ÑÑ 
new
ÑÑ 
Guid
ÑÑ "
(
ÑÑ" #
$str
ÑÑ# I
)
ÑÑI J
)
ÑÑJ K
;
ÑÑK L
migrationBuilder
ÜÜ 
.
ÜÜ 

DeleteData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá '
,
áá' (
	keyColumn
àà 
:
àà 
$str
àà 
,
àà  
keyValue
ââ 
:
ââ 
new
ââ 
Guid
ââ "
(
ââ" #
$str
ââ# I
)
ââI J
)
ââJ K
;
ââK L
migrationBuilder
ãã 
.
ãã 

DeleteData
ãã '
(
ãã' (
table
åå 
:
åå 
$str
åå '
,
åå' (
	keyColumn
çç 
:
çç 
$str
çç 
,
çç  
keyValue
éé 
:
éé 
new
éé 
Guid
éé "
(
éé" #
$str
éé# I
)
ééI J
)
ééJ K
;
ééK L
migrationBuilder
êê 
.
êê 

DeleteData
êê '
(
êê' (
table
ëë 
:
ëë 
$str
ëë '
,
ëë' (
	keyColumn
íí 
:
íí 
$str
íí 
,
íí  
keyValue
ìì 
:
ìì 
new
ìì 
Guid
ìì "
(
ìì" #
$str
ìì# I
)
ììI J
)
ììJ K
;
ììK L
migrationBuilder
ïï 
.
ïï 

DeleteData
ïï '
(
ïï' (
table
ññ 
:
ññ 
$str
ññ '
,
ññ' (
	keyColumn
óó 
:
óó 
$str
óó 
,
óó  
keyValue
òò 
:
òò 
new
òò 
Guid
òò "
(
òò" #
$str
òò# I
)
òòI J
)
òòJ K
;
òòK L
migrationBuilder
öö 
.
öö 

DeleteData
öö '
(
öö' (
table
õõ 
:
õõ 
$str
õõ '
,
õõ' (
	keyColumn
úú 
:
úú 
$str
úú 
,
úú  
keyValue
ùù 
:
ùù 
new
ùù 
Guid
ùù "
(
ùù" #
$str
ùù# I
)
ùùI J
)
ùùJ K
;
ùùK L
migrationBuilder
üü 
.
üü 

DeleteData
üü '
(
üü' (
table
†† 
:
†† 
$str
†† '
,
††' (
	keyColumn
°° 
:
°° 
$str
°° 
,
°°  
keyValue
¢¢ 
:
¢¢ 
new
¢¢ 
Guid
¢¢ "
(
¢¢" #
$str
¢¢# I
)
¢¢I J
)
¢¢J K
;
¢¢K L
migrationBuilder
§§ 
.
§§ 

DeleteData
§§ '
(
§§' (
table
•• 
:
•• 
$str
•• '
,
••' (
	keyColumn
¶¶ 
:
¶¶ 
$str
¶¶ 
,
¶¶  
keyValue
ßß 
:
ßß 
new
ßß 
Guid
ßß "
(
ßß" #
$str
ßß# I
)
ßßI J
)
ßßJ K
;
ßßK L
migrationBuilder
©© 
.
©© 

DeleteData
©© '
(
©©' (
table
™™ 
:
™™ 
$str
™™ '
,
™™' (
	keyColumn
´´ 
:
´´ 
$str
´´ 
,
´´  
keyValue
¨¨ 
:
¨¨ 
new
¨¨ 
Guid
¨¨ "
(
¨¨" #
$str
¨¨# I
)
¨¨I J
)
¨¨J K
;
¨¨K L
migrationBuilder
ÆÆ 
.
ÆÆ 

DeleteData
ÆÆ '
(
ÆÆ' (
table
ØØ 
:
ØØ 
$str
ØØ '
,
ØØ' (
	keyColumn
∞∞ 
:
∞∞ 
$str
∞∞ 
,
∞∞  
keyValue
±± 
:
±± 
new
±± 
Guid
±± "
(
±±" #
$str
±±# I
)
±±I J
)
±±J K
;
±±K L
migrationBuilder
≥≥ 
.
≥≥ 

DeleteData
≥≥ '
(
≥≥' (
table
¥¥ 
:
¥¥ 
$str
¥¥ '
,
¥¥' (
	keyColumn
µµ 
:
µµ 
$str
µµ 
,
µµ  
keyValue
∂∂ 
:
∂∂ 
new
∂∂ 
Guid
∂∂ "
(
∂∂" #
$str
∂∂# I
)
∂∂I J
)
∂∂J K
;
∂∂K L
migrationBuilder
∏∏ 
.
∏∏ 

DropColumn
∏∏ '
(
∏∏' (
name
ππ 
:
ππ 
$str
ππ &
,
ππ& '
table
∫∫ 
:
∫∫ 
$str
∫∫ $
)
∫∫$ %
;
∫∫% &
migrationBuilder
ºº 
.
ºº 

UpdateData
ºº '
(
ºº' (
table
ΩΩ 
:
ΩΩ 
$str
ΩΩ $
,
ΩΩ$ %
	keyColumn
ææ 
:
ææ 
$str
ææ 
,
ææ  
keyValue
øø 
:
øø 
$str
øø +
,
øø+ ,
columns
¿¿ 
:
¿¿ 
new
¿¿ 
[
¿¿ 
]
¿¿ 
{
¿¿  
$str
¿¿! 3
,
¿¿3 4
$str
¿¿5 A
,
¿¿A B
$str
¿¿C Q
,
¿¿Q R
$str
¿¿S b
}
¿¿c d
,
¿¿d e
values
¡¡ 
:
¡¡ 
new
¡¡ 
object
¡¡ "
[
¡¡" #
]
¡¡# $
{
¡¡% &
$str
¡¡' M
,
¡¡M N
new
¡¡O R
DateTime
¡¡S [
(
¡¡[ \
$num
¡¡\ `
,
¡¡` a
$num
¡¡b c
,
¡¡c d
$num
¡¡e g
,
¡¡g h
$num
¡¡i k
,
¡¡k l
$num
¡¡m n
,
¡¡n o
$num
¡¡p r
,
¡¡r s
$num
¡¡t w
,
¡¡w x
DateTimeKind¡¡y Ö
.¡¡Ö Ü
Utc¡¡Ü â
)¡¡â ä
.¡¡ä ã
AddTicks¡¡ã ì
(¡¡ì î
$num¡¡î ò
)¡¡ò ô
,¡¡ô ö
$str¡¡õ Ò
,¡¡Ò Ú
$str¡¡Û ô
}¡¡ö õ
)¡¡õ ú
;¡¡ú ù
migrationBuilder
√√ 
.
√√ 

InsertData
√√ '
(
√√' (
table
ƒƒ 
:
ƒƒ 
$str
ƒƒ '
,
ƒƒ' (
columns
≈≈ 
:
≈≈ 
new
≈≈ 
[
≈≈ 
]
≈≈ 
{
≈≈  
$str
≈≈! %
,
≈≈% &
$str
≈≈' 4
,
≈≈4 5
$str
≈≈6 D
,
≈≈D E
$str
≈≈F P
,
≈≈P Q
$str
≈≈R ]
,
≈≈] ^
$str
≈≈_ l
,
≈≈l m
$str
≈≈n }
,
≈≈} ~
$str≈≈ â
,≈≈â ä
$str≈≈ã †
,≈≈† °
$str≈≈¢ ±
,≈≈± ≤
$str≈≈≥ ¬
,≈≈¬ √
$str≈≈ƒ —
,≈≈— “
$str≈≈” ﬂ
,≈≈ﬂ ‡
$str≈≈· È
,≈≈È Í
$str≈≈Î ¯
,≈≈¯ ˘
$str≈≈˙ à
,≈≈à â
$str≈≈ä ï
,≈≈ï ñ
$str≈≈ó §
}≈≈• ¶
,≈≈¶ ß
values
∆∆ 
:
∆∆ 
new
∆∆ 
object
∆∆ "
[
∆∆" #
,
∆∆# $
]
∆∆$ %
{
«« 
{
»» 
new
»» 
Guid
»» 
(
»» 
$str
»» E
)
»»E F
,
»»F G
$str»»H è
,»»è ê
$str»»ë ∫
,»»∫ ª
$str»»º  
,»»  À
null»»Ã –
,»»– —
null»»“ ÷
,»»÷ ◊
$str»»ÿ â
,»»â ä
$str»»ã î
,»»î ï
$str»»ñ ¢
,»»¢ £
$str»»§ ¥
,»»¥ µ
$str»»∂ ¿
,»»¿ ¡
$str»»¬ ÿ
,»»ÿ Ÿ
$str»»⁄ Ê
,»»Ê Á
$num»»Ë È
,»»È Í
$str»»Î ¸
,»»¸ ˝
$str»»˛ ì
,»»ì î
null»»ï ô
,»»ô ö
null»»õ ü
}»»† °
,»»° ¢
{
…… 
new
…… 
Guid
…… 
(
…… 
$str
…… E
)
……E F
,
……F G
$str……H ∞
,……∞ ±
$str……≤ Ï
,……Ï Ì
$str……Ó ˜
,……˜ ¯
null……˘ ˝
,……˝ ˛
null……ˇ É
,……É Ñ
$str……Ö ∂
,……∂ ∑
$str……∏ ¡
,……¡ ¬
$str……√ ‹
,……‹ ›
$str……ﬁ ˘
,……˘ ˙
$str……˚ Ö
,……Ö Ü
$str……á £
,……£ §
$str……• ≤
,……≤ ≥
$num……¥ µ
,……µ ∂
$str……∑ À
,……À Ã
$str……Õ €
,……€ ‹
null……› ·
,……· ‚
null……„ Á
}……Ë È
,……È Í
{
   
new
   
Guid
   
(
   
$str
   E
)
  E F
,
  F G
$str  H æ
,  æ ø
$str  ¿ ù
,  ù û
$str  ü ©
,  © ™
null  ´ Ø
,  Ø ∞
null  ± µ
,  µ ∂
$str  ∑ ˚
,  ˚ ¸
$str  ˝ Ü
,  Ü á
$str  à ≠
,  ≠ Æ
$str  Ø ’
,  ’ ÷
$str  ◊ ·
,  · ‚
$str  „ ˇ
,  ˇ Ä
$str  Å é
,  é è
$num  ê ë
,  ë í
$str  ì ®
,  ® ©
$str  ™ ø
,  ø ¿
null  ¡ ≈
,  ≈ ∆
null  « À
}  Ã Õ
,  Õ Œ
{
ÀÀ 
new
ÀÀ 
Guid
ÀÀ 
(
ÀÀ 
$str
ÀÀ E
)
ÀÀE F
,
ÀÀF G
$strÀÀH ë
,ÀÀë í
$strÀÀì Õ
,ÀÀÕ Œ
$strÀÀœ ·
,ÀÀ· ‚
nullÀÀ„ Á
,ÀÀÁ Ë
nullÀÀÈ Ì
,ÀÀÌ Ó
$strÀÀÔ †
,ÀÀ† °
$strÀÀ¢ ´
,ÀÀ´ ¨
$strÀÀ≠ ∆
,ÀÀ∆ «
$strÀÀ» –
,ÀÀ– —
$strÀÀ“ ‹
,ÀÀ‹ ›
$strÀÀﬁ ˙
,ÀÀ˙ ˚
$strÀÀ¸ â
,ÀÀâ ä
$numÀÀã å
,ÀÀå ç
$strÀÀé π
,ÀÀπ ∫
$strÀÀª “
,ÀÀ“ ”
nullÀÀ‘ ÿ
,ÀÀÿ Ÿ
nullÀÀ⁄ ﬁ
}ÀÀﬂ ‡
,ÀÀ‡ ·
{
ÃÃ 
new
ÃÃ 
Guid
ÃÃ 
(
ÃÃ 
$str
ÃÃ E
)
ÃÃE F
,
ÃÃF G
$strÃÃH ”
,ÃÃ” ‘
$strÃÃ’ è
,ÃÃè ê
$strÃÃë ô
,ÃÃô ö
nullÃÃõ ü
,ÃÃü †
nullÃÃ° •
,ÃÃ• ¶
$strÃÃß ÿ
,ÃÃÿ Ÿ
$strÃÃ⁄ „
,ÃÃ„ ‰
$strÃÃÂ °
,ÃÃ° ¢
$strÃÃ£ ∑
,ÃÃ∑ ∏
$strÃÃπ √
,ÃÃ√ ƒ
$strÃÃ≈ ·
,ÃÃ· ‚
$strÃÃ„ 
,ÃÃ Ò
$numÃÃÚ Û
,ÃÃÛ Ù
$strÃÃı ñ
,ÃÃñ ó
$strÃÃò π
,ÃÃπ ∫
nullÃÃª ø
,ÃÃø ¿
nullÃÃ¡ ≈
}ÃÃ∆ «
,ÃÃ« »
{
ÕÕ 
new
ÕÕ 
Guid
ÕÕ 
(
ÕÕ 
$str
ÕÕ E
)
ÕÕE F
,
ÕÕF G
$strÕÕH ë
,ÕÕë í
$strÕÕì Õ
,ÕÕÕ Œ
$strÕÕœ ·
,ÕÕ· ‚
nullÕÕ„ Á
,ÕÕÁ Ë
nullÕÕÈ Ì
,ÕÕÌ Ó
$strÕÕÔ †
,ÕÕ† °
$strÕÕ¢ ´
,ÕÕ´ ¨
$strÕÕ≠ ∆
,ÕÕ∆ «
$strÕÕ» Ê
,ÕÕÊ Á
$strÕÕË Ô
,ÕÕÔ 
$strÕÕÒ ç
,ÕÕç é
$strÕÕè ú
,ÕÕú ù
$numÕÕû ü
,ÕÕü †
$strÕÕ° ø
,ÕÕø ¿
$strÕÕ¡ Â
,ÕÕÂ Ê
nullÕÕÁ Î
,ÕÕÎ Ï
nullÕÕÌ Ò
}ÕÕÚ Û
,ÕÕÛ Ù
{
ŒŒ 
new
ŒŒ 
Guid
ŒŒ 
(
ŒŒ 
$str
ŒŒ E
)
ŒŒE F
,
ŒŒF G
$str
ŒŒH s
,
ŒŒs t
$strŒŒu ô
,ŒŒô ö
$strŒŒõ •
,ŒŒ• ¶
nullŒŒß ´
,ŒŒ´ ¨
nullŒŒ≠ ±
,ŒŒ± ≤
$strŒŒ≥ ˘
,ŒŒ˘ ˙
$strŒŒ˚ Ñ
,ŒŒÑ Ö
$strŒŒÜ ü
,ŒŒü †
$strŒŒ° Œ
,ŒŒŒ œ
$strŒŒ– ‹
,ŒŒ‹ ›
$strŒŒﬁ ˙
,ŒŒ˙ ˚
$strŒŒ¸ â
,ŒŒâ ä
$numŒŒã å
,ŒŒå ç
$strŒŒé ª
,ŒŒª º
$strŒŒΩ ›
,ŒŒ› ﬁ
nullŒŒﬂ „
,ŒŒ„ ‰
nullŒŒÂ È
}ŒŒÍ Î
,ŒŒÎ Ï
{
œœ 
new
œœ 
Guid
œœ 
(
œœ 
$str
œœ E
)
œœE F
,
œœF G
$strœœH è
,œœè ê
$strœœë À
,œœÀ Ã
$strœœÕ ‰
,œœ‰ Â
nullœœÊ Í
,œœÍ Î
nullœœÏ 
,œœ Ò
$strœœÚ £
,œœ£ §
$strœœ• Æ
,œœÆ Ø
$strœœ∞ …
,œœ…  
$strœœÀ Ì
,œœÌ Ó
$strœœÔ ˚
,œœ˚ ¸
$strœœ˝ ô
,œœô ö
$strœœõ ®
,œœ® ©
$numœœ™ ´
,œœ´ ¨
$strœœ≠ Õ
,œœÕ Œ
$strœœœ Ë
,œœË È
nullœœÍ Ó
,œœÓ Ô
nullœœ Ù
}œœı ˆ
,œœˆ ˜
{
–– 
new
–– 
Guid
–– 
(
–– 
$str
–– E
)
––E F
,
––F G
$str––H è
,––è ê
$str––ë À
,––À Ã
$str––Õ ‰
,––‰ Â
null––Ê Í
,––Í Î
null––Ï 
,–– Ò
$str––Ú £
,––£ §
$str––• Æ
,––Æ Ø
$str––∞ …
,––…  
$str––À Ò
,––Ò Ú
$str––Û ¸
,––¸ ˝
$str––˛ ö
,––ö õ
$str––ú ©
,––© ™
$num––´ ¨
,––¨ ≠
$str––Æ Œ
,––Œ œ
$str––– Ë
,––Ë È
null––Í Ó
,––Ó Ô
null–– Ù
}––ı ˆ
,––ˆ ˜
{
—— 
new
—— 
Guid
—— 
(
—— 
$str
—— E
)
——E F
,
——F G
$str——H Ã
,——Ã Õ
$str——Œ à
,——à â
$str——ä ö
,——ö õ
null——ú †
,——† °
null——¢ ¶
,——¶ ß
$str——® Ÿ
,——Ÿ ⁄
$str——€ ‰
,——‰ Â
$str——Ê ˇ
,——ˇ Ä
$str——Å â
,——â ä
$str——ã ï
,——ï ñ
$str——ó ≥
,——≥ ¥
$str——µ ¬
,——¬ √
$num——ƒ ≈
,——≈ ∆
$str——« ﬂ
,——ﬂ ‡
$str——· ˆ
,——ˆ ˜
null——¯ ¸
,——¸ ˝
null——˛ Ç
}——É Ñ
,——Ñ Ö
{
““ 
new
““ 
Guid
““ 
(
““ 
$str
““ E
)
““E F
,
““F G
$str““H û
,““û ü
$str““† ≈
,““≈ ∆
$str““« œ
,““œ –
null““— ’
,““’ ÷
null““◊ €
,““€ ‹
$str““› é
,““é è
$str““ê ô
,““ô ö
$str““õ µ
,““µ ∂
$str““∑ œ
,““œ –
$str““— €
,““€ ‹
$str““› ˘
,““˘ ˙
$str““˚ à
,““à â
$num““ä ã
,““ã å
$str““ç ¢
,““¢ £
$str““§ µ
,““µ ∂
null““∑ ª
,““ª º
null““Ω ¡
}““¬ √
,““√ ƒ
{
”” 
new
”” 
Guid
”” 
(
”” 
$str
”” E
)
””E F
,
””F G
$str””H ®
,””® ©
$str””™ ÿ
,””ÿ Ÿ
$str””⁄ ‰
,””‰ Â
null””Ê Í
,””Í Î
null””Ï 
,”” Ò
$str””Ú £
,””£ §
$str””• Æ
,””Æ Ø
$str””∞  
,””  À
$str””Ã Û
,””Û Ù
$str””ı ˇ
,””ˇ Ä
$str””Å ù
,””ù û
$str””ü ¨
,””¨ ≠
$num””Æ Ø
,””Ø ∞
$str””± ∆
,””∆ «
$str””» ÿ
,””ÿ Ÿ
null””⁄ ﬁ
,””ﬁ ﬂ
null””‡ ‰
}””Â Ê
,””Ê Á
{
‘‘ 
new
‘‘ 
Guid
‘‘ 
(
‘‘ 
$str
‘‘ E
)
‘‘E F
,
‘‘F G
$str‘‘H Ñ
,‘‘Ñ Ö
$str‘‘Ü ¿
,‘‘¿ ¡
$str‘‘¬ “
,‘‘“ ”
null‘‘‘ ÿ
,‘‘ÿ Ÿ
null‘‘⁄ ﬁ
,‘‘ﬁ ﬂ
$str‘‘‡ ë
,‘‘ë í
$str‘‘ì ú
,‘‘ú ù
$str‘‘û ∑
,‘‘∑ ∏
$str‘‘π ¡
,‘‘¡ ¬
$str‘‘√ Õ
,‘‘Õ Œ
$str‘‘œ Î
,‘‘Î Ï
$str‘‘Ì ˙
,‘‘˙ ˚
$num‘‘¸ ˝
,‘‘˝ ˛
$str‘‘ˇ ê
,‘‘ê ë
$str‘‘í °
,‘‘° ¢
null‘‘£ ß
,‘‘ß ®
null‘‘© ≠
}‘‘Æ Ø
}
’’ 
)
’’ 
;
’’ 
}
÷÷ 	
}
◊◊ 
}ÿÿ É•
ãD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240729110102_AddLastLoginTimeIntoTableUser.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class )
AddLastLoginTimeIntoTableUser 6
:7 8
	Migration9 B
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 
	AddColumnQQ &
<QQ& '
DateTimeQQ' /
>QQ/ 0
(QQ0 1
nameRR 
:RR 
$strRR %
,RR% &
tableSS 
:SS 
$strSS $
,SS$ %
typeTT 
:TT 
$strTT !
,TT! "
nullableUU 
:UU 
trueUU 
)UU 
;UU  
migrationBuilderWW 
.WW 

UpdateDataWW '
(WW' (
tableXX 
:XX 
$strXX $
,XX$ %
	keyColumnYY 
:YY 
$strYY 
,YY  
keyValueZZ 
:ZZ 
$strZZ +
,ZZ+ ,
columns[[ 
:[[ 
new[[ 
[[[ 
][[ 
{[[  
$str[[! 3
,[[3 4
$str[[5 A
,[[A B
$str[[C R
,[[R S
$str[[T b
,[[b c
$str[[d s
}[[t u
,[[u v
values\\ 
:\\ 
new\\ 
object\\ "
[\\" #
]\\# $
{\\% &
$str\\' M
,\\M N
new\\O R
DateTime\\S [
(\\[ \
$num\\\ `
,\\` a
$num\\b c
,\\c d
$num\\e g
,\\g h
$num\\i k
,\\k l
$num\\m n
,\\n o
$num\\p r
,\\r s
$num\\t w
,\\w x
DateTimeKind	\\y Ö
.
\\Ö Ü
Utc
\\Ü â
)
\\â ä
.
\\ä ã
AddTicks
\\ã ì
(
\\ì î
$num
\\î ò
)
\\ò ô
,
\\ô ö
null
\\õ ü
,
\\ü †
$str
\\° ˜
,
\\˜ ¯
$str
\\˘ ü
}
\\† °
)
\\° ¢
;
\\¢ £
migrationBuilder^^ 
.^^ 

InsertData^^ '
(^^' (
table__ 
:__ 
$str__ '
,__' (
columns`` 
:`` 
new`` 
[`` 
]`` 
{``  
$str``! %
,``% &
$str``' 4
,``4 5
$str``6 D
,``D E
$str``F P
,``P Q
$str``R ]
,``] ^
$str``_ l
,``l m
$str``n }
,``} ~
$str	`` â
,
``â ä
$str
``ã †
,
``† °
$str
``¢ ±
,
``± ≤
$str
``≥ ¬
,
``¬ √
$str
``ƒ —
,
``— “
$str
``” ﬂ
,
``ﬂ ‡
$str
``· È
,
``È Í
$str
``Î ¯
,
``¯ ˘
$str
``˙ à
,
``à â
$str
``ä ï
,
``ï ñ
$str
``ó §
}
``• ¶
,
``¶ ß
valuesaa 
:aa 
newaa 
objectaa "
[aa" #
,aa# $
]aa$ %
{bb 
{cc 
newcc 
Guidcc 
(cc 
$strcc E
)ccE F
,ccF G
$str	ccH è
,
ccè ê
$str
ccë ∫
,
cc∫ ª
$str
ccº  
,
cc  À
null
ccÃ –
,
cc– —
null
cc“ ÷
,
cc÷ ◊
$str
ccÿ â
,
ccâ ä
$str
ccã î
,
ccî ï
$str
ccñ ¢
,
cc¢ £
$str
cc§ ¥
,
cc¥ µ
$str
cc∂ ¿
,
cc¿ ¡
$str
cc¬ ÿ
,
ccÿ Ÿ
$str
cc⁄ Ê
,
ccÊ Á
$num
ccË È
,
ccÈ Í
$str
ccÎ ¸
,
cc¸ ˝
$str
cc˛ ì
,
ccì î
null
ccï ô
,
ccô ö
null
ccõ ü
}
cc† °
,
cc° ¢
{dd 
newdd 
Guiddd 
(dd 
$strdd E
)ddE F
,ddF G
$str	ddH ∞
,
dd∞ ±
$str
dd≤ Ï
,
ddÏ Ì
$str
ddÓ ˜
,
dd˜ ¯
null
dd˘ ˝
,
dd˝ ˛
null
ddˇ É
,
ddÉ Ñ
$str
ddÖ ∂
,
dd∂ ∑
$str
dd∏ ¡
,
dd¡ ¬
$str
dd√ ‹
,
dd‹ ›
$str
ddﬁ ˘
,
dd˘ ˙
$str
dd˚ Ö
,
ddÖ Ü
$str
ddá £
,
dd£ §
$str
dd• ≤
,
dd≤ ≥
$num
dd¥ µ
,
ddµ ∂
$str
dd∑ À
,
ddÀ Ã
$str
ddÕ €
,
dd€ ‹
null
dd› ·
,
dd· ‚
null
dd„ Á
}
ddË È
,
ddÈ Í
{ee 
newee 
Guidee 
(ee 
$stree E
)eeE F
,eeF G
$str	eeH æ
,
eeæ ø
$str
ee¿ ù
,
eeù û
$str
eeü ©
,
ee© ™
null
ee´ Ø
,
eeØ ∞
null
ee± µ
,
eeµ ∂
$str
ee∑ ˚
,
ee˚ ¸
$str
ee˝ Ü
,
eeÜ á
$str
eeà ≠
,
ee≠ Æ
$str
eeØ ’
,
ee’ ÷
$str
ee◊ ·
,
ee· ‚
$str
ee„ ˇ
,
eeˇ Ä
$str
eeÅ é
,
eeé è
$num
eeê ë
,
eeë í
$str
eeì ®
,
ee® ©
$str
ee™ ø
,
eeø ¿
null
ee¡ ≈
,
ee≈ ∆
null
ee« À
}
eeÃ Õ
,
eeÕ Œ
{ff 
newff 
Guidff 
(ff 
$strff E
)ffE F
,ffF G
$str	ffH ë
,
ffë í
$str
ffì Õ
,
ffÕ Œ
$str
ffœ ·
,
ff· ‚
null
ff„ Á
,
ffÁ Ë
null
ffÈ Ì
,
ffÌ Ó
$str
ffÔ †
,
ff† °
$str
ff¢ ´
,
ff´ ¨
$str
ff≠ ∆
,
ff∆ «
$str
ff» –
,
ff– —
$str
ff“ ‹
,
ff‹ ›
$str
ffﬁ ˙
,
ff˙ ˚
$str
ff¸ â
,
ffâ ä
$num
ffã å
,
ffå ç
$str
ffé π
,
ffπ ∫
$str
ffª “
,
ff“ ”
null
ff‘ ÿ
,
ffÿ Ÿ
null
ff⁄ ﬁ
}
ffﬂ ‡
,
ff‡ ·
{gg 
newgg 
Guidgg 
(gg 
$strgg E
)ggE F
,ggF G
$str	ggH ”
,
gg” ‘
$str
gg’ è
,
ggè ê
$str
ggë ô
,
ggô ö
null
ggõ ü
,
ggü †
null
gg° •
,
gg• ¶
$str
ggß ÿ
,
ggÿ Ÿ
$str
gg⁄ „
,
gg„ ‰
$str
ggÂ °
,
gg° ¢
$str
gg£ ∑
,
gg∑ ∏
$str
ggπ √
,
gg√ ƒ
$str
gg≈ ·
,
gg· ‚
$str
gg„ 
,
gg Ò
$num
ggÚ Û
,
ggÛ Ù
$str
ggı ñ
,
ggñ ó
$str
ggò π
,
ggπ ∫
null
ggª ø
,
ggø ¿
null
gg¡ ≈
}
gg∆ «
,
gg« »
{hh 
newhh 
Guidhh 
(hh 
$strhh E
)hhE F
,hhF G
$str	hhH ë
,
hhë í
$str
hhì Õ
,
hhÕ Œ
$str
hhœ ·
,
hh· ‚
null
hh„ Á
,
hhÁ Ë
null
hhÈ Ì
,
hhÌ Ó
$str
hhÔ †
,
hh† °
$str
hh¢ ´
,
hh´ ¨
$str
hh≠ ∆
,
hh∆ «
$str
hh» Ê
,
hhÊ Á
$str
hhË Ô
,
hhÔ 
$str
hhÒ ç
,
hhç é
$str
hhè ú
,
hhú ù
$num
hhû ü
,
hhü †
$str
hh° ø
,
hhø ¿
$str
hh¡ Â
,
hhÂ Ê
null
hhÁ Î
,
hhÎ Ï
null
hhÌ Ò
}
hhÚ Û
,
hhÛ Ù
{ii 
newii 
Guidii 
(ii 
$strii E
)iiE F
,iiF G
$striiH s
,iis t
$str	iiu ô
,
iiô ö
$str
iiõ •
,
ii• ¶
null
iiß ´
,
ii´ ¨
null
ii≠ ±
,
ii± ≤
$str
ii≥ ˘
,
ii˘ ˙
$str
ii˚ Ñ
,
iiÑ Ö
$str
iiÜ ü
,
iiü †
$str
ii° Œ
,
iiŒ œ
$str
ii– ‹
,
ii‹ ›
$str
iiﬁ ˙
,
ii˙ ˚
$str
ii¸ â
,
iiâ ä
$num
iiã å
,
iiå ç
$str
iié ª
,
iiª º
$str
iiΩ ›
,
ii› ﬁ
null
iiﬂ „
,
ii„ ‰
null
iiÂ È
}
iiÍ Î
,
iiÎ Ï
{jj 
newjj 
Guidjj 
(jj 
$strjj E
)jjE F
,jjF G
$str	jjH è
,
jjè ê
$str
jjë À
,
jjÀ Ã
$str
jjÕ ‰
,
jj‰ Â
null
jjÊ Í
,
jjÍ Î
null
jjÏ 
,
jj Ò
$str
jjÚ £
,
jj£ §
$str
jj• Æ
,
jjÆ Ø
$str
jj∞ …
,
jj…  
$str
jjÀ Ì
,
jjÌ Ó
$str
jjÔ ˚
,
jj˚ ¸
$str
jj˝ ô
,
jjô ö
$str
jjõ ®
,
jj® ©
$num
jj™ ´
,
jj´ ¨
$str
jj≠ Õ
,
jjÕ Œ
$str
jjœ Ë
,
jjË È
null
jjÍ Ó
,
jjÓ Ô
null
jj Ù
}
jjı ˆ
,
jjˆ ˜
{kk 
newkk 
Guidkk 
(kk 
$strkk E
)kkE F
,kkF G
$str	kkH è
,
kkè ê
$str
kkë À
,
kkÀ Ã
$str
kkÕ ‰
,
kk‰ Â
null
kkÊ Í
,
kkÍ Î
null
kkÏ 
,
kk Ò
$str
kkÚ £
,
kk£ §
$str
kk• Æ
,
kkÆ Ø
$str
kk∞ …
,
kk…  
$str
kkÀ Ò
,
kkÒ Ú
$str
kkÛ ¸
,
kk¸ ˝
$str
kk˛ ö
,
kkö õ
$str
kkú ©
,
kk© ™
$num
kk´ ¨
,
kk¨ ≠
$str
kkÆ Œ
,
kkŒ œ
$str
kk– Ë
,
kkË È
null
kkÍ Ó
,
kkÓ Ô
null
kk Ù
}
kkı ˆ
,
kkˆ ˜
{ll 
newll 
Guidll 
(ll 
$strll E
)llE F
,llF G
$str	llH Ã
,
llÃ Õ
$str
llŒ à
,
llà â
$str
llä ö
,
llö õ
null
llú †
,
ll† °
null
ll¢ ¶
,
ll¶ ß
$str
ll® Ÿ
,
llŸ ⁄
$str
ll€ ‰
,
ll‰ Â
$str
llÊ ˇ
,
llˇ Ä
$str
llÅ â
,
llâ ä
$str
llã ï
,
llï ñ
$str
lló ≥
,
ll≥ ¥
$str
llµ ¬
,
ll¬ √
$num
llƒ ≈
,
ll≈ ∆
$str
ll« ﬂ
,
llﬂ ‡
$str
ll· ˆ
,
llˆ ˜
null
ll¯ ¸
,
ll¸ ˝
null
ll˛ Ç
}
llÉ Ñ
,
llÑ Ö
{mm 
newmm 
Guidmm 
(mm 
$strmm E
)mmE F
,mmF G
$str	mmH û
,
mmû ü
$str
mm† ≈
,
mm≈ ∆
$str
mm« œ
,
mmœ –
null
mm— ’
,
mm’ ÷
null
mm◊ €
,
mm€ ‹
$str
mm› é
,
mmé è
$str
mmê ô
,
mmô ö
$str
mmõ µ
,
mmµ ∂
$str
mm∑ œ
,
mmœ –
$str
mm— €
,
mm€ ‹
$str
mm› ˘
,
mm˘ ˙
$str
mm˚ à
,
mmà â
$num
mmä ã
,
mmã å
$str
mmç ¢
,
mm¢ £
$str
mm§ µ
,
mmµ ∂
null
mm∑ ª
,
mmª º
null
mmΩ ¡
}
mm¬ √
,
mm√ ƒ
{nn 
newnn 
Guidnn 
(nn 
$strnn E
)nnE F
,nnF G
$str	nnH ®
,
nn® ©
$str
nn™ ÿ
,
nnÿ Ÿ
$str
nn⁄ ‰
,
nn‰ Â
null
nnÊ Í
,
nnÍ Î
null
nnÏ 
,
nn Ò
$str
nnÚ £
,
nn£ §
$str
nn• Æ
,
nnÆ Ø
$str
nn∞  
,
nn  À
$str
nnÃ Û
,
nnÛ Ù
$str
nnı ˇ
,
nnˇ Ä
$str
nnÅ ù
,
nnù û
$str
nnü ¨
,
nn¨ ≠
$num
nnÆ Ø
,
nnØ ∞
$str
nn± ∆
,
nn∆ «
$str
nn» ÿ
,
nnÿ Ÿ
null
nn⁄ ﬁ
,
nnﬁ ﬂ
null
nn‡ ‰
}
nnÂ Ê
,
nnÊ Á
{oo 
newoo 
Guidoo 
(oo 
$stroo E
)ooE F
,ooF G
$str	ooH Ñ
,
ooÑ Ö
$str
ooÜ ¿
,
oo¿ ¡
$str
oo¬ “
,
oo“ ”
null
oo‘ ÿ
,
ooÿ Ÿ
null
oo⁄ ﬁ
,
ooﬁ ﬂ
$str
oo‡ ë
,
ooë í
$str
ooì ú
,
ooú ù
$str
ooû ∑
,
oo∑ ∏
$str
ooπ ¡
,
oo¡ ¬
$str
oo√ Õ
,
ooÕ Œ
$str
ooœ Î
,
ooÎ Ï
$str
ooÌ ˙
,
oo˙ ˚
$num
oo¸ ˝
,
oo˝ ˛
$str
ooˇ ê
,
ooê ë
$str
ooí °
,
oo° ¢
null
oo£ ß
,
ooß ®
null
oo© ≠
}
ooÆ Ø
}pp 
)pp 
;pp 
}qq 	
	protectedtt 
overridett 
voidtt 
Downtt  $
(tt$ %
MigrationBuildertt% 5
migrationBuildertt6 F
)ttF G
{uu 	
migrationBuildervv 
.vv 

DeleteDatavv '
(vv' (
tableww 
:ww 
$strww '
,ww' (
	keyColumnxx 
:xx 
$strxx 
,xx  
keyValueyy 
:yy 
newyy 
Guidyy "
(yy" #
$stryy# I
)yyI J
)yyJ K
;yyK L
migrationBuilder{{ 
.{{ 

DeleteData{{ '
({{' (
table|| 
:|| 
$str|| '
,||' (
	keyColumn}} 
:}} 
$str}} 
,}}  
keyValue~~ 
:~~ 
new~~ 
Guid~~ "
(~~" #
$str~~# I
)~~I J
)~~J K
;~~K L
migrationBuilder
ÄÄ 
.
ÄÄ 

DeleteData
ÄÄ '
(
ÄÄ' (
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ '
,
ÅÅ' (
	keyColumn
ÇÇ 
:
ÇÇ 
$str
ÇÇ 
,
ÇÇ  
keyValue
ÉÉ 
:
ÉÉ 
new
ÉÉ 
Guid
ÉÉ "
(
ÉÉ" #
$str
ÉÉ# I
)
ÉÉI J
)
ÉÉJ K
;
ÉÉK L
migrationBuilder
ÖÖ 
.
ÖÖ 

DeleteData
ÖÖ '
(
ÖÖ' (
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ '
,
ÜÜ' (
	keyColumn
áá 
:
áá 
$str
áá 
,
áá  
keyValue
àà 
:
àà 
new
àà 
Guid
àà "
(
àà" #
$str
àà# I
)
ààI J
)
ààJ K
;
ààK L
migrationBuilder
ää 
.
ää 

DeleteData
ää '
(
ää' (
table
ãã 
:
ãã 
$str
ãã '
,
ãã' (
	keyColumn
åå 
:
åå 
$str
åå 
,
åå  
keyValue
çç 
:
çç 
new
çç 
Guid
çç "
(
çç" #
$str
çç# I
)
ççI J
)
ççJ K
;
ççK L
migrationBuilder
èè 
.
èè 

DeleteData
èè '
(
èè' (
table
êê 
:
êê 
$str
êê '
,
êê' (
	keyColumn
ëë 
:
ëë 
$str
ëë 
,
ëë  
keyValue
íí 
:
íí 
new
íí 
Guid
íí "
(
íí" #
$str
íí# I
)
ííI J
)
ííJ K
;
ííK L
migrationBuilder
îî 
.
îî 

DeleteData
îî '
(
îî' (
table
ïï 
:
ïï 
$str
ïï '
,
ïï' (
	keyColumn
ññ 
:
ññ 
$str
ññ 
,
ññ  
keyValue
óó 
:
óó 
new
óó 
Guid
óó "
(
óó" #
$str
óó# I
)
óóI J
)
óóJ K
;
óóK L
migrationBuilder
ôô 
.
ôô 

DeleteData
ôô '
(
ôô' (
table
öö 
:
öö 
$str
öö '
,
öö' (
	keyColumn
õõ 
:
õõ 
$str
õõ 
,
õõ  
keyValue
úú 
:
úú 
new
úú 
Guid
úú "
(
úú" #
$str
úú# I
)
úúI J
)
úúJ K
;
úúK L
migrationBuilder
ûû 
.
ûû 

DeleteData
ûû '
(
ûû' (
table
üü 
:
üü 
$str
üü '
,
üü' (
	keyColumn
†† 
:
†† 
$str
†† 
,
††  
keyValue
°° 
:
°° 
new
°° 
Guid
°° "
(
°°" #
$str
°°# I
)
°°I J
)
°°J K
;
°°K L
migrationBuilder
££ 
.
££ 

DeleteData
££ '
(
££' (
table
§§ 
:
§§ 
$str
§§ '
,
§§' (
	keyColumn
•• 
:
•• 
$str
•• 
,
••  
keyValue
¶¶ 
:
¶¶ 
new
¶¶ 
Guid
¶¶ "
(
¶¶" #
$str
¶¶# I
)
¶¶I J
)
¶¶J K
;
¶¶K L
migrationBuilder
®® 
.
®® 

DeleteData
®® '
(
®®' (
table
©© 
:
©© 
$str
©© '
,
©©' (
	keyColumn
™™ 
:
™™ 
$str
™™ 
,
™™  
keyValue
´´ 
:
´´ 
new
´´ 
Guid
´´ "
(
´´" #
$str
´´# I
)
´´I J
)
´´J K
;
´´K L
migrationBuilder
≠≠ 
.
≠≠ 

DeleteData
≠≠ '
(
≠≠' (
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ '
,
ÆÆ' (
	keyColumn
ØØ 
:
ØØ 
$str
ØØ 
,
ØØ  
keyValue
∞∞ 
:
∞∞ 
new
∞∞ 
Guid
∞∞ "
(
∞∞" #
$str
∞∞# I
)
∞∞I J
)
∞∞J K
;
∞∞K L
migrationBuilder
≤≤ 
.
≤≤ 

DeleteData
≤≤ '
(
≤≤' (
table
≥≥ 
:
≥≥ 
$str
≥≥ '
,
≥≥' (
	keyColumn
¥¥ 
:
¥¥ 
$str
¥¥ 
,
¥¥  
keyValue
µµ 
:
µµ 
new
µµ 
Guid
µµ "
(
µµ" #
$str
µµ# I
)
µµI J
)
µµJ K
;
µµK L
migrationBuilder
∑∑ 
.
∑∑ 

DropColumn
∑∑ '
(
∑∑' (
name
∏∏ 
:
∏∏ 
$str
∏∏ %
,
∏∏% &
table
ππ 
:
ππ 
$str
ππ $
)
ππ$ %
;
ππ% &
migrationBuilder
ªª 
.
ªª 

UpdateData
ªª '
(
ªª' (
table
ºº 
:
ºº 
$str
ºº $
,
ºº$ %
	keyColumn
ΩΩ 
:
ΩΩ 
$str
ΩΩ 
,
ΩΩ  
keyValue
ææ 
:
ææ 
$str
ææ +
,
ææ+ ,
columns
øø 
:
øø 
new
øø 
[
øø 
]
øø 
{
øø  
$str
øø! 3
,
øø3 4
$str
øø5 A
,
øøA B
$str
øøC Q
,
øøQ R
$str
øøS b
}
øøc d
,
øød e
values
¿¿ 
:
¿¿ 
new
¿¿ 
object
¿¿ "
[
¿¿" #
]
¿¿# $
{
¿¿% &
$str
¿¿' M
,
¿¿M N
new
¿¿O R
DateTime
¿¿S [
(
¿¿[ \
$num
¿¿\ `
,
¿¿` a
$num
¿¿b c
,
¿¿c d
$num
¿¿e g
,
¿¿g h
$num
¿¿i j
,
¿¿j k
$num
¿¿l n
,
¿¿n o
$num
¿¿p r
,
¿¿r s
$num
¿¿t w
,
¿¿w x
DateTimeKind¿¿y Ö
.¿¿Ö Ü
Utc¿¿Ü â
)¿¿â ä
.¿¿ä ã
AddTicks¿¿ã ì
(¿¿ì î
$num¿¿î ò
)¿¿ò ô
,¿¿ô ö
$str¿¿õ Ò
,¿¿Ò Ú
$str¿¿Û ô
}¿¿ö õ
)¿¿õ ú
;¿¿ú ù
migrationBuilder
¬¬ 
.
¬¬ 

InsertData
¬¬ '
(
¬¬' (
table
√√ 
:
√√ 
$str
√√ '
,
√√' (
columns
ƒƒ 
:
ƒƒ 
new
ƒƒ 
[
ƒƒ 
]
ƒƒ 
{
ƒƒ  
$str
ƒƒ! %
,
ƒƒ% &
$str
ƒƒ' 4
,
ƒƒ4 5
$str
ƒƒ6 D
,
ƒƒD E
$str
ƒƒF P
,
ƒƒP Q
$str
ƒƒR ]
,
ƒƒ] ^
$str
ƒƒ_ l
,
ƒƒl m
$str
ƒƒn }
,
ƒƒ} ~
$strƒƒ â
,ƒƒâ ä
$strƒƒã †
,ƒƒ† °
$strƒƒ¢ ±
,ƒƒ± ≤
$strƒƒ≥ ¬
,ƒƒ¬ √
$strƒƒƒ —
,ƒƒ— “
$strƒƒ” ﬂ
,ƒƒﬂ ‡
$strƒƒ· È
,ƒƒÈ Í
$strƒƒÎ ¯
,ƒƒ¯ ˘
$strƒƒ˙ à
,ƒƒà â
$strƒƒä ï
,ƒƒï ñ
$strƒƒó §
}ƒƒ• ¶
,ƒƒ¶ ß
values
≈≈ 
:
≈≈ 
new
≈≈ 
object
≈≈ "
[
≈≈" #
,
≈≈# $
]
≈≈$ %
{
∆∆ 
{
«« 
new
«« 
Guid
«« 
(
«« 
$str
«« E
)
««E F
,
««F G
$str««H ”
,««” ‘
$str««’ è
,««è ê
$str««ë ô
,««ô ö
null««õ ü
,««ü †
null««° •
,««• ¶
$str««ß ÿ
,««ÿ Ÿ
$str««⁄ „
,««„ ‰
$str««Â °
,««° ¢
$str««£ ∑
,««∑ ∏
$str««π √
,««√ ƒ
$str««≈ ·
,««· ‚
$str««„ 
,«« Ò
$num««Ú Û
,««Û Ù
$str««ı ñ
,««ñ ó
$str««ò π
,««π ∫
null««ª ø
,««ø ¿
null««¡ ≈
}««∆ «
,««« »
{
»» 
new
»» 
Guid
»» 
(
»» 
$str
»» E
)
»»E F
,
»»F G
$str»»H ∞
,»»∞ ±
$str»»≤ Ï
,»»Ï Ì
$str»»Ó ˜
,»»˜ ¯
null»»˘ ˝
,»»˝ ˛
null»»ˇ É
,»»É Ñ
$str»»Ö ∂
,»»∂ ∑
$str»»∏ ¡
,»»¡ ¬
$str»»√ ‹
,»»‹ ›
$str»»ﬁ ˘
,»»˘ ˙
$str»»˚ Ö
,»»Ö Ü
$str»»á £
,»»£ §
$str»»• ≤
,»»≤ ≥
$num»»¥ µ
,»»µ ∂
$str»»∑ À
,»»À Ã
$str»»Õ €
,»»€ ‹
null»»› ·
,»»· ‚
null»»„ Á
}»»Ë È
,»»È Í
{
…… 
new
…… 
Guid
…… 
(
…… 
$str
…… E
)
……E F
,
……F G
$str……H ë
,……ë í
$str……ì Õ
,……Õ Œ
$str……œ ·
,……· ‚
null……„ Á
,……Á Ë
null……È Ì
,……Ì Ó
$str……Ô †
,……† °
$str……¢ ´
,……´ ¨
$str……≠ ∆
,……∆ «
$str……» –
,……– —
$str……“ ‹
,……‹ ›
$str……ﬁ ˙
,……˙ ˚
$str……¸ â
,……â ä
$num……ã å
,……å ç
$str……é π
,……π ∫
$str……ª “
,……“ ”
null……‘ ÿ
,……ÿ Ÿ
null……⁄ ﬁ
}……ﬂ ‡
,……‡ ·
{
   
new
   
Guid
   
(
   
$str
   E
)
  E F
,
  F G
$str  H ®
,  ® ©
$str  ™ ÿ
,  ÿ Ÿ
$str  ⁄ ‰
,  ‰ Â
null  Ê Í
,  Í Î
null  Ï 
,   Ò
$str  Ú £
,  £ §
$str  • Æ
,  Æ Ø
$str  ∞  
,    À
$str  Ã Û
,  Û Ù
$str  ı ˇ
,  ˇ Ä
$str  Å ù
,  ù û
$str  ü ¨
,  ¨ ≠
$num  Æ Ø
,  Ø ∞
$str  ± ∆
,  ∆ «
$str  » ÿ
,  ÿ Ÿ
null  ⁄ ﬁ
,  ﬁ ﬂ
null  ‡ ‰
}  Â Ê
,  Ê Á
{
ÀÀ 
new
ÀÀ 
Guid
ÀÀ 
(
ÀÀ 
$str
ÀÀ E
)
ÀÀE F
,
ÀÀF G
$strÀÀH æ
,ÀÀæ ø
$strÀÀ¿ ù
,ÀÀù û
$strÀÀü ©
,ÀÀ© ™
nullÀÀ´ Ø
,ÀÀØ ∞
nullÀÀ± µ
,ÀÀµ ∂
$strÀÀ∑ ˚
,ÀÀ˚ ¸
$strÀÀ˝ Ü
,ÀÀÜ á
$strÀÀà ≠
,ÀÀ≠ Æ
$strÀÀØ ’
,ÀÀ’ ÷
$strÀÀ◊ ·
,ÀÀ· ‚
$strÀÀ„ ˇ
,ÀÀˇ Ä
$strÀÀÅ é
,ÀÀé è
$numÀÀê ë
,ÀÀë í
$strÀÀì ®
,ÀÀ® ©
$strÀÀ™ ø
,ÀÀø ¿
nullÀÀ¡ ≈
,ÀÀ≈ ∆
nullÀÀ« À
}ÀÀÃ Õ
,ÀÀÕ Œ
{
ÃÃ 
new
ÃÃ 
Guid
ÃÃ 
(
ÃÃ 
$str
ÃÃ E
)
ÃÃE F
,
ÃÃF G
$strÃÃH è
,ÃÃè ê
$strÃÃë ∫
,ÃÃ∫ ª
$strÃÃº  
,ÃÃ  À
nullÃÃÃ –
,ÃÃ– —
nullÃÃ“ ÷
,ÃÃ÷ ◊
$strÃÃÿ â
,ÃÃâ ä
$strÃÃã î
,ÃÃî ï
$strÃÃñ ¢
,ÃÃ¢ £
$strÃÃ§ ¥
,ÃÃ¥ µ
$strÃÃ∂ ¿
,ÃÃ¿ ¡
$strÃÃ¬ ÿ
,ÃÃÿ Ÿ
$strÃÃ⁄ Ê
,ÃÃÊ Á
$numÃÃË È
,ÃÃÈ Í
$strÃÃÎ ¸
,ÃÃ¸ ˝
$strÃÃ˛ ì
,ÃÃì î
nullÃÃï ô
,ÃÃô ö
nullÃÃõ ü
}ÃÃ† °
,ÃÃ° ¢
{
ÕÕ 
new
ÕÕ 
Guid
ÕÕ 
(
ÕÕ 
$str
ÕÕ E
)
ÕÕE F
,
ÕÕF G
$strÕÕH è
,ÕÕè ê
$strÕÕë À
,ÕÕÀ Ã
$strÕÕÕ ‰
,ÕÕ‰ Â
nullÕÕÊ Í
,ÕÕÍ Î
nullÕÕÏ 
,ÕÕ Ò
$strÕÕÚ £
,ÕÕ£ §
$strÕÕ• Æ
,ÕÕÆ Ø
$strÕÕ∞ …
,ÕÕ…  
$strÕÕÀ Ò
,ÕÕÒ Ú
$strÕÕÛ ¸
,ÕÕ¸ ˝
$strÕÕ˛ ö
,ÕÕö õ
$strÕÕú ©
,ÕÕ© ™
$numÕÕ´ ¨
,ÕÕ¨ ≠
$strÕÕÆ Œ
,ÕÕŒ œ
$strÕÕ– Ë
,ÕÕË È
nullÕÕÍ Ó
,ÕÕÓ Ô
nullÕÕ Ù
}ÕÕı ˆ
,ÕÕˆ ˜
{
ŒŒ 
new
ŒŒ 
Guid
ŒŒ 
(
ŒŒ 
$str
ŒŒ E
)
ŒŒE F
,
ŒŒF G
$str
ŒŒH s
,
ŒŒs t
$strŒŒu ô
,ŒŒô ö
$strŒŒõ •
,ŒŒ• ¶
nullŒŒß ´
,ŒŒ´ ¨
nullŒŒ≠ ±
,ŒŒ± ≤
$strŒŒ≥ ˘
,ŒŒ˘ ˙
$strŒŒ˚ Ñ
,ŒŒÑ Ö
$strŒŒÜ ü
,ŒŒü †
$strŒŒ° Œ
,ŒŒŒ œ
$strŒŒ– ‹
,ŒŒ‹ ›
$strŒŒﬁ ˙
,ŒŒ˙ ˚
$strŒŒ¸ â
,ŒŒâ ä
$numŒŒã å
,ŒŒå ç
$strŒŒé ª
,ŒŒª º
$strŒŒΩ ›
,ŒŒ› ﬁ
nullŒŒﬂ „
,ŒŒ„ ‰
nullŒŒÂ È
}ŒŒÍ Î
,ŒŒÎ Ï
{
œœ 
new
œœ 
Guid
œœ 
(
œœ 
$str
œœ E
)
œœE F
,
œœF G
$strœœH Ñ
,œœÑ Ö
$strœœÜ ¿
,œœ¿ ¡
$strœœ¬ “
,œœ“ ”
nullœœ‘ ÿ
,œœÿ Ÿ
nullœœ⁄ ﬁ
,œœﬁ ﬂ
$strœœ‡ ë
,œœë í
$strœœì ú
,œœú ù
$strœœû ∑
,œœ∑ ∏
$strœœπ ¡
,œœ¡ ¬
$strœœ√ Õ
,œœÕ Œ
$strœœœ Î
,œœÎ Ï
$strœœÌ ˙
,œœ˙ ˚
$numœœ¸ ˝
,œœ˝ ˛
$strœœˇ ê
,œœê ë
$strœœí °
,œœ° ¢
nullœœ£ ß
,œœß ®
nullœœ© ≠
}œœÆ Ø
,œœØ ∞
{
–– 
new
–– 
Guid
–– 
(
–– 
$str
–– E
)
––E F
,
––F G
$str––H è
,––è ê
$str––ë À
,––À Ã
$str––Õ ‰
,––‰ Â
null––Ê Í
,––Í Î
null––Ï 
,–– Ò
$str––Ú £
,––£ §
$str––• Æ
,––Æ Ø
$str––∞ …
,––…  
$str––À Ì
,––Ì Ó
$str––Ô ˚
,––˚ ¸
$str––˝ ô
,––ô ö
$str––õ ®
,––® ©
$num––™ ´
,––´ ¨
$str––≠ Õ
,––Õ Œ
$str––œ Ë
,––Ë È
null––Í Ó
,––Ó Ô
null–– Ù
}––ı ˆ
,––ˆ ˜
{
—— 
new
—— 
Guid
—— 
(
—— 
$str
—— E
)
——E F
,
——F G
$str——H ë
,——ë í
$str——ì Õ
,——Õ Œ
$str——œ ·
,——· ‚
null——„ Á
,——Á Ë
null——È Ì
,——Ì Ó
$str——Ô †
,——† °
$str——¢ ´
,——´ ¨
$str——≠ ∆
,——∆ «
$str——» Ê
,——Ê Á
$str——Ë Ô
,——Ô 
$str——Ò ç
,——ç é
$str——è ú
,——ú ù
$num——û ü
,——ü †
$str——° ø
,——ø ¿
$str——¡ Â
,——Â Ê
null——Á Î
,——Î Ï
null——Ì Ò
}——Ú Û
,——Û Ù
{
““ 
new
““ 
Guid
““ 
(
““ 
$str
““ E
)
““E F
,
““F G
$str““H û
,““û ü
$str““† ≈
,““≈ ∆
$str““« œ
,““œ –
null““— ’
,““’ ÷
null““◊ €
,““€ ‹
$str““› é
,““é è
$str““ê ô
,““ô ö
$str““õ µ
,““µ ∂
$str““∑ œ
,““œ –
$str““— €
,““€ ‹
$str““› ˘
,““˘ ˙
$str““˚ à
,““à â
$num““ä ã
,““ã å
$str““ç ¢
,““¢ £
$str““§ µ
,““µ ∂
null““∑ ª
,““ª º
null““Ω ¡
}““¬ √
,““√ ƒ
{
”” 
new
”” 
Guid
”” 
(
”” 
$str
”” E
)
””E F
,
””F G
$str””H Ã
,””Ã Õ
$str””Œ à
,””à â
$str””ä ö
,””ö õ
null””ú †
,””† °
null””¢ ¶
,””¶ ß
$str””® Ÿ
,””Ÿ ⁄
$str””€ ‰
,””‰ Â
$str””Ê ˇ
,””ˇ Ä
$str””Å â
,””â ä
$str””ã ï
,””ï ñ
$str””ó ≥
,””≥ ¥
$str””µ ¬
,””¬ √
$num””ƒ ≈
,””≈ ∆
$str””« ﬂ
,””ﬂ ‡
$str””· ˆ
,””ˆ ˜
null””¯ ¸
,””¸ ˝
null””˛ Ç
}””É Ñ
}
‘‘ 
)
‘‘ 
;
‘‘ 
}
’’ 	
}
÷÷ 
}◊◊ Ì∑
ÑD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240729054128_RemoveTablePaymentCard.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class "
RemoveTablePaymentCard /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str $
)$ %
;% &
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue   
:   
new   
Guid   "
(  " #
$str  # I
)  I J
)  J K
;  K L
migrationBuilder"" 
."" 

DeleteData"" '
(""' (
table## 
:## 
$str## '
,##' (
	keyColumn$$ 
:$$ 
$str$$ 
,$$  
keyValue%% 
:%% 
new%% 
Guid%% "
(%%" #
$str%%# I
)%%I J
)%%J K
;%%K L
migrationBuilder'' 
.'' 

DeleteData'' '
(''' (
table(( 
:(( 
$str(( '
,((' (
	keyColumn)) 
:)) 
$str)) 
,))  
keyValue** 
:** 
new** 
Guid** "
(**" #
$str**# I
)**I J
)**J K
;**K L
migrationBuilder,, 
.,, 

DeleteData,, '
(,,' (
table-- 
:-- 
$str-- '
,--' (
	keyColumn.. 
:.. 
$str.. 
,..  
keyValue// 
:// 
new// 
Guid// "
(//" #
$str//# I
)//I J
)//J K
;//K L
migrationBuilder11 
.11 

DeleteData11 '
(11' (
table22 
:22 
$str22 '
,22' (
	keyColumn33 
:33 
$str33 
,33  
keyValue44 
:44 
new44 
Guid44 "
(44" #
$str44# I
)44I J
)44J K
;44K L
migrationBuilder66 
.66 

DeleteData66 '
(66' (
table77 
:77 
$str77 '
,77' (
	keyColumn88 
:88 
$str88 
,88  
keyValue99 
:99 
new99 
Guid99 "
(99" #
$str99# I
)99I J
)99J K
;99K L
migrationBuilder;; 
.;; 

DeleteData;; '
(;;' (
table<< 
:<< 
$str<< '
,<<' (
	keyColumn== 
:== 
$str== 
,==  
keyValue>> 
:>> 
new>> 
Guid>> "
(>>" #
$str>># I
)>>I J
)>>J K
;>>K L
migrationBuilder@@ 
.@@ 

DeleteData@@ '
(@@' (
tableAA 
:AA 
$strAA '
,AA' (
	keyColumnBB 
:BB 
$strBB 
,BB  
keyValueCC 
:CC 
newCC 
GuidCC "
(CC" #
$strCC# I
)CCI J
)CCJ K
;CCK L
migrationBuilderEE 
.EE 

DeleteDataEE '
(EE' (
tableFF 
:FF 
$strFF '
,FF' (
	keyColumnGG 
:GG 
$strGG 
,GG  
keyValueHH 
:HH 
newHH 
GuidHH "
(HH" #
$strHH# I
)HHI J
)HHJ K
;HHK L
migrationBuilderJJ 
.JJ 

DeleteDataJJ '
(JJ' (
tableKK 
:KK 
$strKK '
,KK' (
	keyColumnLL 
:LL 
$strLL 
,LL  
keyValueMM 
:MM 
newMM 
GuidMM "
(MM" #
$strMM# I
)MMI J
)MMJ K
;MMK L
migrationBuilderOO 
.OO 

DeleteDataOO '
(OO' (
tablePP 
:PP 
$strPP '
,PP' (
	keyColumnQQ 
:QQ 
$strQQ 
,QQ  
keyValueRR 
:RR 
newRR 
GuidRR "
(RR" #
$strRR# I
)RRI J
)RRJ K
;RRK L
migrationBuilderTT 
.TT 

UpdateDataTT '
(TT' (
tableUU 
:UU 
$strUU $
,UU$ %
	keyColumnVV 
:VV 
$strVV 
,VV  
keyValueWW 
:WW 
$strWW +
,WW+ ,
columnsXX 
:XX 
newXX 
[XX 
]XX 
{XX  
$strXX! 3
,XX3 4
$strXX5 A
,XXA B
$strXXC Q
,XXQ R
$strXXS b
}XXc d
,XXd e
valuesYY 
:YY 
newYY 
objectYY "
[YY" #
]YY# $
{YY% &
$strYY' M
,YYM N
newYYO R
DateTimeYYS [
(YY[ \
$numYY\ `
,YY` a
$numYYb c
,YYc d
$numYYe g
,YYg h
$numYYi j
,YYj k
$numYYl n
,YYn o
$numYYp r
,YYr s
$numYYt w
,YYw x
DateTimeKind	YYy Ö
.
YYÖ Ü
Utc
YYÜ â
)
YYâ ä
.
YYä ã
AddTicks
YYã ì
(
YYì î
$num
YYî ò
)
YYò ô
,
YYô ö
$str
YYõ Ò
,
YYÒ Ú
$str
YYÛ ô
}
YYö õ
)
YYõ ú
;
YYú ù
migrationBuilder[[ 
.[[ 

InsertData[[ '
([[' (
table\\ 
:\\ 
$str\\ '
,\\' (
columns]] 
:]] 
new]] 
[]] 
]]] 
{]]  
$str]]! %
,]]% &
$str]]' 4
,]]4 5
$str]]6 D
,]]D E
$str]]F P
,]]P Q
$str]]R ]
,]]] ^
$str]]_ l
,]]l m
$str]]n }
,]]} ~
$str	]] â
,
]]â ä
$str
]]ã †
,
]]† °
$str
]]¢ ±
,
]]± ≤
$str
]]≥ ¬
,
]]¬ √
$str
]]ƒ —
,
]]— “
$str
]]” ﬂ
,
]]ﬂ ‡
$str
]]· È
,
]]È Í
$str
]]Î ¯
,
]]¯ ˘
$str
]]˙ à
,
]]à â
$str
]]ä ï
,
]]ï ñ
$str
]]ó §
}
]]• ¶
,
]]¶ ß
values^^ 
:^^ 
new^^ 
object^^ "
[^^" #
,^^# $
]^^$ %
{__ 
{`` 
new`` 
Guid`` 
(`` 
$str`` E
)``E F
,``F G
$str	``H ”
,
``” ‘
$str
``’ è
,
``è ê
$str
``ë ô
,
``ô ö
null
``õ ü
,
``ü †
null
``° •
,
``• ¶
$str
``ß ÿ
,
``ÿ Ÿ
$str
``⁄ „
,
``„ ‰
$str
``Â °
,
``° ¢
$str
``£ ∑
,
``∑ ∏
$str
``π √
,
``√ ƒ
$str
``≈ ·
,
``· ‚
$str
``„ 
,
`` Ò
$num
``Ú Û
,
``Û Ù
$str
``ı ñ
,
``ñ ó
$str
``ò π
,
``π ∫
null
``ª ø
,
``ø ¿
null
``¡ ≈
}
``∆ «
,
``« »
{aa 
newaa 
Guidaa 
(aa 
$straa E
)aaE F
,aaF G
$str	aaH ∞
,
aa∞ ±
$str
aa≤ Ï
,
aaÏ Ì
$str
aaÓ ˜
,
aa˜ ¯
null
aa˘ ˝
,
aa˝ ˛
null
aaˇ É
,
aaÉ Ñ
$str
aaÖ ∂
,
aa∂ ∑
$str
aa∏ ¡
,
aa¡ ¬
$str
aa√ ‹
,
aa‹ ›
$str
aaﬁ ˘
,
aa˘ ˙
$str
aa˚ Ö
,
aaÖ Ü
$str
aaá £
,
aa£ §
$str
aa• ≤
,
aa≤ ≥
$num
aa¥ µ
,
aaµ ∂
$str
aa∑ À
,
aaÀ Ã
$str
aaÕ €
,
aa€ ‹
null
aa› ·
,
aa· ‚
null
aa„ Á
}
aaË È
,
aaÈ Í
{bb 
newbb 
Guidbb 
(bb 
$strbb E
)bbE F
,bbF G
$str	bbH ë
,
bbë í
$str
bbì Õ
,
bbÕ Œ
$str
bbœ ·
,
bb· ‚
null
bb„ Á
,
bbÁ Ë
null
bbÈ Ì
,
bbÌ Ó
$str
bbÔ †
,
bb† °
$str
bb¢ ´
,
bb´ ¨
$str
bb≠ ∆
,
bb∆ «
$str
bb» –
,
bb– —
$str
bb“ ‹
,
bb‹ ›
$str
bbﬁ ˙
,
bb˙ ˚
$str
bb¸ â
,
bbâ ä
$num
bbã å
,
bbå ç
$str
bbé π
,
bbπ ∫
$str
bbª “
,
bb“ ”
null
bb‘ ÿ
,
bbÿ Ÿ
null
bb⁄ ﬁ
}
bbﬂ ‡
,
bb‡ ·
{cc 
newcc 
Guidcc 
(cc 
$strcc E
)ccE F
,ccF G
$str	ccH ®
,
cc® ©
$str
cc™ ÿ
,
ccÿ Ÿ
$str
cc⁄ ‰
,
cc‰ Â
null
ccÊ Í
,
ccÍ Î
null
ccÏ 
,
cc Ò
$str
ccÚ £
,
cc£ §
$str
cc• Æ
,
ccÆ Ø
$str
cc∞  
,
cc  À
$str
ccÃ Û
,
ccÛ Ù
$str
ccı ˇ
,
ccˇ Ä
$str
ccÅ ù
,
ccù û
$str
ccü ¨
,
cc¨ ≠
$num
ccÆ Ø
,
ccØ ∞
$str
cc± ∆
,
cc∆ «
$str
cc» ÿ
,
ccÿ Ÿ
null
cc⁄ ﬁ
,
ccﬁ ﬂ
null
cc‡ ‰
}
ccÂ Ê
,
ccÊ Á
{dd 
newdd 
Guiddd 
(dd 
$strdd E
)ddE F
,ddF G
$str	ddH æ
,
ddæ ø
$str
dd¿ ù
,
ddù û
$str
ddü ©
,
dd© ™
null
dd´ Ø
,
ddØ ∞
null
dd± µ
,
ddµ ∂
$str
dd∑ ˚
,
dd˚ ¸
$str
dd˝ Ü
,
ddÜ á
$str
ddà ≠
,
dd≠ Æ
$str
ddØ ’
,
dd’ ÷
$str
dd◊ ·
,
dd· ‚
$str
dd„ ˇ
,
ddˇ Ä
$str
ddÅ é
,
ddé è
$num
ddê ë
,
ddë í
$str
ddì ®
,
dd® ©
$str
dd™ ø
,
ddø ¿
null
dd¡ ≈
,
dd≈ ∆
null
dd« À
}
ddÃ Õ
,
ddÕ Œ
{ee 
newee 
Guidee 
(ee 
$stree E
)eeE F
,eeF G
$str	eeH è
,
eeè ê
$str
eeë ∫
,
ee∫ ª
$str
eeº  
,
ee  À
null
eeÃ –
,
ee– —
null
ee“ ÷
,
ee÷ ◊
$str
eeÿ â
,
eeâ ä
$str
eeã î
,
eeî ï
$str
eeñ ¢
,
ee¢ £
$str
ee§ ¥
,
ee¥ µ
$str
ee∂ ¿
,
ee¿ ¡
$str
ee¬ ÿ
,
eeÿ Ÿ
$str
ee⁄ Ê
,
eeÊ Á
$num
eeË È
,
eeÈ Í
$str
eeÎ ¸
,
ee¸ ˝
$str
ee˛ ì
,
eeì î
null
eeï ô
,
eeô ö
null
eeõ ü
}
ee† °
,
ee° ¢
{ff 
newff 
Guidff 
(ff 
$strff E
)ffE F
,ffF G
$str	ffH è
,
ffè ê
$str
ffë À
,
ffÀ Ã
$str
ffÕ ‰
,
ff‰ Â
null
ffÊ Í
,
ffÍ Î
null
ffÏ 
,
ff Ò
$str
ffÚ £
,
ff£ §
$str
ff• Æ
,
ffÆ Ø
$str
ff∞ …
,
ff…  
$str
ffÀ Ò
,
ffÒ Ú
$str
ffÛ ¸
,
ff¸ ˝
$str
ff˛ ö
,
ffö õ
$str
ffú ©
,
ff© ™
$num
ff´ ¨
,
ff¨ ≠
$str
ffÆ Œ
,
ffŒ œ
$str
ff– Ë
,
ffË È
null
ffÍ Ó
,
ffÓ Ô
null
ff Ù
}
ffı ˆ
,
ffˆ ˜
{gg 
newgg 
Guidgg 
(gg 
$strgg E
)ggE F
,ggF G
$strggH s
,ggs t
$str	ggu ô
,
ggô ö
$str
ggõ •
,
gg• ¶
null
ggß ´
,
gg´ ¨
null
gg≠ ±
,
gg± ≤
$str
gg≥ ˘
,
gg˘ ˙
$str
gg˚ Ñ
,
ggÑ Ö
$str
ggÜ ü
,
ggü †
$str
gg° Œ
,
ggŒ œ
$str
gg– ‹
,
gg‹ ›
$str
ggﬁ ˙
,
gg˙ ˚
$str
gg¸ â
,
ggâ ä
$num
ggã å
,
ggå ç
$str
ggé ª
,
ggª º
$str
ggΩ ›
,
gg› ﬁ
null
ggﬂ „
,
gg„ ‰
null
ggÂ È
}
ggÍ Î
,
ggÎ Ï
{hh 
newhh 
Guidhh 
(hh 
$strhh E
)hhE F
,hhF G
$str	hhH Ñ
,
hhÑ Ö
$str
hhÜ ¿
,
hh¿ ¡
$str
hh¬ “
,
hh“ ”
null
hh‘ ÿ
,
hhÿ Ÿ
null
hh⁄ ﬁ
,
hhﬁ ﬂ
$str
hh‡ ë
,
hhë í
$str
hhì ú
,
hhú ù
$str
hhû ∑
,
hh∑ ∏
$str
hhπ ¡
,
hh¡ ¬
$str
hh√ Õ
,
hhÕ Œ
$str
hhœ Î
,
hhÎ Ï
$str
hhÌ ˙
,
hh˙ ˚
$num
hh¸ ˝
,
hh˝ ˛
$str
hhˇ ê
,
hhê ë
$str
hhí °
,
hh° ¢
null
hh£ ß
,
hhß ®
null
hh© ≠
}
hhÆ Ø
,
hhØ ∞
{ii 
newii 
Guidii 
(ii 
$strii E
)iiE F
,iiF G
$str	iiH è
,
iiè ê
$str
iië À
,
iiÀ Ã
$str
iiÕ ‰
,
ii‰ Â
null
iiÊ Í
,
iiÍ Î
null
iiÏ 
,
ii Ò
$str
iiÚ £
,
ii£ §
$str
ii• Æ
,
iiÆ Ø
$str
ii∞ …
,
ii…  
$str
iiÀ Ì
,
iiÌ Ó
$str
iiÔ ˚
,
ii˚ ¸
$str
ii˝ ô
,
iiô ö
$str
iiõ ®
,
ii® ©
$num
ii™ ´
,
ii´ ¨
$str
ii≠ Õ
,
iiÕ Œ
$str
iiœ Ë
,
iiË È
null
iiÍ Ó
,
iiÓ Ô
null
ii Ù
}
iiı ˆ
,
iiˆ ˜
{jj 
newjj 
Guidjj 
(jj 
$strjj E
)jjE F
,jjF G
$str	jjH ë
,
jjë í
$str
jjì Õ
,
jjÕ Œ
$str
jjœ ·
,
jj· ‚
null
jj„ Á
,
jjÁ Ë
null
jjÈ Ì
,
jjÌ Ó
$str
jjÔ †
,
jj† °
$str
jj¢ ´
,
jj´ ¨
$str
jj≠ ∆
,
jj∆ «
$str
jj» Ê
,
jjÊ Á
$str
jjË Ô
,
jjÔ 
$str
jjÒ ç
,
jjç é
$str
jjè ú
,
jjú ù
$num
jjû ü
,
jjü †
$str
jj° ø
,
jjø ¿
$str
jj¡ Â
,
jjÂ Ê
null
jjÁ Î
,
jjÎ Ï
null
jjÌ Ò
}
jjÚ Û
,
jjÛ Ù
{kk 
newkk 
Guidkk 
(kk 
$strkk E
)kkE F
,kkF G
$str	kkH û
,
kkû ü
$str
kk† ≈
,
kk≈ ∆
$str
kk« œ
,
kkœ –
null
kk— ’
,
kk’ ÷
null
kk◊ €
,
kk€ ‹
$str
kk› é
,
kké è
$str
kkê ô
,
kkô ö
$str
kkõ µ
,
kkµ ∂
$str
kk∑ œ
,
kkœ –
$str
kk— €
,
kk€ ‹
$str
kk› ˘
,
kk˘ ˙
$str
kk˚ à
,
kkà â
$num
kkä ã
,
kkã å
$str
kkç ¢
,
kk¢ £
$str
kk§ µ
,
kkµ ∂
null
kk∑ ª
,
kkª º
null
kkΩ ¡
}
kk¬ √
,
kk√ ƒ
{ll 
newll 
Guidll 
(ll 
$strll E
)llE F
,llF G
$str	llH Ã
,
llÃ Õ
$str
llŒ à
,
llà â
$str
llä ö
,
llö õ
null
llú †
,
ll† °
null
ll¢ ¶
,
ll¶ ß
$str
ll® Ÿ
,
llŸ ⁄
$str
ll€ ‰
,
ll‰ Â
$str
llÊ ˇ
,
llˇ Ä
$str
llÅ â
,
llâ ä
$str
llã ï
,
llï ñ
$str
lló ≥
,
ll≥ ¥
$str
llµ ¬
,
ll¬ √
$num
llƒ ≈
,
ll≈ ∆
$str
ll« ﬂ
,
llﬂ ‡
$str
ll· ˆ
,
llˆ ˜
null
ll¯ ¸
,
ll¸ ˝
null
ll˛ Ç
}
llÉ Ñ
}mm 
)mm 
;mm 
}nn 	
	protectedqq 
overrideqq 
voidqq 
Downqq  $
(qq$ %
MigrationBuilderqq% 5
migrationBuilderqq6 F
)qqF G
{rr 	
migrationBuilderss 
.ss 

DeleteDatass '
(ss' (
tablett 
:tt 
$strtt '
,tt' (
	keyColumnuu 
:uu 
$struu 
,uu  
keyValuevv 
:vv 
newvv 
Guidvv "
(vv" #
$strvv# I
)vvI J
)vvJ K
;vvK L
migrationBuilderxx 
.xx 

DeleteDataxx '
(xx' (
tableyy 
:yy 
$stryy '
,yy' (
	keyColumnzz 
:zz 
$strzz 
,zz  
keyValue{{ 
:{{ 
new{{ 
Guid{{ "
({{" #
$str{{# I
){{I J
){{J K
;{{K L
migrationBuilder}} 
.}} 

DeleteData}} '
(}}' (
table~~ 
:~~ 
$str~~ '
,~~' (
	keyColumn 
: 
$str 
,  
keyValue
ÄÄ 
:
ÄÄ 
new
ÄÄ 
Guid
ÄÄ "
(
ÄÄ" #
$str
ÄÄ# I
)
ÄÄI J
)
ÄÄJ K
;
ÄÄK L
migrationBuilder
ÇÇ 
.
ÇÇ 

DeleteData
ÇÇ '
(
ÇÇ' (
table
ÉÉ 
:
ÉÉ 
$str
ÉÉ '
,
ÉÉ' (
	keyColumn
ÑÑ 
:
ÑÑ 
$str
ÑÑ 
,
ÑÑ  
keyValue
ÖÖ 
:
ÖÖ 
new
ÖÖ 
Guid
ÖÖ "
(
ÖÖ" #
$str
ÖÖ# I
)
ÖÖI J
)
ÖÖJ K
;
ÖÖK L
migrationBuilder
áá 
.
áá 

DeleteData
áá '
(
áá' (
table
àà 
:
àà 
$str
àà '
,
àà' (
	keyColumn
ââ 
:
ââ 
$str
ââ 
,
ââ  
keyValue
ää 
:
ää 
new
ää 
Guid
ää "
(
ää" #
$str
ää# I
)
ääI J
)
ääJ K
;
ääK L
migrationBuilder
åå 
.
åå 

DeleteData
åå '
(
åå' (
table
çç 
:
çç 
$str
çç '
,
çç' (
	keyColumn
éé 
:
éé 
$str
éé 
,
éé  
keyValue
èè 
:
èè 
new
èè 
Guid
èè "
(
èè" #
$str
èè# I
)
èèI J
)
èèJ K
;
èèK L
migrationBuilder
ëë 
.
ëë 

DeleteData
ëë '
(
ëë' (
table
íí 
:
íí 
$str
íí '
,
íí' (
	keyColumn
ìì 
:
ìì 
$str
ìì 
,
ìì  
keyValue
îî 
:
îî 
new
îî 
Guid
îî "
(
îî" #
$str
îî# I
)
îîI J
)
îîJ K
;
îîK L
migrationBuilder
ññ 
.
ññ 

DeleteData
ññ '
(
ññ' (
table
óó 
:
óó 
$str
óó '
,
óó' (
	keyColumn
òò 
:
òò 
$str
òò 
,
òò  
keyValue
ôô 
:
ôô 
new
ôô 
Guid
ôô "
(
ôô" #
$str
ôô# I
)
ôôI J
)
ôôJ K
;
ôôK L
migrationBuilder
õõ 
.
õõ 

DeleteData
õõ '
(
õõ' (
table
úú 
:
úú 
$str
úú '
,
úú' (
	keyColumn
ùù 
:
ùù 
$str
ùù 
,
ùù  
keyValue
ûû 
:
ûû 
new
ûû 
Guid
ûû "
(
ûû" #
$str
ûû# I
)
ûûI J
)
ûûJ K
;
ûûK L
migrationBuilder
†† 
.
†† 

DeleteData
†† '
(
††' (
table
°° 
:
°° 
$str
°° '
,
°°' (
	keyColumn
¢¢ 
:
¢¢ 
$str
¢¢ 
,
¢¢  
keyValue
££ 
:
££ 
new
££ 
Guid
££ "
(
££" #
$str
££# I
)
££I J
)
££J K
;
££K L
migrationBuilder
•• 
.
•• 

DeleteData
•• '
(
••' (
table
¶¶ 
:
¶¶ 
$str
¶¶ '
,
¶¶' (
	keyColumn
ßß 
:
ßß 
$str
ßß 
,
ßß  
keyValue
®® 
:
®® 
new
®® 
Guid
®® "
(
®®" #
$str
®®# I
)
®®I J
)
®®J K
;
®®K L
migrationBuilder
™™ 
.
™™ 

DeleteData
™™ '
(
™™' (
table
´´ 
:
´´ 
$str
´´ '
,
´´' (
	keyColumn
¨¨ 
:
¨¨ 
$str
¨¨ 
,
¨¨  
keyValue
≠≠ 
:
≠≠ 
new
≠≠ 
Guid
≠≠ "
(
≠≠" #
$str
≠≠# I
)
≠≠I J
)
≠≠J K
;
≠≠K L
migrationBuilder
ØØ 
.
ØØ 

DeleteData
ØØ '
(
ØØ' (
table
∞∞ 
:
∞∞ 
$str
∞∞ '
,
∞∞' (
	keyColumn
±± 
:
±± 
$str
±± 
,
±±  
keyValue
≤≤ 
:
≤≤ 
new
≤≤ 
Guid
≤≤ "
(
≤≤" #
$str
≤≤# I
)
≤≤I J
)
≤≤J K
;
≤≤K L
migrationBuilder
¥¥ 
.
¥¥ 
CreateTable
¥¥ (
(
¥¥( )
name
µµ 
:
µµ 
$str
µµ $
,
µµ$ %
columns
∂∂ 
:
∂∂ 
table
∂∂ 
=>
∂∂ !
new
∂∂" %
{
∑∑ 

CardNumber
∏∏ 
=
∏∏  
table
∏∏! &
.
∏∏& '
Column
∏∏' -
<
∏∏- .
string
∏∏. 4
>
∏∏4 5
(
∏∏5 6
type
∏∏6 :
:
∏∏: ;
$str
∏∏< K
,
∏∏K L
nullable
∏∏M U
:
∏∏U V
false
∏∏W \
)
∏∏\ ]
,
∏∏] ^
UserId
ππ 
=
ππ 
table
ππ "
.
ππ" #
Column
ππ# )
<
ππ) *
string
ππ* 0
>
ππ0 1
(
ππ1 2
type
ππ2 6
:
ππ6 7
$str
ππ8 G
,
ππG H
nullable
ππI Q
:
ππQ R
false
ππS X
)
ππX Y
,
ππY Z
CardName
∫∫ 
=
∫∫ 
table
∫∫ $
.
∫∫$ %
Column
∫∫% +
<
∫∫+ ,
string
∫∫, 2
>
∫∫2 3
(
∫∫3 4
type
∫∫4 8
:
∫∫8 9
$str
∫∫: I
,
∫∫I J
nullable
∫∫K S
:
∫∫S T
false
∫∫U Z
)
∫∫Z [
,
∫∫[ \
CardProvider
ªª  
=
ªª! "
table
ªª# (
.
ªª( )
Column
ªª) /
<
ªª/ 0
string
ªª0 6
>
ªª6 7
(
ªª7 8
type
ªª8 <
:
ªª< =
$str
ªª> M
,
ªªM N
nullable
ªªO W
:
ªªW X
false
ªªY ^
)
ªª^ _
}
ºº 
,
ºº 
constraints
ΩΩ 
:
ΩΩ 
table
ΩΩ "
=>
ΩΩ# %
{
ææ 
table
øø 
.
øø 

PrimaryKey
øø $
(
øø$ %
$str
øø% 6
,
øø6 7
x
øø8 9
=>
øø: <
x
øø= >
.
øø> ?

CardNumber
øø? I
)
øøI J
;
øøJ K
table
¿¿ 
.
¿¿ 

ForeignKey
¿¿ $
(
¿¿$ %
name
¡¡ 
:
¡¡ 
$str
¡¡ B
,
¡¡B C
column
¬¬ 
:
¬¬ 
x
¬¬  !
=>
¬¬" $
x
¬¬% &
.
¬¬& '
UserId
¬¬' -
,
¬¬- .
principalTable
√√ &
:
√√& '
$str
√√( 5
,
√√5 6
principalColumn
ƒƒ '
:
ƒƒ' (
$str
ƒƒ) -
,
ƒƒ- .
onDelete
≈≈  
:
≈≈  !
ReferentialAction
≈≈" 3
.
≈≈3 4
Cascade
≈≈4 ;
)
≈≈; <
;
≈≈< =
}
∆∆ 
)
∆∆ 
;
∆∆ 
migrationBuilder
»» 
.
»» 

UpdateData
»» '
(
»»' (
table
…… 
:
…… 
$str
…… $
,
……$ %
	keyColumn
   
:
   
$str
   
,
    
keyValue
ÀÀ 
:
ÀÀ 
$str
ÀÀ +
,
ÀÀ+ ,
columns
ÃÃ 
:
ÃÃ 
new
ÃÃ 
[
ÃÃ 
]
ÃÃ 
{
ÃÃ  
$str
ÃÃ! 3
,
ÃÃ3 4
$str
ÃÃ5 A
,
ÃÃA B
$str
ÃÃC Q
,
ÃÃQ R
$str
ÃÃS b
}
ÃÃc d
,
ÃÃd e
values
ÕÕ 
:
ÕÕ 
new
ÕÕ 
object
ÕÕ "
[
ÕÕ" #
]
ÕÕ# $
{
ÕÕ% &
$str
ÕÕ' M
,
ÕÕM N
new
ÕÕO R
DateTime
ÕÕS [
(
ÕÕ[ \
$num
ÕÕ\ `
,
ÕÕ` a
$num
ÕÕb c
,
ÕÕc d
$num
ÕÕe g
,
ÕÕg h
$num
ÕÕi j
,
ÕÕj k
$num
ÕÕl n
,
ÕÕn o
$num
ÕÕp r
,
ÕÕr s
$num
ÕÕt w
,
ÕÕw x
DateTimeKindÕÕy Ö
.ÕÕÖ Ü
UtcÕÕÜ â
)ÕÕâ ä
.ÕÕä ã
AddTicksÕÕã ì
(ÕÕì î
$numÕÕî ò
)ÕÕò ô
,ÕÕô ö
$strÕÕõ Ò
,ÕÕÒ Ú
$strÕÕÛ ô
}ÕÕö õ
)ÕÕõ ú
;ÕÕú ù
migrationBuilder
œœ 
.
œœ 

InsertData
œœ '
(
œœ' (
table
–– 
:
–– 
$str
–– '
,
––' (
columns
—— 
:
—— 
new
—— 
[
—— 
]
—— 
{
——  
$str
——! %
,
——% &
$str
——' 4
,
——4 5
$str
——6 D
,
——D E
$str
——F P
,
——P Q
$str
——R ]
,
——] ^
$str
——_ l
,
——l m
$str
——n }
,
——} ~
$str—— â
,——â ä
$str——ã †
,——† °
$str——¢ ±
,——± ≤
$str——≥ ¬
,——¬ √
$str——ƒ —
,——— “
$str——” ﬂ
,——ﬂ ‡
$str——· È
,——È Í
$str——Î ¯
,——¯ ˘
$str——˙ à
,——à â
$str——ä ï
,——ï ñ
$str——ó §
}——• ¶
,——¶ ß
values
““ 
:
““ 
new
““ 
object
““ "
[
““" #
,
““# $
]
““$ %
{
”” 
{
‘‘ 
new
‘‘ 
Guid
‘‘ 
(
‘‘ 
$str
‘‘ E
)
‘‘E F
,
‘‘F G
$str‘‘H Ñ
,‘‘Ñ Ö
$str‘‘Ü ¿
,‘‘¿ ¡
$str‘‘¬ “
,‘‘“ ”
null‘‘‘ ÿ
,‘‘ÿ Ÿ
null‘‘⁄ ﬁ
,‘‘ﬁ ﬂ
$str‘‘‡ ë
,‘‘ë í
$str‘‘ì ú
,‘‘ú ù
$str‘‘û ∑
,‘‘∑ ∏
$str‘‘π ¡
,‘‘¡ ¬
$str‘‘√ Õ
,‘‘Õ Œ
$str‘‘œ Î
,‘‘Î Ï
$str‘‘Ì ˙
,‘‘˙ ˚
$num‘‘¸ ˝
,‘‘˝ ˛
$str‘‘ˇ ê
,‘‘ê ë
$str‘‘í °
,‘‘° ¢
null‘‘£ ß
,‘‘ß ®
null‘‘© ≠
}‘‘Æ Ø
,‘‘Ø ∞
{
’’ 
new
’’ 
Guid
’’ 
(
’’ 
$str
’’ E
)
’’E F
,
’’F G
$str’’H ®
,’’® ©
$str’’™ ÿ
,’’ÿ Ÿ
$str’’⁄ ‰
,’’‰ Â
null’’Ê Í
,’’Í Î
null’’Ï 
,’’ Ò
$str’’Ú £
,’’£ §
$str’’• Æ
,’’Æ Ø
$str’’∞  
,’’  À
$str’’Ã Û
,’’Û Ù
$str’’ı ˇ
,’’ˇ Ä
$str’’Å ù
,’’ù û
$str’’ü ¨
,’’¨ ≠
$num’’Æ Ø
,’’Ø ∞
$str’’± ∆
,’’∆ «
$str’’» ÿ
,’’ÿ Ÿ
null’’⁄ ﬁ
,’’ﬁ ﬂ
null’’‡ ‰
}’’Â Ê
,’’Ê Á
{
÷÷ 
new
÷÷ 
Guid
÷÷ 
(
÷÷ 
$str
÷÷ E
)
÷÷E F
,
÷÷F G
$str÷÷H û
,÷÷û ü
$str÷÷† ≈
,÷÷≈ ∆
$str÷÷« œ
,÷÷œ –
null÷÷— ’
,÷÷’ ÷
null÷÷◊ €
,÷÷€ ‹
$str÷÷› é
,÷÷é è
$str÷÷ê ô
,÷÷ô ö
$str÷÷õ µ
,÷÷µ ∂
$str÷÷∑ œ
,÷÷œ –
$str÷÷— €
,÷÷€ ‹
$str÷÷› ˘
,÷÷˘ ˙
$str÷÷˚ à
,÷÷à â
$num÷÷ä ã
,÷÷ã å
$str÷÷ç ¢
,÷÷¢ £
$str÷÷§ µ
,÷÷µ ∂
null÷÷∑ ª
,÷÷ª º
null÷÷Ω ¡
}÷÷¬ √
,÷÷√ ƒ
{
◊◊ 
new
◊◊ 
Guid
◊◊ 
(
◊◊ 
$str
◊◊ E
)
◊◊E F
,
◊◊F G
$str◊◊H ë
,◊◊ë í
$str◊◊ì Õ
,◊◊Õ Œ
$str◊◊œ ·
,◊◊· ‚
null◊◊„ Á
,◊◊Á Ë
null◊◊È Ì
,◊◊Ì Ó
$str◊◊Ô †
,◊◊† °
$str◊◊¢ ´
,◊◊´ ¨
$str◊◊≠ ∆
,◊◊∆ «
$str◊◊» –
,◊◊– —
$str◊◊“ ‹
,◊◊‹ ›
$str◊◊ﬁ ˙
,◊◊˙ ˚
$str◊◊¸ â
,◊◊â ä
$num◊◊ã å
,◊◊å ç
$str◊◊é π
,◊◊π ∫
$str◊◊ª “
,◊◊“ ”
null◊◊‘ ÿ
,◊◊ÿ Ÿ
null◊◊⁄ ﬁ
}◊◊ﬂ ‡
,◊◊‡ ·
{
ÿÿ 
new
ÿÿ 
Guid
ÿÿ 
(
ÿÿ 
$str
ÿÿ E
)
ÿÿE F
,
ÿÿF G
$str
ÿÿH s
,
ÿÿs t
$strÿÿu ô
,ÿÿô ö
$strÿÿõ •
,ÿÿ• ¶
nullÿÿß ´
,ÿÿ´ ¨
nullÿÿ≠ ±
,ÿÿ± ≤
$strÿÿ≥ ˘
,ÿÿ˘ ˙
$strÿÿ˚ Ñ
,ÿÿÑ Ö
$strÿÿÜ ü
,ÿÿü †
$strÿÿ° Œ
,ÿÿŒ œ
$strÿÿ– ‹
,ÿÿ‹ ›
$strÿÿﬁ ˙
,ÿÿ˙ ˚
$strÿÿ¸ â
,ÿÿâ ä
$numÿÿã å
,ÿÿå ç
$strÿÿé ª
,ÿÿª º
$strÿÿΩ ›
,ÿÿ› ﬁ
nullÿÿﬂ „
,ÿÿ„ ‰
nullÿÿÂ È
}ÿÿÍ Î
,ÿÿÎ Ï
{
ŸŸ 
new
ŸŸ 
Guid
ŸŸ 
(
ŸŸ 
$str
ŸŸ E
)
ŸŸE F
,
ŸŸF G
$strŸŸH Ã
,ŸŸÃ Õ
$strŸŸŒ à
,ŸŸà â
$strŸŸä ö
,ŸŸö õ
nullŸŸú †
,ŸŸ† °
nullŸŸ¢ ¶
,ŸŸ¶ ß
$strŸŸ® Ÿ
,ŸŸŸ ⁄
$strŸŸ€ ‰
,ŸŸ‰ Â
$strŸŸÊ ˇ
,ŸŸˇ Ä
$strŸŸÅ â
,ŸŸâ ä
$strŸŸã ï
,ŸŸï ñ
$strŸŸó ≥
,ŸŸ≥ ¥
$strŸŸµ ¬
,ŸŸ¬ √
$numŸŸƒ ≈
,ŸŸ≈ ∆
$strŸŸ« ﬂ
,ŸŸﬂ ‡
$strŸŸ· ˆ
,ŸŸˆ ˜
nullŸŸ¯ ¸
,ŸŸ¸ ˝
nullŸŸ˛ Ç
}ŸŸÉ Ñ
,ŸŸÑ Ö
{
⁄⁄ 
new
⁄⁄ 
Guid
⁄⁄ 
(
⁄⁄ 
$str
⁄⁄ E
)
⁄⁄E F
,
⁄⁄F G
$str⁄⁄H ∞
,⁄⁄∞ ±
$str⁄⁄≤ Ï
,⁄⁄Ï Ì
$str⁄⁄Ó ˜
,⁄⁄˜ ¯
null⁄⁄˘ ˝
,⁄⁄˝ ˛
null⁄⁄ˇ É
,⁄⁄É Ñ
$str⁄⁄Ö ∂
,⁄⁄∂ ∑
$str⁄⁄∏ ¡
,⁄⁄¡ ¬
$str⁄⁄√ ‹
,⁄⁄‹ ›
$str⁄⁄ﬁ ˘
,⁄⁄˘ ˙
$str⁄⁄˚ Ö
,⁄⁄Ö Ü
$str⁄⁄á £
,⁄⁄£ §
$str⁄⁄• ≤
,⁄⁄≤ ≥
$num⁄⁄¥ µ
,⁄⁄µ ∂
$str⁄⁄∑ À
,⁄⁄À Ã
$str⁄⁄Õ €
,⁄⁄€ ‹
null⁄⁄› ·
,⁄⁄· ‚
null⁄⁄„ Á
}⁄⁄Ë È
,⁄⁄È Í
{
€€ 
new
€€ 
Guid
€€ 
(
€€ 
$str
€€ E
)
€€E F
,
€€F G
$str€€H æ
,€€æ ø
$str€€¿ ù
,€€ù û
$str€€ü ©
,€€© ™
null€€´ Ø
,€€Ø ∞
null€€± µ
,€€µ ∂
$str€€∑ ˚
,€€˚ ¸
$str€€˝ Ü
,€€Ü á
$str€€à ≠
,€€≠ Æ
$str€€Ø ’
,€€’ ÷
$str€€◊ ·
,€€· ‚
$str€€„ ˇ
,€€ˇ Ä
$str€€Å é
,€€é è
$num€€ê ë
,€€ë í
$str€€ì ®
,€€® ©
$str€€™ ø
,€€ø ¿
null€€¡ ≈
,€€≈ ∆
null€€« À
}€€Ã Õ
,€€Õ Œ
{
‹‹ 
new
‹‹ 
Guid
‹‹ 
(
‹‹ 
$str
‹‹ E
)
‹‹E F
,
‹‹F G
$str‹‹H è
,‹‹è ê
$str‹‹ë À
,‹‹À Ã
$str‹‹Õ ‰
,‹‹‰ Â
null‹‹Ê Í
,‹‹Í Î
null‹‹Ï 
,‹‹ Ò
$str‹‹Ú £
,‹‹£ §
$str‹‹• Æ
,‹‹Æ Ø
$str‹‹∞ …
,‹‹…  
$str‹‹À Ò
,‹‹Ò Ú
$str‹‹Û ¸
,‹‹¸ ˝
$str‹‹˛ ö
,‹‹ö õ
$str‹‹ú ©
,‹‹© ™
$num‹‹´ ¨
,‹‹¨ ≠
$str‹‹Æ Œ
,‹‹Œ œ
$str‹‹– Ë
,‹‹Ë È
null‹‹Í Ó
,‹‹Ó Ô
null‹‹ Ù
}‹‹ı ˆ
,‹‹ˆ ˜
{
›› 
new
›› 
Guid
›› 
(
›› 
$str
›› E
)
››E F
,
››F G
$str››H è
,››è ê
$str››ë À
,››À Ã
$str››Õ ‰
,››‰ Â
null››Ê Í
,››Í Î
null››Ï 
,›› Ò
$str››Ú £
,››£ §
$str››• Æ
,››Æ Ø
$str››∞ …
,››…  
$str››À Ì
,››Ì Ó
$str››Ô ˚
,››˚ ¸
$str››˝ ô
,››ô ö
$str››õ ®
,››® ©
$num››™ ´
,››´ ¨
$str››≠ Õ
,››Õ Œ
$str››œ Ë
,››Ë È
null››Í Ó
,››Ó Ô
null›› Ù
}››ı ˆ
,››ˆ ˜
{
ﬁﬁ 
new
ﬁﬁ 
Guid
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ E
)
ﬁﬁE F
,
ﬁﬁF G
$strﬁﬁH ë
,ﬁﬁë í
$strﬁﬁì Õ
,ﬁﬁÕ Œ
$strﬁﬁœ ·
,ﬁﬁ· ‚
nullﬁﬁ„ Á
,ﬁﬁÁ Ë
nullﬁﬁÈ Ì
,ﬁﬁÌ Ó
$strﬁﬁÔ †
,ﬁﬁ† °
$strﬁﬁ¢ ´
,ﬁﬁ´ ¨
$strﬁﬁ≠ ∆
,ﬁﬁ∆ «
$strﬁﬁ» Ê
,ﬁﬁÊ Á
$strﬁﬁË Ô
,ﬁﬁÔ 
$strﬁﬁÒ ç
,ﬁﬁç é
$strﬁﬁè ú
,ﬁﬁú ù
$numﬁﬁû ü
,ﬁﬁü †
$strﬁﬁ° ø
,ﬁﬁø ¿
$strﬁﬁ¡ Â
,ﬁﬁÂ Ê
nullﬁﬁÁ Î
,ﬁﬁÎ Ï
nullﬁﬁÌ Ò
}ﬁﬁÚ Û
,ﬁﬁÛ Ù
{
ﬂﬂ 
new
ﬂﬂ 
Guid
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ E
)
ﬂﬂE F
,
ﬂﬂF G
$strﬂﬂH è
,ﬂﬂè ê
$strﬂﬂë ∫
,ﬂﬂ∫ ª
$strﬂﬂº  
,ﬂﬂ  À
nullﬂﬂÃ –
,ﬂﬂ– —
nullﬂﬂ“ ÷
,ﬂﬂ÷ ◊
$strﬂﬂÿ â
,ﬂﬂâ ä
$strﬂﬂã î
,ﬂﬂî ï
$strﬂﬂñ ¢
,ﬂﬂ¢ £
$strﬂﬂ§ ¥
,ﬂﬂ¥ µ
$strﬂﬂ∂ ¿
,ﬂﬂ¿ ¡
$strﬂﬂ¬ ÿ
,ﬂﬂÿ Ÿ
$strﬂﬂ⁄ Ê
,ﬂﬂÊ Á
$numﬂﬂË È
,ﬂﬂÈ Í
$strﬂﬂÎ ¸
,ﬂﬂ¸ ˝
$strﬂﬂ˛ ì
,ﬂﬂì î
nullﬂﬂï ô
,ﬂﬂô ö
nullﬂﬂõ ü
}ﬂﬂ† °
,ﬂﬂ° ¢
{
‡‡ 
new
‡‡ 
Guid
‡‡ 
(
‡‡ 
$str
‡‡ E
)
‡‡E F
,
‡‡F G
$str‡‡H ”
,‡‡” ‘
$str‡‡’ è
,‡‡è ê
$str‡‡ë ô
,‡‡ô ö
null‡‡õ ü
,‡‡ü †
null‡‡° •
,‡‡• ¶
$str‡‡ß ÿ
,‡‡ÿ Ÿ
$str‡‡⁄ „
,‡‡„ ‰
$str‡‡Â °
,‡‡° ¢
$str‡‡£ ∑
,‡‡∑ ∏
$str‡‡π √
,‡‡√ ƒ
$str‡‡≈ ·
,‡‡· ‚
$str‡‡„ 
,‡‡ Ò
$num‡‡Ú Û
,‡‡Û Ù
$str‡‡ı ñ
,‡‡ñ ó
$str‡‡ò π
,‡‡π ∫
null‡‡ª ø
,‡‡ø ¿
null‡‡¡ ≈
}‡‡∆ «
}
·· 
)
·· 
;
·· 
migrationBuilder
„„ 
.
„„ 
CreateIndex
„„ (
(
„„( )
name
‰‰ 
:
‰‰ 
$str
‰‰ .
,
‰‰. /
table
ÂÂ 
:
ÂÂ 
$str
ÂÂ %
,
ÂÂ% &
column
ÊÊ 
:
ÊÊ 
$str
ÊÊ  
)
ÊÊ  !
;
ÊÊ! "
}
ÁÁ 	
}
ËË 
}ÈÈ Üß
ïD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240724031629_AllowNullForAttributeTableCourseVersion.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class 3
'AllowNullForAttributeTableCourseVersion @
:A B
	MigrationC L
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str ?
,? @
table 
: 
$str '
)' (
;( )
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str :
,: ;
table 
: 
$str '
)' (
;( )
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str 8
,8 9
table 
: 
$str '
)' (
;( )
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str :
,: ;
table 
: 
$str '
)' (
;( )
migrationBuilder   
.   
DropForeignKey   +
(  + ,
name!! 
:!! 
$str!! <
,!!< =
table"" 
:"" 
$str"" '
)""' (
;""( )
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 

DeleteDataQQ '
(QQ' (
tableRR 
:RR 
$strRR '
,RR' (
	keyColumnSS 
:SS 
$strSS 
,SS  
keyValueTT 
:TT 
newTT 
GuidTT "
(TT" #
$strTT# I
)TTI J
)TTJ K
;TTK L
migrationBuilderVV 
.VV 

DeleteDataVV '
(VV' (
tableWW 
:WW 
$strWW '
,WW' (
	keyColumnXX 
:XX 
$strXX 
,XX  
keyValueYY 
:YY 
newYY 
GuidYY "
(YY" #
$strYY# I
)YYI J
)YYJ K
;YYK L
migrationBuilder[[ 
.[[ 

DeleteData[[ '
([[' (
table\\ 
:\\ 
$str\\ '
,\\' (
	keyColumn]] 
:]] 
$str]] 
,]]  
keyValue^^ 
:^^ 
new^^ 
Guid^^ "
(^^" #
$str^^# I
)^^I J
)^^J K
;^^K L
migrationBuilder`` 
.`` 

DeleteData`` '
(``' (
tableaa 
:aa 
$straa '
,aa' (
	keyColumnbb 
:bb 
$strbb 
,bb  
keyValuecc 
:cc 
newcc 
Guidcc "
(cc" #
$strcc# I
)ccI J
)ccJ K
;ccK L
migrationBuilderee 
.ee 
AlterColumnee (
<ee( )
Guidee) -
>ee- .
(ee. /
nameff 
:ff 
$strff !
,ff! "
tablegg 
:gg 
$strgg '
,gg' (
typehh 
:hh 
$strhh (
,hh( )
nullableii 
:ii 
falseii 
,ii  
defaultValuejj 
:jj 
newjj !
Guidjj" &
(jj& '
$strjj' M
)jjM N
,jjN O

oldClrTypekk 
:kk 
typeofkk "
(kk" #
Guidkk# '
)kk' (
,kk( )
oldTypell 
:ll 
$strll +
,ll+ ,
oldNullablemm 
:mm 
truemm !
)mm! "
;mm" #
migrationBuilderoo 
.oo 
AlterColumnoo (
<oo( )
Guidoo) -
>oo- .
(oo. /
namepp 
:pp 
$strpp  
,pp  !
tableqq 
:qq 
$strqq '
,qq' (
typerr 
:rr 
$strrr (
,rr( )
nullabless 
:ss 
falsess 
,ss  
defaultValuett 
:tt 
newtt !
Guidtt" &
(tt& '
$strtt' M
)ttM N
,ttN O

oldClrTypeuu 
:uu 
typeofuu "
(uu" #
Guiduu# '
)uu' (
,uu( )
oldTypevv 
:vv 
$strvv +
,vv+ ,
oldNullableww 
:ww 
trueww !
)ww! "
;ww" #
migrationBuilderyy 
.yy 
AlterColumnyy (
<yy( )
Guidyy) -
>yy- .
(yy. /
namezz 
:zz 
$strzz 
,zz  
table{{ 
:{{ 
$str{{ '
,{{' (
type|| 
:|| 
$str|| (
,||( )
nullable}} 
:}} 
false}} 
,}}  
defaultValue~~ 
:~~ 
new~~ !
Guid~~" &
(~~& '
$str~~' M
)~~M N
,~~N O

oldClrType 
: 
typeof "
(" #
Guid# '
)' (
,( )
oldType
ÄÄ 
:
ÄÄ 
$str
ÄÄ +
,
ÄÄ+ ,
oldNullable
ÅÅ 
:
ÅÅ 
true
ÅÅ !
)
ÅÅ! "
;
ÅÅ" #
migrationBuilder
ÉÉ 
.
ÉÉ 
AlterColumn
ÉÉ (
<
ÉÉ( )
Guid
ÉÉ) -
>
ÉÉ- .
(
ÉÉ. /
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ  
,
ÑÑ  !
table
ÖÖ 
:
ÖÖ 
$str
ÖÖ '
,
ÖÖ' (
type
ÜÜ 
:
ÜÜ 
$str
ÜÜ (
,
ÜÜ( )
nullable
áá 
:
áá 
false
áá 
,
áá  
defaultValue
àà 
:
àà 
new
àà !
Guid
àà" &
(
àà& '
$str
àà' M
)
ààM N
,
ààN O

oldClrType
ââ 
:
ââ 
typeof
ââ "
(
ââ" #
Guid
ââ# '
)
ââ' (
,
ââ( )
oldType
ää 
:
ää 
$str
ää +
,
ää+ ,
oldNullable
ãã 
:
ãã 
true
ãã !
)
ãã! "
;
ãã" #
migrationBuilder
çç 
.
çç 
AlterColumn
çç (
<
çç( )
Guid
çç) -
>
çç- .
(
çç. /
name
éé 
:
éé 
$str
éé "
,
éé" #
table
èè 
:
èè 
$str
èè '
,
èè' (
type
êê 
:
êê 
$str
êê (
,
êê( )
nullable
ëë 
:
ëë 
false
ëë 
,
ëë  
defaultValue
íí 
:
íí 
new
íí !
Guid
íí" &
(
íí& '
$str
íí' M
)
ííM N
,
ííN O

oldClrType
ìì 
:
ìì 
typeof
ìì "
(
ìì" #
Guid
ìì# '
)
ìì' (
,
ìì( )
oldType
îî 
:
îî 
$str
îî +
,
îî+ ,
oldNullable
ïï 
:
ïï 
true
ïï !
)
ïï! "
;
ïï" #
migrationBuilder
óó 
.
óó 

UpdateData
óó '
(
óó' (
table
òò 
:
òò 
$str
òò $
,
òò$ %
	keyColumn
ôô 
:
ôô 
$str
ôô 
,
ôô  
keyValue
öö 
:
öö 
$str
öö +
,
öö+ ,
columns
õõ 
:
õõ 
new
õõ 
[
õõ 
]
õõ 
{
õõ  
$str
õõ! 3
,
õõ3 4
$str
õõ5 A
,
õõA B
$str
õõC Q
,
õõQ R
$str
õõS b
}
õõc d
,
õõd e
values
úú 
:
úú 
new
úú 
object
úú "
[
úú" #
]
úú# $
{
úú% &
$str
úú' M
,
úúM N
new
úúO R
DateTime
úúS [
(
úú[ \
$num
úú\ `
,
úú` a
$num
úúb c
,
úúc d
$num
úúe g
,
úúg h
$num
úúi j
,
úúj k
$num
úúl n
,
úún o
$num
úúp r
,
úúr s
$num
úút w
,
úúw x
DateTimeKindúúy Ö
.úúÖ Ü
UtcúúÜ â
)úúâ ä
.úúä ã
AddTicksúúã ì
(úúì î
$numúúî ò
)úúò ô
,úúô ö
$strúúõ Ò
,úúÒ Ú
$strúúÛ ô
}úúö õ
)úúõ ú
;úúú ù
migrationBuilder
ûû 
.
ûû 

InsertData
ûû '
(
ûû' (
table
üü 
:
üü 
$str
üü '
,
üü' (
columns
†† 
:
†† 
new
†† 
[
†† 
]
†† 
{
††  
$str
††! %
,
††% &
$str
††' 4
,
††4 5
$str
††6 D
,
††D E
$str
††F P
,
††P Q
$str
††R ]
,
††] ^
$str
††_ l
,
††l m
$str
††n }
,
††} ~
$str†† â
,††â ä
$str††ã †
,††† °
$str††¢ ±
,††± ≤
$str††≥ ¬
,††¬ √
$str††ƒ —
,††— “
$str††” ﬂ
,††ﬂ ‡
$str††· È
,††È Í
$str††Î ¯
,††¯ ˘
$str††˙ à
,††à â
$str††ä ï
,††ï ñ
$str††ó §
}††• ¶
,††¶ ß
values
°° 
:
°° 
new
°° 
object
°° "
[
°°" #
,
°°# $
]
°°$ %
{
¢¢ 
{
££ 
new
££ 
Guid
££ 
(
££ 
$str
££ E
)
££E F
,
££F G
$str££H Ñ
,££Ñ Ö
$str££Ü ¿
,££¿ ¡
$str££¬ “
,££“ ”
null££‘ ÿ
,££ÿ Ÿ
null££⁄ ﬁ
,££ﬁ ﬂ
$str££‡ ë
,££ë í
$str££ì ú
,££ú ù
$str££û ∑
,££∑ ∏
$str££π ¡
,££¡ ¬
$str££√ Õ
,££Õ Œ
$str££œ Î
,££Î Ï
$str££Ì ˙
,££˙ ˚
$num££¸ ˝
,££˝ ˛
$str££ˇ ê
,££ê ë
$str££í °
,££° ¢
null£££ ß
,££ß ®
null££© ≠
}££Æ Ø
,££Ø ∞
{
§§ 
new
§§ 
Guid
§§ 
(
§§ 
$str
§§ E
)
§§E F
,
§§F G
$str§§H ®
,§§® ©
$str§§™ ÿ
,§§ÿ Ÿ
$str§§⁄ ‰
,§§‰ Â
null§§Ê Í
,§§Í Î
null§§Ï 
,§§ Ò
$str§§Ú £
,§§£ §
$str§§• Æ
,§§Æ Ø
$str§§∞  
,§§  À
$str§§Ã Û
,§§Û Ù
$str§§ı ˇ
,§§ˇ Ä
$str§§Å ù
,§§ù û
$str§§ü ¨
,§§¨ ≠
$num§§Æ Ø
,§§Ø ∞
$str§§± ∆
,§§∆ «
$str§§» ÿ
,§§ÿ Ÿ
null§§⁄ ﬁ
,§§ﬁ ﬂ
null§§‡ ‰
}§§Â Ê
,§§Ê Á
{
•• 
new
•• 
Guid
•• 
(
•• 
$str
•• E
)
••E F
,
••F G
$str••H û
,••û ü
$str••† ≈
,••≈ ∆
$str••« œ
,••œ –
null••— ’
,••’ ÷
null••◊ €
,••€ ‹
$str••› é
,••é è
$str••ê ô
,••ô ö
$str••õ µ
,••µ ∂
$str••∑ œ
,••œ –
$str••— €
,••€ ‹
$str••› ˘
,••˘ ˙
$str••˚ à
,••à â
$num••ä ã
,••ã å
$str••ç ¢
,••¢ £
$str••§ µ
,••µ ∂
null••∑ ª
,••ª º
null••Ω ¡
}••¬ √
,••√ ƒ
{
¶¶ 
new
¶¶ 
Guid
¶¶ 
(
¶¶ 
$str
¶¶ E
)
¶¶E F
,
¶¶F G
$str¶¶H ë
,¶¶ë í
$str¶¶ì Õ
,¶¶Õ Œ
$str¶¶œ ·
,¶¶· ‚
null¶¶„ Á
,¶¶Á Ë
null¶¶È Ì
,¶¶Ì Ó
$str¶¶Ô †
,¶¶† °
$str¶¶¢ ´
,¶¶´ ¨
$str¶¶≠ ∆
,¶¶∆ «
$str¶¶» –
,¶¶– —
$str¶¶“ ‹
,¶¶‹ ›
$str¶¶ﬁ ˙
,¶¶˙ ˚
$str¶¶¸ â
,¶¶â ä
$num¶¶ã å
,¶¶å ç
$str¶¶é π
,¶¶π ∫
$str¶¶ª “
,¶¶“ ”
null¶¶‘ ÿ
,¶¶ÿ Ÿ
null¶¶⁄ ﬁ
}¶¶ﬂ ‡
,¶¶‡ ·
{
ßß 
new
ßß 
Guid
ßß 
(
ßß 
$str
ßß E
)
ßßE F
,
ßßF G
$str
ßßH s
,
ßßs t
$strßßu ô
,ßßô ö
$strßßõ •
,ßß• ¶
nullßßß ´
,ßß´ ¨
nullßß≠ ±
,ßß± ≤
$strßß≥ ˘
,ßß˘ ˙
$strßß˚ Ñ
,ßßÑ Ö
$strßßÜ ü
,ßßü †
$strßß° Œ
,ßßŒ œ
$strßß– ‹
,ßß‹ ›
$strßßﬁ ˙
,ßß˙ ˚
$strßß¸ â
,ßßâ ä
$numßßã å
,ßßå ç
$strßßé ª
,ßßª º
$strßßΩ ›
,ßß› ﬁ
nullßßﬂ „
,ßß„ ‰
nullßßÂ È
}ßßÍ Î
,ßßÎ Ï
{
®® 
new
®® 
Guid
®® 
(
®® 
$str
®® E
)
®®E F
,
®®F G
$str®®H Ã
,®®Ã Õ
$str®®Œ à
,®®à â
$str®®ä ö
,®®ö õ
null®®ú †
,®®† °
null®®¢ ¶
,®®¶ ß
$str®®® Ÿ
,®®Ÿ ⁄
$str®®€ ‰
,®®‰ Â
$str®®Ê ˇ
,®®ˇ Ä
$str®®Å â
,®®â ä
$str®®ã ï
,®®ï ñ
$str®®ó ≥
,®®≥ ¥
$str®®µ ¬
,®®¬ √
$num®®ƒ ≈
,®®≈ ∆
$str®®« ﬂ
,®®ﬂ ‡
$str®®· ˆ
,®®ˆ ˜
null®®¯ ¸
,®®¸ ˝
null®®˛ Ç
}®®É Ñ
,®®Ñ Ö
{
©© 
new
©© 
Guid
©© 
(
©© 
$str
©© E
)
©©E F
,
©©F G
$str©©H ∞
,©©∞ ±
$str©©≤ Ï
,©©Ï Ì
$str©©Ó ˜
,©©˜ ¯
null©©˘ ˝
,©©˝ ˛
null©©ˇ É
,©©É Ñ
$str©©Ö ∂
,©©∂ ∑
$str©©∏ ¡
,©©¡ ¬
$str©©√ ‹
,©©‹ ›
$str©©ﬁ ˘
,©©˘ ˙
$str©©˚ Ö
,©©Ö Ü
$str©©á £
,©©£ §
$str©©• ≤
,©©≤ ≥
$num©©¥ µ
,©©µ ∂
$str©©∑ À
,©©À Ã
$str©©Õ €
,©©€ ‹
null©©› ·
,©©· ‚
null©©„ Á
}©©Ë È
,©©È Í
{
™™ 
new
™™ 
Guid
™™ 
(
™™ 
$str
™™ E
)
™™E F
,
™™F G
$str™™H æ
,™™æ ø
$str™™¿ ù
,™™ù û
$str™™ü ©
,™™© ™
null™™´ Ø
,™™Ø ∞
null™™± µ
,™™µ ∂
$str™™∑ ˚
,™™˚ ¸
$str™™˝ Ü
,™™Ü á
$str™™à ≠
,™™≠ Æ
$str™™Ø ’
,™™’ ÷
$str™™◊ ·
,™™· ‚
$str™™„ ˇ
,™™ˇ Ä
$str™™Å é
,™™é è
$num™™ê ë
,™™ë í
$str™™ì ®
,™™® ©
$str™™™ ø
,™™ø ¿
null™™¡ ≈
,™™≈ ∆
null™™« À
}™™Ã Õ
,™™Õ Œ
{
´´ 
new
´´ 
Guid
´´ 
(
´´ 
$str
´´ E
)
´´E F
,
´´F G
$str´´H è
,´´è ê
$str´´ë À
,´´À Ã
$str´´Õ ‰
,´´‰ Â
null´´Ê Í
,´´Í Î
null´´Ï 
,´´ Ò
$str´´Ú £
,´´£ §
$str´´• Æ
,´´Æ Ø
$str´´∞ …
,´´…  
$str´´À Ò
,´´Ò Ú
$str´´Û ¸
,´´¸ ˝
$str´´˛ ö
,´´ö õ
$str´´ú ©
,´´© ™
$num´´´ ¨
,´´¨ ≠
$str´´Æ Œ
,´´Œ œ
$str´´– Ë
,´´Ë È
null´´Í Ó
,´´Ó Ô
null´´ Ù
}´´ı ˆ
,´´ˆ ˜
{
¨¨ 
new
¨¨ 
Guid
¨¨ 
(
¨¨ 
$str
¨¨ E
)
¨¨E F
,
¨¨F G
$str¨¨H è
,¨¨è ê
$str¨¨ë À
,¨¨À Ã
$str¨¨Õ ‰
,¨¨‰ Â
null¨¨Ê Í
,¨¨Í Î
null¨¨Ï 
,¨¨ Ò
$str¨¨Ú £
,¨¨£ §
$str¨¨• Æ
,¨¨Æ Ø
$str¨¨∞ …
,¨¨…  
$str¨¨À Ì
,¨¨Ì Ó
$str¨¨Ô ˚
,¨¨˚ ¸
$str¨¨˝ ô
,¨¨ô ö
$str¨¨õ ®
,¨¨® ©
$num¨¨™ ´
,¨¨´ ¨
$str¨¨≠ Õ
,¨¨Õ Œ
$str¨¨œ Ë
,¨¨Ë È
null¨¨Í Ó
,¨¨Ó Ô
null¨¨ Ù
}¨¨ı ˆ
,¨¨ˆ ˜
{
≠≠ 
new
≠≠ 
Guid
≠≠ 
(
≠≠ 
$str
≠≠ E
)
≠≠E F
,
≠≠F G
$str≠≠H ë
,≠≠ë í
$str≠≠ì Õ
,≠≠Õ Œ
$str≠≠œ ·
,≠≠· ‚
null≠≠„ Á
,≠≠Á Ë
null≠≠È Ì
,≠≠Ì Ó
$str≠≠Ô †
,≠≠† °
$str≠≠¢ ´
,≠≠´ ¨
$str≠≠≠ ∆
,≠≠∆ «
$str≠≠» Ê
,≠≠Ê Á
$str≠≠Ë Ô
,≠≠Ô 
$str≠≠Ò ç
,≠≠ç é
$str≠≠è ú
,≠≠ú ù
$num≠≠û ü
,≠≠ü †
$str≠≠° ø
,≠≠ø ¿
$str≠≠¡ Â
,≠≠Â Ê
null≠≠Á Î
,≠≠Î Ï
null≠≠Ì Ò
}≠≠Ú Û
,≠≠Û Ù
{
ÆÆ 
new
ÆÆ 
Guid
ÆÆ 
(
ÆÆ 
$str
ÆÆ E
)
ÆÆE F
,
ÆÆF G
$strÆÆH è
,ÆÆè ê
$strÆÆë ∫
,ÆÆ∫ ª
$strÆÆº  
,ÆÆ  À
nullÆÆÃ –
,ÆÆ– —
nullÆÆ“ ÷
,ÆÆ÷ ◊
$strÆÆÿ â
,ÆÆâ ä
$strÆÆã î
,ÆÆî ï
$strÆÆñ ¢
,ÆÆ¢ £
$strÆÆ§ ¥
,ÆÆ¥ µ
$strÆÆ∂ ¿
,ÆÆ¿ ¡
$strÆÆ¬ ÿ
,ÆÆÿ Ÿ
$strÆÆ⁄ Ê
,ÆÆÊ Á
$numÆÆË È
,ÆÆÈ Í
$strÆÆÎ ¸
,ÆÆ¸ ˝
$strÆÆ˛ ì
,ÆÆì î
nullÆÆï ô
,ÆÆô ö
nullÆÆõ ü
}ÆÆ† °
,ÆÆ° ¢
{
ØØ 
new
ØØ 
Guid
ØØ 
(
ØØ 
$str
ØØ E
)
ØØE F
,
ØØF G
$strØØH ”
,ØØ” ‘
$strØØ’ è
,ØØè ê
$strØØë ô
,ØØô ö
nullØØõ ü
,ØØü †
nullØØ° •
,ØØ• ¶
$strØØß ÿ
,ØØÿ Ÿ
$strØØ⁄ „
,ØØ„ ‰
$strØØÂ °
,ØØ° ¢
$strØØ£ ∑
,ØØ∑ ∏
$strØØπ √
,ØØ√ ƒ
$strØØ≈ ·
,ØØ· ‚
$strØØ„ 
,ØØ Ò
$numØØÚ Û
,ØØÛ Ù
$strØØı ñ
,ØØñ ó
$strØØò π
,ØØπ ∫
nullØØª ø
,ØØø ¿
nullØØ¡ ≈
}ØØ∆ «
}
∞∞ 
)
∞∞ 
;
∞∞ 
migrationBuilder
≤≤ 
.
≤≤ 
AddForeignKey
≤≤ *
(
≤≤* +
name
≥≥ 
:
≥≥ 
$str
≥≥ ?
,
≥≥? @
table
¥¥ 
:
¥¥ 
$str
¥¥ '
,
¥¥' (
column
µµ 
:
µµ 
$str
µµ $
,
µµ$ %
principalTable
∂∂ 
:
∂∂ 
$str
∂∂  ,
,
∂∂, -
principalColumn
∑∑ 
:
∑∑  
$str
∑∑! %
,
∑∑% &
onDelete
∏∏ 
:
∏∏ 
ReferentialAction
∏∏ +
.
∏∏+ ,
Cascade
∏∏, 3
)
∏∏3 4
;
∏∏4 5
migrationBuilder
∫∫ 
.
∫∫ 
AddForeignKey
∫∫ *
(
∫∫* +
name
ªª 
:
ªª 
$str
ªª :
,
ªª: ;
table
ºº 
:
ºº 
$str
ºº '
,
ºº' (
column
ΩΩ 
:
ΩΩ 
$str
ΩΩ "
,
ΩΩ" #
principalTable
ææ 
:
ææ 
$str
ææ  )
,
ææ) *
principalColumn
øø 
:
øø  
$str
øø! %
,
øø% &
onDelete
¿¿ 
:
¿¿ 
ReferentialAction
¿¿ +
.
¿¿+ ,
Cascade
¿¿, 3
)
¿¿3 4
;
¿¿4 5
migrationBuilder
¬¬ 
.
¬¬ 
AddForeignKey
¬¬ *
(
¬¬* +
name
√√ 
:
√√ 
$str
√√ 8
,
√√8 9
table
ƒƒ 
:
ƒƒ 
$str
ƒƒ '
,
ƒƒ' (
column
≈≈ 
:
≈≈ 
$str
≈≈ !
,
≈≈! "
principalTable
∆∆ 
:
∆∆ 
$str
∆∆  (
,
∆∆( )
principalColumn
«« 
:
««  
$str
««! %
,
««% &
onDelete
»» 
:
»» 
ReferentialAction
»» +
.
»»+ ,
Cascade
»», 3
)
»»3 4
;
»»4 5
migrationBuilder
   
.
   
AddForeignKey
   *
(
  * +
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ :
,
ÀÀ: ;
table
ÃÃ 
:
ÃÃ 
$str
ÃÃ '
,
ÃÃ' (
column
ÕÕ 
:
ÕÕ 
$str
ÕÕ "
,
ÕÕ" #
principalTable
ŒŒ 
:
ŒŒ 
$str
ŒŒ  )
,
ŒŒ) *
principalColumn
œœ 
:
œœ  
$str
œœ! %
,
œœ% &
onDelete
–– 
:
–– 
ReferentialAction
–– +
.
––+ ,
Cascade
––, 3
)
––3 4
;
––4 5
migrationBuilder
““ 
.
““ 
AddForeignKey
““ *
(
““* +
name
”” 
:
”” 
$str
”” <
,
””< =
table
‘‘ 
:
‘‘ 
$str
‘‘ '
,
‘‘' (
column
’’ 
:
’’ 
$str
’’ #
,
’’# $
principalTable
÷÷ 
:
÷÷ 
$str
÷÷  *
,
÷÷* +
principalColumn
◊◊ 
:
◊◊  
$str
◊◊! ,
,
◊◊, -
onDelete
ÿÿ 
:
ÿÿ 
ReferentialAction
ÿÿ +
.
ÿÿ+ ,
Cascade
ÿÿ, 3
)
ÿÿ3 4
;
ÿÿ4 5
}
ŸŸ 	
	protected
‹‹ 
override
‹‹ 
void
‹‹ 
Down
‹‹  $
(
‹‹$ %
MigrationBuilder
‹‹% 5
migrationBuilder
‹‹6 F
)
‹‹F G
{
›› 	
migrationBuilder
ﬁﬁ 
.
ﬁﬁ 
DropForeignKey
ﬁﬁ +
(
ﬁﬁ+ ,
name
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ ?
,
ﬂﬂ? @
table
‡‡ 
:
‡‡ 
$str
‡‡ '
)
‡‡' (
;
‡‡( )
migrationBuilder
‚‚ 
.
‚‚ 
DropForeignKey
‚‚ +
(
‚‚+ ,
name
„„ 
:
„„ 
$str
„„ :
,
„„: ;
table
‰‰ 
:
‰‰ 
$str
‰‰ '
)
‰‰' (
;
‰‰( )
migrationBuilder
ÊÊ 
.
ÊÊ 
DropForeignKey
ÊÊ +
(
ÊÊ+ ,
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ 8
,
ÁÁ8 9
table
ËË 
:
ËË 
$str
ËË '
)
ËË' (
;
ËË( )
migrationBuilder
ÍÍ 
.
ÍÍ 
DropForeignKey
ÍÍ +
(
ÍÍ+ ,
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ :
,
ÎÎ: ;
table
ÏÏ 
:
ÏÏ 
$str
ÏÏ '
)
ÏÏ' (
;
ÏÏ( )
migrationBuilder
ÓÓ 
.
ÓÓ 
DropForeignKey
ÓÓ +
(
ÓÓ+ ,
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ <
,
ÔÔ< =
table
 
:
 
$str
 '
)
' (
;
( )
migrationBuilder
ÚÚ 
.
ÚÚ 

DeleteData
ÚÚ '
(
ÚÚ' (
table
ÛÛ 
:
ÛÛ 
$str
ÛÛ '
,
ÛÛ' (
	keyColumn
ÙÙ 
:
ÙÙ 
$str
ÙÙ 
,
ÙÙ  
keyValue
ıı 
:
ıı 
new
ıı 
Guid
ıı "
(
ıı" #
$str
ıı# I
)
ııI J
)
ııJ K
;
ııK L
migrationBuilder
˜˜ 
.
˜˜ 

DeleteData
˜˜ '
(
˜˜' (
table
¯¯ 
:
¯¯ 
$str
¯¯ '
,
¯¯' (
	keyColumn
˘˘ 
:
˘˘ 
$str
˘˘ 
,
˘˘  
keyValue
˙˙ 
:
˙˙ 
new
˙˙ 
Guid
˙˙ "
(
˙˙" #
$str
˙˙# I
)
˙˙I J
)
˙˙J K
;
˙˙K L
migrationBuilder
¸¸ 
.
¸¸ 

DeleteData
¸¸ '
(
¸¸' (
table
˝˝ 
:
˝˝ 
$str
˝˝ '
,
˝˝' (
	keyColumn
˛˛ 
:
˛˛ 
$str
˛˛ 
,
˛˛  
keyValue
ˇˇ 
:
ˇˇ 
new
ˇˇ 
Guid
ˇˇ "
(
ˇˇ" #
$str
ˇˇ# I
)
ˇˇI J
)
ˇˇJ K
;
ˇˇK L
migrationBuilder
ÅÅ 
.
ÅÅ 

DeleteData
ÅÅ '
(
ÅÅ' (
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ '
,
ÇÇ' (
	keyColumn
ÉÉ 
:
ÉÉ 
$str
ÉÉ 
,
ÉÉ  
keyValue
ÑÑ 
:
ÑÑ 
new
ÑÑ 
Guid
ÑÑ "
(
ÑÑ" #
$str
ÑÑ# I
)
ÑÑI J
)
ÑÑJ K
;
ÑÑK L
migrationBuilder
ÜÜ 
.
ÜÜ 

DeleteData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá '
,
áá' (
	keyColumn
àà 
:
àà 
$str
àà 
,
àà  
keyValue
ââ 
:
ââ 
new
ââ 
Guid
ââ "
(
ââ" #
$str
ââ# I
)
ââI J
)
ââJ K
;
ââK L
migrationBuilder
ãã 
.
ãã 

DeleteData
ãã '
(
ãã' (
table
åå 
:
åå 
$str
åå '
,
åå' (
	keyColumn
çç 
:
çç 
$str
çç 
,
çç  
keyValue
éé 
:
éé 
new
éé 
Guid
éé "
(
éé" #
$str
éé# I
)
ééI J
)
ééJ K
;
ééK L
migrationBuilder
êê 
.
êê 

DeleteData
êê '
(
êê' (
table
ëë 
:
ëë 
$str
ëë '
,
ëë' (
	keyColumn
íí 
:
íí 
$str
íí 
,
íí  
keyValue
ìì 
:
ìì 
new
ìì 
Guid
ìì "
(
ìì" #
$str
ìì# I
)
ììI J
)
ììJ K
;
ììK L
migrationBuilder
ïï 
.
ïï 

DeleteData
ïï '
(
ïï' (
table
ññ 
:
ññ 
$str
ññ '
,
ññ' (
	keyColumn
óó 
:
óó 
$str
óó 
,
óó  
keyValue
òò 
:
òò 
new
òò 
Guid
òò "
(
òò" #
$str
òò# I
)
òòI J
)
òòJ K
;
òòK L
migrationBuilder
öö 
.
öö 

DeleteData
öö '
(
öö' (
table
õõ 
:
õõ 
$str
õõ '
,
õõ' (
	keyColumn
úú 
:
úú 
$str
úú 
,
úú  
keyValue
ùù 
:
ùù 
new
ùù 
Guid
ùù "
(
ùù" #
$str
ùù# I
)
ùùI J
)
ùùJ K
;
ùùK L
migrationBuilder
üü 
.
üü 

DeleteData
üü '
(
üü' (
table
†† 
:
†† 
$str
†† '
,
††' (
	keyColumn
°° 
:
°° 
$str
°° 
,
°°  
keyValue
¢¢ 
:
¢¢ 
new
¢¢ 
Guid
¢¢ "
(
¢¢" #
$str
¢¢# I
)
¢¢I J
)
¢¢J K
;
¢¢K L
migrationBuilder
§§ 
.
§§ 

DeleteData
§§ '
(
§§' (
table
•• 
:
•• 
$str
•• '
,
••' (
	keyColumn
¶¶ 
:
¶¶ 
$str
¶¶ 
,
¶¶  
keyValue
ßß 
:
ßß 
new
ßß 
Guid
ßß "
(
ßß" #
$str
ßß# I
)
ßßI J
)
ßßJ K
;
ßßK L
migrationBuilder
©© 
.
©© 

DeleteData
©© '
(
©©' (
table
™™ 
:
™™ 
$str
™™ '
,
™™' (
	keyColumn
´´ 
:
´´ 
$str
´´ 
,
´´  
keyValue
¨¨ 
:
¨¨ 
new
¨¨ 
Guid
¨¨ "
(
¨¨" #
$str
¨¨# I
)
¨¨I J
)
¨¨J K
;
¨¨K L
migrationBuilder
ÆÆ 
.
ÆÆ 

DeleteData
ÆÆ '
(
ÆÆ' (
table
ØØ 
:
ØØ 
$str
ØØ '
,
ØØ' (
	keyColumn
∞∞ 
:
∞∞ 
$str
∞∞ 
,
∞∞  
keyValue
±± 
:
±± 
new
±± 
Guid
±± "
(
±±" #
$str
±±# I
)
±±I J
)
±±J K
;
±±K L
migrationBuilder
≥≥ 
.
≥≥ 
AlterColumn
≥≥ (
<
≥≥( )
Guid
≥≥) -
>
≥≥- .
(
≥≥. /
name
¥¥ 
:
¥¥ 
$str
¥¥ !
,
¥¥! "
table
µµ 
:
µµ 
$str
µµ '
,
µµ' (
type
∂∂ 
:
∂∂ 
$str
∂∂ (
,
∂∂( )
nullable
∑∑ 
:
∑∑ 
true
∑∑ 
,
∑∑ 

oldClrType
∏∏ 
:
∏∏ 
typeof
∏∏ "
(
∏∏" #
Guid
∏∏# '
)
∏∏' (
,
∏∏( )
oldType
ππ 
:
ππ 
$str
ππ +
)
ππ+ ,
;
ππ, -
migrationBuilder
ªª 
.
ªª 
AlterColumn
ªª (
<
ªª( )
Guid
ªª) -
>
ªª- .
(
ªª. /
name
ºº 
:
ºº 
$str
ºº  
,
ºº  !
table
ΩΩ 
:
ΩΩ 
$str
ΩΩ '
,
ΩΩ' (
type
ææ 
:
ææ 
$str
ææ (
,
ææ( )
nullable
øø 
:
øø 
true
øø 
,
øø 

oldClrType
¿¿ 
:
¿¿ 
typeof
¿¿ "
(
¿¿" #
Guid
¿¿# '
)
¿¿' (
,
¿¿( )
oldType
¡¡ 
:
¡¡ 
$str
¡¡ +
)
¡¡+ ,
;
¡¡, -
migrationBuilder
√√ 
.
√√ 
AlterColumn
√√ (
<
√√( )
Guid
√√) -
>
√√- .
(
√√. /
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ 
,
ƒƒ  
table
≈≈ 
:
≈≈ 
$str
≈≈ '
,
≈≈' (
type
∆∆ 
:
∆∆ 
$str
∆∆ (
,
∆∆( )
nullable
«« 
:
«« 
true
«« 
,
«« 

oldClrType
»» 
:
»» 
typeof
»» "
(
»»" #
Guid
»»# '
)
»»' (
,
»»( )
oldType
…… 
:
…… 
$str
…… +
)
……+ ,
;
……, -
migrationBuilder
ÀÀ 
.
ÀÀ 
AlterColumn
ÀÀ (
<
ÀÀ( )
Guid
ÀÀ) -
>
ÀÀ- .
(
ÀÀ. /
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ  
,
ÃÃ  !
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ '
,
ÕÕ' (
type
ŒŒ 
:
ŒŒ 
$str
ŒŒ (
,
ŒŒ( )
nullable
œœ 
:
œœ 
true
œœ 
,
œœ 

oldClrType
–– 
:
–– 
typeof
–– "
(
––" #
Guid
––# '
)
––' (
,
––( )
oldType
—— 
:
—— 
$str
—— +
)
——+ ,
;
——, -
migrationBuilder
”” 
.
”” 
AlterColumn
”” (
<
””( )
Guid
””) -
>
””- .
(
””. /
name
‘‘ 
:
‘‘ 
$str
‘‘ "
,
‘‘" #
table
’’ 
:
’’ 
$str
’’ '
,
’’' (
type
÷÷ 
:
÷÷ 
$str
÷÷ (
,
÷÷( )
nullable
◊◊ 
:
◊◊ 
true
◊◊ 
,
◊◊ 

oldClrType
ÿÿ 
:
ÿÿ 
typeof
ÿÿ "
(
ÿÿ" #
Guid
ÿÿ# '
)
ÿÿ' (
,
ÿÿ( )
oldType
ŸŸ 
:
ŸŸ 
$str
ŸŸ +
)
ŸŸ+ ,
;
ŸŸ, -
migrationBuilder
€€ 
.
€€ 

UpdateData
€€ '
(
€€' (
table
‹‹ 
:
‹‹ 
$str
‹‹ $
,
‹‹$ %
	keyColumn
›› 
:
›› 
$str
›› 
,
››  
keyValue
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ +
,
ﬁﬁ+ ,
columns
ﬂﬂ 
:
ﬂﬂ 
new
ﬂﬂ 
[
ﬂﬂ 
]
ﬂﬂ 
{
ﬂﬂ  
$str
ﬂﬂ! 3
,
ﬂﬂ3 4
$str
ﬂﬂ5 A
,
ﬂﬂA B
$str
ﬂﬂC Q
,
ﬂﬂQ R
$str
ﬂﬂS b
}
ﬂﬂc d
,
ﬂﬂd e
values
‡‡ 
:
‡‡ 
new
‡‡ 
object
‡‡ "
[
‡‡" #
]
‡‡# $
{
‡‡% &
$str
‡‡' M
,
‡‡M N
new
‡‡O R
DateTime
‡‡S [
(
‡‡[ \
$num
‡‡\ `
,
‡‡` a
$num
‡‡b c
,
‡‡c d
$num
‡‡e g
,
‡‡g h
$num
‡‡i j
,
‡‡j k
$num
‡‡l m
,
‡‡m n
$num
‡‡o q
,
‡‡q r
$num
‡‡s v
,
‡‡v w
DateTimeKind‡‡x Ñ
.‡‡Ñ Ö
Utc‡‡Ö à
)‡‡à â
.‡‡â ä
AddTicks‡‡ä í
(‡‡í ì
$num‡‡ì ó
)‡‡ó ò
,‡‡ò ô
$str‡‡ö 
,‡‡ Ò
$str‡‡Ú ò
}‡‡ô ö
)‡‡ö õ
;‡‡õ ú
migrationBuilder
‚‚ 
.
‚‚ 

InsertData
‚‚ '
(
‚‚' (
table
„„ 
:
„„ 
$str
„„ '
,
„„' (
columns
‰‰ 
:
‰‰ 
new
‰‰ 
[
‰‰ 
]
‰‰ 
{
‰‰  
$str
‰‰! %
,
‰‰% &
$str
‰‰' 4
,
‰‰4 5
$str
‰‰6 D
,
‰‰D E
$str
‰‰F P
,
‰‰P Q
$str
‰‰R ]
,
‰‰] ^
$str
‰‰_ l
,
‰‰l m
$str
‰‰n }
,
‰‰} ~
$str‰‰ â
,‰‰â ä
$str‰‰ã †
,‰‰† °
$str‰‰¢ ±
,‰‰± ≤
$str‰‰≥ ¬
,‰‰¬ √
$str‰‰ƒ —
,‰‰— “
$str‰‰” ﬂ
,‰‰ﬂ ‡
$str‰‰· È
,‰‰È Í
$str‰‰Î ¯
,‰‰¯ ˘
$str‰‰˙ à
,‰‰à â
$str‰‰ä ï
,‰‰ï ñ
$str‰‰ó §
}‰‰• ¶
,‰‰¶ ß
values
ÂÂ 
:
ÂÂ 
new
ÂÂ 
object
ÂÂ "
[
ÂÂ" #
,
ÂÂ# $
]
ÂÂ$ %
{
ÊÊ 
{
ÁÁ 
new
ÁÁ 
Guid
ÁÁ 
(
ÁÁ 
$str
ÁÁ E
)
ÁÁE F
,
ÁÁF G
$strÁÁH ®
,ÁÁ® ©
$strÁÁ™ ÿ
,ÁÁÿ Ÿ
$strÁÁ⁄ ‰
,ÁÁ‰ Â
nullÁÁÊ Í
,ÁÁÍ Î
nullÁÁÏ 
,ÁÁ Ò
$strÁÁÚ £
,ÁÁ£ §
$strÁÁ• Æ
,ÁÁÆ Ø
$strÁÁ∞  
,ÁÁ  À
$strÁÁÃ Û
,ÁÁÛ Ù
$strÁÁı ˇ
,ÁÁˇ Ä
$strÁÁÅ ù
,ÁÁù û
$strÁÁü ¨
,ÁÁ¨ ≠
$numÁÁÆ Ø
,ÁÁØ ∞
$strÁÁ± ∆
,ÁÁ∆ «
$strÁÁ» ÿ
,ÁÁÿ Ÿ
nullÁÁ⁄ ﬁ
,ÁÁﬁ ﬂ
nullÁÁ‡ ‰
}ÁÁÂ Ê
,ÁÁÊ Á
{
ËË 
new
ËË 
Guid
ËË 
(
ËË 
$str
ËË E
)
ËËE F
,
ËËF G
$strËËH ë
,ËËë í
$strËËì Õ
,ËËÕ Œ
$strËËœ ·
,ËË· ‚
nullËË„ Á
,ËËÁ Ë
nullËËÈ Ì
,ËËÌ Ó
$strËËÔ †
,ËË† °
$strËË¢ ´
,ËË´ ¨
$strËË≠ ∆
,ËË∆ «
$strËË» –
,ËË– —
$strËË“ ‹
,ËË‹ ›
$strËËﬁ ˙
,ËË˙ ˚
$strËË¸ â
,ËËâ ä
$numËËã å
,ËËå ç
$strËËé π
,ËËπ ∫
$strËËª “
,ËË“ ”
nullËË‘ ÿ
,ËËÿ Ÿ
nullËË⁄ ﬁ
}ËËﬂ ‡
,ËË‡ ·
{
ÈÈ 
new
ÈÈ 
Guid
ÈÈ 
(
ÈÈ 
$str
ÈÈ E
)
ÈÈE F
,
ÈÈF G
$strÈÈH Ñ
,ÈÈÑ Ö
$strÈÈÜ ¿
,ÈÈ¿ ¡
$strÈÈ¬ “
,ÈÈ“ ”
nullÈÈ‘ ÿ
,ÈÈÿ Ÿ
nullÈÈ⁄ ﬁ
,ÈÈﬁ ﬂ
$strÈÈ‡ ë
,ÈÈë í
$strÈÈì ú
,ÈÈú ù
$strÈÈû ∑
,ÈÈ∑ ∏
$strÈÈπ ¡
,ÈÈ¡ ¬
$strÈÈ√ Õ
,ÈÈÕ Œ
$strÈÈœ Î
,ÈÈÎ Ï
$strÈÈÌ ˙
,ÈÈ˙ ˚
$numÈÈ¸ ˝
,ÈÈ˝ ˛
$strÈÈˇ ê
,ÈÈê ë
$strÈÈí °
,ÈÈ° ¢
nullÈÈ£ ß
,ÈÈß ®
nullÈÈ© ≠
}ÈÈÆ Ø
,ÈÈØ ∞
{
ÍÍ 
new
ÍÍ 
Guid
ÍÍ 
(
ÍÍ 
$str
ÍÍ E
)
ÍÍE F
,
ÍÍF G
$strÍÍH û
,ÍÍû ü
$strÍÍ† ≈
,ÍÍ≈ ∆
$strÍÍ« œ
,ÍÍœ –
nullÍÍ— ’
,ÍÍ’ ÷
nullÍÍ◊ €
,ÍÍ€ ‹
$strÍÍ› é
,ÍÍé è
$strÍÍê ô
,ÍÍô ö
$strÍÍõ µ
,ÍÍµ ∂
$strÍÍ∑ œ
,ÍÍœ –
$strÍÍ— €
,ÍÍ€ ‹
$strÍÍ› ˘
,ÍÍ˘ ˙
$strÍÍ˚ à
,ÍÍà â
$numÍÍä ã
,ÍÍã å
$strÍÍç ¢
,ÍÍ¢ £
$strÍÍ§ µ
,ÍÍµ ∂
nullÍÍ∑ ª
,ÍÍª º
nullÍÍΩ ¡
}ÍÍ¬ √
,ÍÍ√ ƒ
{
ÎÎ 
new
ÎÎ 
Guid
ÎÎ 
(
ÎÎ 
$str
ÎÎ E
)
ÎÎE F
,
ÎÎF G
$strÎÎH è
,ÎÎè ê
$strÎÎë ∫
,ÎÎ∫ ª
$strÎÎº  
,ÎÎ  À
nullÎÎÃ –
,ÎÎ– —
nullÎÎ“ ÷
,ÎÎ÷ ◊
$strÎÎÿ â
,ÎÎâ ä
$strÎÎã î
,ÎÎî ï
$strÎÎñ ¢
,ÎÎ¢ £
$strÎÎ§ ¥
,ÎÎ¥ µ
$strÎÎ∂ ¿
,ÎÎ¿ ¡
$strÎÎ¬ ÿ
,ÎÎÿ Ÿ
$strÎÎ⁄ Ê
,ÎÎÊ Á
$numÎÎË È
,ÎÎÈ Í
$strÎÎÎ ¸
,ÎÎ¸ ˝
$strÎÎ˛ ì
,ÎÎì î
nullÎÎï ô
,ÎÎô ö
nullÎÎõ ü
}ÎÎ† °
,ÎÎ° ¢
{
ÏÏ 
new
ÏÏ 
Guid
ÏÏ 
(
ÏÏ 
$str
ÏÏ E
)
ÏÏE F
,
ÏÏF G
$strÏÏH ë
,ÏÏë í
$strÏÏì Õ
,ÏÏÕ Œ
$strÏÏœ ·
,ÏÏ· ‚
nullÏÏ„ Á
,ÏÏÁ Ë
nullÏÏÈ Ì
,ÏÏÌ Ó
$strÏÏÔ †
,ÏÏ† °
$strÏÏ¢ ´
,ÏÏ´ ¨
$strÏÏ≠ ∆
,ÏÏ∆ «
$strÏÏ» Ê
,ÏÏÊ Á
$strÏÏË Ô
,ÏÏÔ 
$strÏÏÒ ç
,ÏÏç é
$strÏÏè ú
,ÏÏú ù
$numÏÏû ü
,ÏÏü †
$strÏÏ° ø
,ÏÏø ¿
$strÏÏ¡ Â
,ÏÏÂ Ê
nullÏÏÁ Î
,ÏÏÎ Ï
nullÏÏÌ Ò
}ÏÏÚ Û
,ÏÏÛ Ù
{
ÌÌ 
new
ÌÌ 
Guid
ÌÌ 
(
ÌÌ 
$str
ÌÌ E
)
ÌÌE F
,
ÌÌF G
$strÌÌH Ã
,ÌÌÃ Õ
$strÌÌŒ à
,ÌÌà â
$strÌÌä ö
,ÌÌö õ
nullÌÌú †
,ÌÌ† °
nullÌÌ¢ ¶
,ÌÌ¶ ß
$strÌÌ® Ÿ
,ÌÌŸ ⁄
$strÌÌ€ ‰
,ÌÌ‰ Â
$strÌÌÊ ˇ
,ÌÌˇ Ä
$strÌÌÅ â
,ÌÌâ ä
$strÌÌã ï
,ÌÌï ñ
$strÌÌó ≥
,ÌÌ≥ ¥
$strÌÌµ ¬
,ÌÌ¬ √
$numÌÌƒ ≈
,ÌÌ≈ ∆
$strÌÌ« ﬂ
,ÌÌﬂ ‡
$strÌÌ· ˆ
,ÌÌˆ ˜
nullÌÌ¯ ¸
,ÌÌ¸ ˝
nullÌÌ˛ Ç
}ÌÌÉ Ñ
,ÌÌÑ Ö
{
ÓÓ 
new
ÓÓ 
Guid
ÓÓ 
(
ÓÓ 
$str
ÓÓ E
)
ÓÓE F
,
ÓÓF G
$strÓÓH è
,ÓÓè ê
$strÓÓë À
,ÓÓÀ Ã
$strÓÓÕ ‰
,ÓÓ‰ Â
nullÓÓÊ Í
,ÓÓÍ Î
nullÓÓÏ 
,ÓÓ Ò
$strÓÓÚ £
,ÓÓ£ §
$strÓÓ• Æ
,ÓÓÆ Ø
$strÓÓ∞ …
,ÓÓ…  
$strÓÓÀ Ò
,ÓÓÒ Ú
$strÓÓÛ ¸
,ÓÓ¸ ˝
$strÓÓ˛ ö
,ÓÓö õ
$strÓÓú ©
,ÓÓ© ™
$numÓÓ´ ¨
,ÓÓ¨ ≠
$strÓÓÆ Œ
,ÓÓŒ œ
$strÓÓ– Ë
,ÓÓË È
nullÓÓÍ Ó
,ÓÓÓ Ô
nullÓÓ Ù
}ÓÓı ˆ
,ÓÓˆ ˜
{
ÔÔ 
new
ÔÔ 
Guid
ÔÔ 
(
ÔÔ 
$str
ÔÔ E
)
ÔÔE F
,
ÔÔF G
$strÔÔH è
,ÔÔè ê
$strÔÔë À
,ÔÔÀ Ã
$strÔÔÕ ‰
,ÔÔ‰ Â
nullÔÔÊ Í
,ÔÔÍ Î
nullÔÔÏ 
,ÔÔ Ò
$strÔÔÚ £
,ÔÔ£ §
$strÔÔ• Æ
,ÔÔÆ Ø
$strÔÔ∞ …
,ÔÔ…  
$strÔÔÀ Ì
,ÔÔÌ Ó
$strÔÔÔ ˚
,ÔÔ˚ ¸
$strÔÔ˝ ô
,ÔÔô ö
$strÔÔõ ®
,ÔÔ® ©
$numÔÔ™ ´
,ÔÔ´ ¨
$strÔÔ≠ Õ
,ÔÔÕ Œ
$strÔÔœ Ë
,ÔÔË È
nullÔÔÍ Ó
,ÔÔÓ Ô
nullÔÔ Ù
}ÔÔı ˆ
,ÔÔˆ ˜
{
 
new
 
Guid
 
(
 
$str
 E
)
E F
,
F G
$strH ”
,” ‘
$str’ è
,è ê
$strë ô
,ô ö
nullõ ü
,ü †
null° •
,• ¶
$strß ÿ
,ÿ Ÿ
$str⁄ „
,„ ‰
$strÂ °
,° ¢
$str£ ∑
,∑ ∏
$strπ √
,√ ƒ
$str≈ ·
,· ‚
$str„ 
, Ò
$numÚ Û
,Û Ù
$strı ñ
,ñ ó
$strò π
,π ∫
nullª ø
,ø ¿
null¡ ≈
}∆ «
,« »
{
ÒÒ 
new
ÒÒ 
Guid
ÒÒ 
(
ÒÒ 
$str
ÒÒ E
)
ÒÒE F
,
ÒÒF G
$str
ÒÒH s
,
ÒÒs t
$strÒÒu ô
,ÒÒô ö
$strÒÒõ •
,ÒÒ• ¶
nullÒÒß ´
,ÒÒ´ ¨
nullÒÒ≠ ±
,ÒÒ± ≤
$strÒÒ≥ ˘
,ÒÒ˘ ˙
$strÒÒ˚ Ñ
,ÒÒÑ Ö
$strÒÒÜ ü
,ÒÒü †
$strÒÒ° Œ
,ÒÒŒ œ
$strÒÒ– ‹
,ÒÒ‹ ›
$strÒÒﬁ ˙
,ÒÒ˙ ˚
$strÒÒ¸ â
,ÒÒâ ä
$numÒÒã å
,ÒÒå ç
$strÒÒé ª
,ÒÒª º
$strÒÒΩ ›
,ÒÒ› ﬁ
nullÒÒﬂ „
,ÒÒ„ ‰
nullÒÒÂ È
}ÒÒÍ Î
,ÒÒÎ Ï
{
ÚÚ 
new
ÚÚ 
Guid
ÚÚ 
(
ÚÚ 
$str
ÚÚ E
)
ÚÚE F
,
ÚÚF G
$strÚÚH ∞
,ÚÚ∞ ±
$strÚÚ≤ Ï
,ÚÚÏ Ì
$strÚÚÓ ˜
,ÚÚ˜ ¯
nullÚÚ˘ ˝
,ÚÚ˝ ˛
nullÚÚˇ É
,ÚÚÉ Ñ
$strÚÚÖ ∂
,ÚÚ∂ ∑
$strÚÚ∏ ¡
,ÚÚ¡ ¬
$strÚÚ√ ‹
,ÚÚ‹ ›
$strÚÚﬁ ˘
,ÚÚ˘ ˙
$strÚÚ˚ Ö
,ÚÚÖ Ü
$strÚÚá £
,ÚÚ£ §
$strÚÚ• ≤
,ÚÚ≤ ≥
$numÚÚ¥ µ
,ÚÚµ ∂
$strÚÚ∑ À
,ÚÚÀ Ã
$strÚÚÕ €
,ÚÚ€ ‹
nullÚÚ› ·
,ÚÚ· ‚
nullÚÚ„ Á
}ÚÚË È
,ÚÚÈ Í
{
ÛÛ 
new
ÛÛ 
Guid
ÛÛ 
(
ÛÛ 
$str
ÛÛ E
)
ÛÛE F
,
ÛÛF G
$strÛÛH æ
,ÛÛæ ø
$strÛÛ¿ ù
,ÛÛù û
$strÛÛü ©
,ÛÛ© ™
nullÛÛ´ Ø
,ÛÛØ ∞
nullÛÛ± µ
,ÛÛµ ∂
$strÛÛ∑ ˚
,ÛÛ˚ ¸
$strÛÛ˝ Ü
,ÛÛÜ á
$strÛÛà ≠
,ÛÛ≠ Æ
$strÛÛØ ’
,ÛÛ’ ÷
$strÛÛ◊ ·
,ÛÛ· ‚
$strÛÛ„ ˇ
,ÛÛˇ Ä
$strÛÛÅ é
,ÛÛé è
$numÛÛê ë
,ÛÛë í
$strÛÛì ®
,ÛÛ® ©
$strÛÛ™ ø
,ÛÛø ¿
nullÛÛ¡ ≈
,ÛÛ≈ ∆
nullÛÛ« À
}ÛÛÃ Õ
}
ÙÙ 
)
ÙÙ 
;
ÙÙ 
migrationBuilder
ˆˆ 
.
ˆˆ 
AddForeignKey
ˆˆ *
(
ˆˆ* +
name
˜˜ 
:
˜˜ 
$str
˜˜ ?
,
˜˜? @
table
¯¯ 
:
¯¯ 
$str
¯¯ '
,
¯¯' (
column
˘˘ 
:
˘˘ 
$str
˘˘ $
,
˘˘$ %
principalTable
˙˙ 
:
˙˙ 
$str
˙˙  ,
,
˙˙, -
principalColumn
˚˚ 
:
˚˚  
$str
˚˚! %
)
˚˚% &
;
˚˚& '
migrationBuilder
˝˝ 
.
˝˝ 
AddForeignKey
˝˝ *
(
˝˝* +
name
˛˛ 
:
˛˛ 
$str
˛˛ :
,
˛˛: ;
table
ˇˇ 
:
ˇˇ 
$str
ˇˇ '
,
ˇˇ' (
column
ÄÄ 
:
ÄÄ 
$str
ÄÄ "
,
ÄÄ" #
principalTable
ÅÅ 
:
ÅÅ 
$str
ÅÅ  )
,
ÅÅ) *
principalColumn
ÇÇ 
:
ÇÇ  
$str
ÇÇ! %
)
ÇÇ% &
;
ÇÇ& '
migrationBuilder
ÑÑ 
.
ÑÑ 
AddForeignKey
ÑÑ *
(
ÑÑ* +
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ 8
,
ÖÖ8 9
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ '
,
ÜÜ' (
column
áá 
:
áá 
$str
áá !
,
áá! "
principalTable
àà 
:
àà 
$str
àà  (
,
àà( )
principalColumn
ââ 
:
ââ  
$str
ââ! %
)
ââ% &
;
ââ& '
migrationBuilder
ãã 
.
ãã 
AddForeignKey
ãã *
(
ãã* +
name
åå 
:
åå 
$str
åå :
,
åå: ;
table
çç 
:
çç 
$str
çç '
,
çç' (
column
éé 
:
éé 
$str
éé "
,
éé" #
principalTable
èè 
:
èè 
$str
èè  )
,
èè) *
principalColumn
êê 
:
êê  
$str
êê! %
)
êê% &
;
êê& '
migrationBuilder
íí 
.
íí 
AddForeignKey
íí *
(
íí* +
name
ìì 
:
ìì 
$str
ìì <
,
ìì< =
table
îî 
:
îî 
$str
îî '
,
îî' (
column
ïï 
:
ïï 
$str
ïï #
,
ïï# $
principalTable
ññ 
:
ññ 
$str
ññ  *
,
ññ* +
principalColumn
óó 
:
óó  
$str
óó! ,
)
óó, -
;
óó- .
}
òò 	
}
ôô 
}öö ¯∆
ÉD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240724030139_ModifiedNullAttribute.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class !
ModifiedNullAttribute .
:/ 0
	Migration1 :
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
DropForeignKey +
(+ ,
name 
: 
$str ^
,^ _
table 
: 
$str /
)/ 0
;0 1
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn   
:   
$str   
,    
keyValue!! 
:!! 
new!! 
Guid!! "
(!!" #
$str!!# I
)!!I J
)!!J K
;!!K L
migrationBuilder## 
.## 

DeleteData## '
(##' (
table$$ 
:$$ 
$str$$ '
,$$' (
	keyColumn%% 
:%% 
$str%% 
,%%  
keyValue&& 
:&& 
new&& 
Guid&& "
(&&" #
$str&&# I
)&&I J
)&&J K
;&&K L
migrationBuilder(( 
.(( 

DeleteData(( '
(((' (
table)) 
:)) 
$str)) '
,))' (
	keyColumn** 
:** 
$str** 
,**  
keyValue++ 
:++ 
new++ 
Guid++ "
(++" #
$str++# I
)++I J
)++J K
;++K L
migrationBuilder-- 
.-- 

DeleteData-- '
(--' (
table.. 
:.. 
$str.. '
,..' (
	keyColumn// 
:// 
$str// 
,//  
keyValue00 
:00 
new00 
Guid00 "
(00" #
$str00# I
)00I J
)00J K
;00K L
migrationBuilder22 
.22 

DeleteData22 '
(22' (
table33 
:33 
$str33 '
,33' (
	keyColumn44 
:44 
$str44 
,44  
keyValue55 
:55 
new55 
Guid55 "
(55" #
$str55# I
)55I J
)55J K
;55K L
migrationBuilder77 
.77 

DeleteData77 '
(77' (
table88 
:88 
$str88 '
,88' (
	keyColumn99 
:99 
$str99 
,99  
keyValue:: 
::: 
new:: 
Guid:: "
(::" #
$str::# I
)::I J
)::J K
;::K L
migrationBuilder<< 
.<< 

DeleteData<< '
(<<' (
table== 
:== 
$str== '
,==' (
	keyColumn>> 
:>> 
$str>> 
,>>  
keyValue?? 
:?? 
new?? 
Guid?? "
(??" #
$str??# I
)??I J
)??J K
;??K L
migrationBuilderAA 
.AA 

DeleteDataAA '
(AA' (
tableBB 
:BB 
$strBB '
,BB' (
	keyColumnCC 
:CC 
$strCC 
,CC  
keyValueDD 
:DD 
newDD 
GuidDD "
(DD" #
$strDD# I
)DDI J
)DDJ K
;DDK L
migrationBuilderFF 
.FF 

DeleteDataFF '
(FF' (
tableGG 
:GG 
$strGG '
,GG' (
	keyColumnHH 
:HH 
$strHH 
,HH  
keyValueII 
:II 
newII 
GuidII "
(II" #
$strII# I
)III J
)IIJ K
;IIK L
migrationBuilderKK 
.KK 

DeleteDataKK '
(KK' (
tableLL 
:LL 
$strLL '
,LL' (
	keyColumnMM 
:MM 
$strMM 
,MM  
keyValueNN 
:NN 
newNN 
GuidNN "
(NN" #
$strNN# I
)NNI J
)NNJ K
;NNK L
migrationBuilderPP 
.PP 

DeleteDataPP '
(PP' (
tableQQ 
:QQ 
$strQQ '
,QQ' (
	keyColumnRR 
:RR 
$strRR 
,RR  
keyValueSS 
:SS 
newSS 
GuidSS "
(SS" #
$strSS# I
)SSI J
)SSJ K
;SSK L
migrationBuilderUU 
.UU 
AlterColumnUU (
<UU( )
GuidUU) -
>UU- .
(UU. /
nameVV 
:VV 
$strVV .
,VV. /
tableWW 
:WW 
$strWW /
,WW/ 0
typeXX 
:XX 
$strXX (
,XX( )
nullableYY 
:YY 
falseYY 
,YY  
defaultValueZZ 
:ZZ 
newZZ !
GuidZZ" &
(ZZ& '
$strZZ' M
)ZZM N
,ZZN O

oldClrType[[ 
:[[ 
typeof[[ "
([[" #
Guid[[# '
)[[' (
,[[( )
oldType\\ 
:\\ 
$str\\ +
,\\+ ,
oldNullable]] 
:]] 
true]] !
)]]! "
;]]" #
migrationBuilder__ 
.__ 
AlterColumn__ (
<__( )
DateTime__) 1
>__1 2
(__2 3
name`` 
:`` 
$str`` %
,``% &
tableaa 
:aa 
$straa )
,aa) *
typebb 
:bb 
$strbb !
,bb! "
nullablecc 
:cc 
truecc 
,cc 

oldClrTypedd 
:dd 
typeofdd "
(dd" #
DateTimedd# +
)dd+ ,
,dd, -
oldTypeee 
:ee 
$stree $
)ee$ %
;ee% &
migrationBuildergg 
.gg 

UpdateDatagg '
(gg' (
tablehh 
:hh 
$strhh $
,hh$ %
	keyColumnii 
:ii 
$strii 
,ii  
keyValuejj 
:jj 
$strjj +
,jj+ ,
columnskk 
:kk 
newkk 
[kk 
]kk 
{kk  
$strkk! 3
,kk3 4
$strkk5 A
,kkA B
$strkkC Q
,kkQ R
$strkkS b
}kkc d
,kkd e
valuesll 
:ll 
newll 
objectll "
[ll" #
]ll# $
{ll% &
$strll' M
,llM N
newllO R
DateTimellS [
(ll[ \
$numll\ `
,ll` a
$numllb c
,llc d
$numlle g
,llg h
$numlli j
,llj k
$numlll m
,llm n
$numllo q
,llq r
$numlls v
,llv w
DateTimeKind	llx Ñ
.
llÑ Ö
Utc
llÖ à
)
llà â
.
llâ ä
AddTicks
llä í
(
llí ì
$num
llì ó
)
lló ò
,
llò ô
$str
llö 
,
ll Ò
$str
llÚ ò
}
llô ö
)
llö õ
;
llõ ú
migrationBuildernn 
.nn 

InsertDatann '
(nn' (
tableoo 
:oo 
$stroo '
,oo' (
columnspp 
:pp 
newpp 
[pp 
]pp 
{pp  
$strpp! %
,pp% &
$strpp' 4
,pp4 5
$strpp6 D
,ppD E
$strppF P
,ppP Q
$strppR ]
,pp] ^
$strpp_ l
,ppl m
$strppn }
,pp} ~
$str	pp â
,
ppâ ä
$str
ppã †
,
pp† °
$str
pp¢ ±
,
pp± ≤
$str
pp≥ ¬
,
pp¬ √
$str
ppƒ —
,
pp— “
$str
pp” ﬂ
,
ppﬂ ‡
$str
pp· È
,
ppÈ Í
$str
ppÎ ¯
,
pp¯ ˘
$str
pp˙ à
,
ppà â
$str
ppä ï
,
ppï ñ
$str
ppó §
}
pp• ¶
,
pp¶ ß
valuesqq 
:qq 
newqq 
objectqq "
[qq" #
,qq# $
]qq$ %
{rr 
{ss 
newss 
Guidss 
(ss 
$strss E
)ssE F
,ssF G
$str	ssH ®
,
ss® ©
$str
ss™ ÿ
,
ssÿ Ÿ
$str
ss⁄ ‰
,
ss‰ Â
null
ssÊ Í
,
ssÍ Î
null
ssÏ 
,
ss Ò
$str
ssÚ £
,
ss£ §
$str
ss• Æ
,
ssÆ Ø
$str
ss∞  
,
ss  À
$str
ssÃ Û
,
ssÛ Ù
$str
ssı ˇ
,
ssˇ Ä
$str
ssÅ ù
,
ssù û
$str
ssü ¨
,
ss¨ ≠
$num
ssÆ Ø
,
ssØ ∞
$str
ss± ∆
,
ss∆ «
$str
ss» ÿ
,
ssÿ Ÿ
null
ss⁄ ﬁ
,
ssﬁ ﬂ
null
ss‡ ‰
}
ssÂ Ê
,
ssÊ Á
{tt 
newtt 
Guidtt 
(tt 
$strtt E
)ttE F
,ttF G
$str	ttH ë
,
ttë í
$str
ttì Õ
,
ttÕ Œ
$str
ttœ ·
,
tt· ‚
null
tt„ Á
,
ttÁ Ë
null
ttÈ Ì
,
ttÌ Ó
$str
ttÔ †
,
tt† °
$str
tt¢ ´
,
tt´ ¨
$str
tt≠ ∆
,
tt∆ «
$str
tt» –
,
tt– —
$str
tt“ ‹
,
tt‹ ›
$str
ttﬁ ˙
,
tt˙ ˚
$str
tt¸ â
,
ttâ ä
$num
ttã å
,
ttå ç
$str
tté π
,
ttπ ∫
$str
ttª “
,
tt“ ”
null
tt‘ ÿ
,
ttÿ Ÿ
null
tt⁄ ﬁ
}
ttﬂ ‡
,
tt‡ ·
{uu 
newuu 
Guiduu 
(uu 
$struu E
)uuE F
,uuF G
$str	uuH Ñ
,
uuÑ Ö
$str
uuÜ ¿
,
uu¿ ¡
$str
uu¬ “
,
uu“ ”
null
uu‘ ÿ
,
uuÿ Ÿ
null
uu⁄ ﬁ
,
uuﬁ ﬂ
$str
uu‡ ë
,
uuë í
$str
uuì ú
,
uuú ù
$str
uuû ∑
,
uu∑ ∏
$str
uuπ ¡
,
uu¡ ¬
$str
uu√ Õ
,
uuÕ Œ
$str
uuœ Î
,
uuÎ Ï
$str
uuÌ ˙
,
uu˙ ˚
$num
uu¸ ˝
,
uu˝ ˛
$str
uuˇ ê
,
uuê ë
$str
uuí °
,
uu° ¢
null
uu£ ß
,
uuß ®
null
uu© ≠
}
uuÆ Ø
,
uuØ ∞
{vv 
newvv 
Guidvv 
(vv 
$strvv E
)vvE F
,vvF G
$str	vvH û
,
vvû ü
$str
vv† ≈
,
vv≈ ∆
$str
vv« œ
,
vvœ –
null
vv— ’
,
vv’ ÷
null
vv◊ €
,
vv€ ‹
$str
vv› é
,
vvé è
$str
vvê ô
,
vvô ö
$str
vvõ µ
,
vvµ ∂
$str
vv∑ œ
,
vvœ –
$str
vv— €
,
vv€ ‹
$str
vv› ˘
,
vv˘ ˙
$str
vv˚ à
,
vvà â
$num
vvä ã
,
vvã å
$str
vvç ¢
,
vv¢ £
$str
vv§ µ
,
vvµ ∂
null
vv∑ ª
,
vvª º
null
vvΩ ¡
}
vv¬ √
,
vv√ ƒ
{ww 
newww 
Guidww 
(ww 
$strww E
)wwE F
,wwF G
$str	wwH è
,
wwè ê
$str
wwë ∫
,
ww∫ ª
$str
wwº  
,
ww  À
null
wwÃ –
,
ww– —
null
ww“ ÷
,
ww÷ ◊
$str
wwÿ â
,
wwâ ä
$str
wwã î
,
wwî ï
$str
wwñ ¢
,
ww¢ £
$str
ww§ ¥
,
ww¥ µ
$str
ww∂ ¿
,
ww¿ ¡
$str
ww¬ ÿ
,
wwÿ Ÿ
$str
ww⁄ Ê
,
wwÊ Á
$num
wwË È
,
wwÈ Í
$str
wwÎ ¸
,
ww¸ ˝
$str
ww˛ ì
,
wwì î
null
wwï ô
,
wwô ö
null
wwõ ü
}
ww† °
,
ww° ¢
{xx 
newxx 
Guidxx 
(xx 
$strxx E
)xxE F
,xxF G
$str	xxH ë
,
xxë í
$str
xxì Õ
,
xxÕ Œ
$str
xxœ ·
,
xx· ‚
null
xx„ Á
,
xxÁ Ë
null
xxÈ Ì
,
xxÌ Ó
$str
xxÔ †
,
xx† °
$str
xx¢ ´
,
xx´ ¨
$str
xx≠ ∆
,
xx∆ «
$str
xx» Ê
,
xxÊ Á
$str
xxË Ô
,
xxÔ 
$str
xxÒ ç
,
xxç é
$str
xxè ú
,
xxú ù
$num
xxû ü
,
xxü †
$str
xx° ø
,
xxø ¿
$str
xx¡ Â
,
xxÂ Ê
null
xxÁ Î
,
xxÎ Ï
null
xxÌ Ò
}
xxÚ Û
,
xxÛ Ù
{yy 
newyy 
Guidyy 
(yy 
$stryy E
)yyE F
,yyF G
$str	yyH Ã
,
yyÃ Õ
$str
yyŒ à
,
yyà â
$str
yyä ö
,
yyö õ
null
yyú †
,
yy† °
null
yy¢ ¶
,
yy¶ ß
$str
yy® Ÿ
,
yyŸ ⁄
$str
yy€ ‰
,
yy‰ Â
$str
yyÊ ˇ
,
yyˇ Ä
$str
yyÅ â
,
yyâ ä
$str
yyã ï
,
yyï ñ
$str
yyó ≥
,
yy≥ ¥
$str
yyµ ¬
,
yy¬ √
$num
yyƒ ≈
,
yy≈ ∆
$str
yy« ﬂ
,
yyﬂ ‡
$str
yy· ˆ
,
yyˆ ˜
null
yy¯ ¸
,
yy¸ ˝
null
yy˛ Ç
}
yyÉ Ñ
,
yyÑ Ö
{zz 
newzz 
Guidzz 
(zz 
$strzz E
)zzE F
,zzF G
$str	zzH è
,
zzè ê
$str
zzë À
,
zzÀ Ã
$str
zzÕ ‰
,
zz‰ Â
null
zzÊ Í
,
zzÍ Î
null
zzÏ 
,
zz Ò
$str
zzÚ £
,
zz£ §
$str
zz• Æ
,
zzÆ Ø
$str
zz∞ …
,
zz…  
$str
zzÀ Ò
,
zzÒ Ú
$str
zzÛ ¸
,
zz¸ ˝
$str
zz˛ ö
,
zzö õ
$str
zzú ©
,
zz© ™
$num
zz´ ¨
,
zz¨ ≠
$str
zzÆ Œ
,
zzŒ œ
$str
zz– Ë
,
zzË È
null
zzÍ Ó
,
zzÓ Ô
null
zz Ù
}
zzı ˆ
,
zzˆ ˜
{{{ 
new{{ 
Guid{{ 
({{ 
$str{{ E
){{E F
,{{F G
$str	{{H è
,
{{è ê
$str
{{ë À
,
{{À Ã
$str
{{Õ ‰
,
{{‰ Â
null
{{Ê Í
,
{{Í Î
null
{{Ï 
,
{{ Ò
$str
{{Ú £
,
{{£ §
$str
{{• Æ
,
{{Æ Ø
$str
{{∞ …
,
{{…  
$str
{{À Ì
,
{{Ì Ó
$str
{{Ô ˚
,
{{˚ ¸
$str
{{˝ ô
,
{{ô ö
$str
{{õ ®
,
{{® ©
$num
{{™ ´
,
{{´ ¨
$str
{{≠ Õ
,
{{Õ Œ
$str
{{œ Ë
,
{{Ë È
null
{{Í Ó
,
{{Ó Ô
null
{{ Ù
}
{{ı ˆ
,
{{ˆ ˜
{|| 
new|| 
Guid|| 
(|| 
$str|| E
)||E F
,||F G
$str	||H ”
,
||” ‘
$str
||’ è
,
||è ê
$str
||ë ô
,
||ô ö
null
||õ ü
,
||ü †
null
||° •
,
||• ¶
$str
||ß ÿ
,
||ÿ Ÿ
$str
||⁄ „
,
||„ ‰
$str
||Â °
,
||° ¢
$str
||£ ∑
,
||∑ ∏
$str
||π √
,
||√ ƒ
$str
||≈ ·
,
||· ‚
$str
||„ 
,
|| Ò
$num
||Ú Û
,
||Û Ù
$str
||ı ñ
,
||ñ ó
$str
||ò π
,
||π ∫
null
||ª ø
,
||ø ¿
null
||¡ ≈
}
||∆ «
,
||« »
{}} 
new}} 
Guid}} 
(}} 
$str}} E
)}}E F
,}}F G
$str}}H s
,}}s t
$str	}}u ô
,
}}ô ö
$str
}}õ •
,
}}• ¶
null
}}ß ´
,
}}´ ¨
null
}}≠ ±
,
}}± ≤
$str
}}≥ ˘
,
}}˘ ˙
$str
}}˚ Ñ
,
}}Ñ Ö
$str
}}Ü ü
,
}}ü †
$str
}}° Œ
,
}}Œ œ
$str
}}– ‹
,
}}‹ ›
$str
}}ﬁ ˙
,
}}˙ ˚
$str
}}¸ â
,
}}â ä
$num
}}ã å
,
}}å ç
$str
}}é ª
,
}}ª º
$str
}}Ω ›
,
}}› ﬁ
null
}}ﬂ „
,
}}„ ‰
null
}}Â È
}
}}Í Î
,
}}Î Ï
{~~ 
new~~ 
Guid~~ 
(~~ 
$str~~ E
)~~E F
,~~F G
$str	~~H ∞
,
~~∞ ±
$str
~~≤ Ï
,
~~Ï Ì
$str
~~Ó ˜
,
~~˜ ¯
null
~~˘ ˝
,
~~˝ ˛
null
~~ˇ É
,
~~É Ñ
$str
~~Ö ∂
,
~~∂ ∑
$str
~~∏ ¡
,
~~¡ ¬
$str
~~√ ‹
,
~~‹ ›
$str
~~ﬁ ˘
,
~~˘ ˙
$str
~~˚ Ö
,
~~Ö Ü
$str
~~á £
,
~~£ §
$str
~~• ≤
,
~~≤ ≥
$num
~~¥ µ
,
~~µ ∂
$str
~~∑ À
,
~~À Ã
$str
~~Õ €
,
~~€ ‹
null
~~› ·
,
~~· ‚
null
~~„ Á
}
~~Ë È
,
~~È Í
{ 
new 
Guid 
( 
$str E
)E F
,F G
$str	H æ
,
æ ø
$str
¿ ù
,
ù û
$str
ü ©
,
© ™
null
´ Ø
,
Ø ∞
null
± µ
,
µ ∂
$str
∑ ˚
,
˚ ¸
$str
˝ Ü
,
Ü á
$str
à ≠
,
≠ Æ
$str
Ø ’
,
’ ÷
$str
◊ ·
,
· ‚
$str
„ ˇ
,
ˇ Ä
$str
Å é
,
é è
$num
ê ë
,
ë í
$str
ì ®
,
® ©
$str
™ ø
,
ø ¿
null
¡ ≈
,
≈ ∆
null
« À
}
Ã Õ
}
ÄÄ 
)
ÄÄ 
;
ÄÄ 
migrationBuilder
ÇÇ 
.
ÇÇ 
AddForeignKey
ÇÇ *
(
ÇÇ* +
name
ÉÉ 
:
ÉÉ 
$str
ÉÉ ^
,
ÉÉ^ _
table
ÑÑ 
:
ÑÑ 
$str
ÑÑ /
,
ÑÑ/ 0
column
ÖÖ 
:
ÖÖ 
$str
ÖÖ 0
,
ÖÖ0 1
principalTable
ÜÜ 
:
ÜÜ 
$str
ÜÜ  7
,
ÜÜ7 8
principalColumn
áá 
:
áá  
$str
áá! %
,
áá% &
onDelete
àà 
:
àà 
ReferentialAction
àà +
.
àà+ ,
Cascade
àà, 3
)
àà3 4
;
àà4 5
}
ââ 	
	protected
åå 
override
åå 
void
åå 
Down
åå  $
(
åå$ %
MigrationBuilder
åå% 5
migrationBuilder
åå6 F
)
ååF G
{
çç 	
migrationBuilder
éé 
.
éé 
DropForeignKey
éé +
(
éé+ ,
name
èè 
:
èè 
$str
èè ^
,
èè^ _
table
êê 
:
êê 
$str
êê /
)
êê/ 0
;
êê0 1
migrationBuilder
íí 
.
íí 

DeleteData
íí '
(
íí' (
table
ìì 
:
ìì 
$str
ìì '
,
ìì' (
	keyColumn
îî 
:
îî 
$str
îî 
,
îî  
keyValue
ïï 
:
ïï 
new
ïï 
Guid
ïï "
(
ïï" #
$str
ïï# I
)
ïïI J
)
ïïJ K
;
ïïK L
migrationBuilder
óó 
.
óó 

DeleteData
óó '
(
óó' (
table
òò 
:
òò 
$str
òò '
,
òò' (
	keyColumn
ôô 
:
ôô 
$str
ôô 
,
ôô  
keyValue
öö 
:
öö 
new
öö 
Guid
öö "
(
öö" #
$str
öö# I
)
ööI J
)
ööJ K
;
ööK L
migrationBuilder
úú 
.
úú 

DeleteData
úú '
(
úú' (
table
ùù 
:
ùù 
$str
ùù '
,
ùù' (
	keyColumn
ûû 
:
ûû 
$str
ûû 
,
ûû  
keyValue
üü 
:
üü 
new
üü 
Guid
üü "
(
üü" #
$str
üü# I
)
üüI J
)
üüJ K
;
üüK L
migrationBuilder
°° 
.
°° 

DeleteData
°° '
(
°°' (
table
¢¢ 
:
¢¢ 
$str
¢¢ '
,
¢¢' (
	keyColumn
££ 
:
££ 
$str
££ 
,
££  
keyValue
§§ 
:
§§ 
new
§§ 
Guid
§§ "
(
§§" #
$str
§§# I
)
§§I J
)
§§J K
;
§§K L
migrationBuilder
¶¶ 
.
¶¶ 

DeleteData
¶¶ '
(
¶¶' (
table
ßß 
:
ßß 
$str
ßß '
,
ßß' (
	keyColumn
®® 
:
®® 
$str
®® 
,
®®  
keyValue
©© 
:
©© 
new
©© 
Guid
©© "
(
©©" #
$str
©©# I
)
©©I J
)
©©J K
;
©©K L
migrationBuilder
´´ 
.
´´ 

DeleteData
´´ '
(
´´' (
table
¨¨ 
:
¨¨ 
$str
¨¨ '
,
¨¨' (
	keyColumn
≠≠ 
:
≠≠ 
$str
≠≠ 
,
≠≠  
keyValue
ÆÆ 
:
ÆÆ 
new
ÆÆ 
Guid
ÆÆ "
(
ÆÆ" #
$str
ÆÆ# I
)
ÆÆI J
)
ÆÆJ K
;
ÆÆK L
migrationBuilder
∞∞ 
.
∞∞ 

DeleteData
∞∞ '
(
∞∞' (
table
±± 
:
±± 
$str
±± '
,
±±' (
	keyColumn
≤≤ 
:
≤≤ 
$str
≤≤ 
,
≤≤  
keyValue
≥≥ 
:
≥≥ 
new
≥≥ 
Guid
≥≥ "
(
≥≥" #
$str
≥≥# I
)
≥≥I J
)
≥≥J K
;
≥≥K L
migrationBuilder
µµ 
.
µµ 

DeleteData
µµ '
(
µµ' (
table
∂∂ 
:
∂∂ 
$str
∂∂ '
,
∂∂' (
	keyColumn
∑∑ 
:
∑∑ 
$str
∑∑ 
,
∑∑  
keyValue
∏∏ 
:
∏∏ 
new
∏∏ 
Guid
∏∏ "
(
∏∏" #
$str
∏∏# I
)
∏∏I J
)
∏∏J K
;
∏∏K L
migrationBuilder
∫∫ 
.
∫∫ 

DeleteData
∫∫ '
(
∫∫' (
table
ªª 
:
ªª 
$str
ªª '
,
ªª' (
	keyColumn
ºº 
:
ºº 
$str
ºº 
,
ºº  
keyValue
ΩΩ 
:
ΩΩ 
new
ΩΩ 
Guid
ΩΩ "
(
ΩΩ" #
$str
ΩΩ# I
)
ΩΩI J
)
ΩΩJ K
;
ΩΩK L
migrationBuilder
øø 
.
øø 

DeleteData
øø '
(
øø' (
table
¿¿ 
:
¿¿ 
$str
¿¿ '
,
¿¿' (
	keyColumn
¡¡ 
:
¡¡ 
$str
¡¡ 
,
¡¡  
keyValue
¬¬ 
:
¬¬ 
new
¬¬ 
Guid
¬¬ "
(
¬¬" #
$str
¬¬# I
)
¬¬I J
)
¬¬J K
;
¬¬K L
migrationBuilder
ƒƒ 
.
ƒƒ 

DeleteData
ƒƒ '
(
ƒƒ' (
table
≈≈ 
:
≈≈ 
$str
≈≈ '
,
≈≈' (
	keyColumn
∆∆ 
:
∆∆ 
$str
∆∆ 
,
∆∆  
keyValue
«« 
:
«« 
new
«« 
Guid
«« "
(
««" #
$str
««# I
)
««I J
)
««J K
;
««K L
migrationBuilder
…… 
.
…… 

DeleteData
…… '
(
……' (
table
   
:
   
$str
   '
,
  ' (
	keyColumn
ÀÀ 
:
ÀÀ 
$str
ÀÀ 
,
ÀÀ  
keyValue
ÃÃ 
:
ÃÃ 
new
ÃÃ 
Guid
ÃÃ "
(
ÃÃ" #
$str
ÃÃ# I
)
ÃÃI J
)
ÃÃJ K
;
ÃÃK L
migrationBuilder
ŒŒ 
.
ŒŒ 

DeleteData
ŒŒ '
(
ŒŒ' (
table
œœ 
:
œœ 
$str
œœ '
,
œœ' (
	keyColumn
–– 
:
–– 
$str
–– 
,
––  
keyValue
—— 
:
—— 
new
—— 
Guid
—— "
(
——" #
$str
——# I
)
——I J
)
——J K
;
——K L
migrationBuilder
”” 
.
”” 
AlterColumn
”” (
<
””( )
Guid
””) -
>
””- .
(
””. /
name
‘‘ 
:
‘‘ 
$str
‘‘ .
,
‘‘. /
table
’’ 
:
’’ 
$str
’’ /
,
’’/ 0
type
÷÷ 
:
÷÷ 
$str
÷÷ (
,
÷÷( )
nullable
◊◊ 
:
◊◊ 
true
◊◊ 
,
◊◊ 

oldClrType
ÿÿ 
:
ÿÿ 
typeof
ÿÿ "
(
ÿÿ" #
Guid
ÿÿ# '
)
ÿÿ' (
,
ÿÿ( )
oldType
ŸŸ 
:
ŸŸ 
$str
ŸŸ +
)
ŸŸ+ ,
;
ŸŸ, -
migrationBuilder
€€ 
.
€€ 
AlterColumn
€€ (
<
€€( )
DateTime
€€) 1
>
€€1 2
(
€€2 3
name
‹‹ 
:
‹‹ 
$str
‹‹ %
,
‹‹% &
table
›› 
:
›› 
$str
›› )
,
››) *
type
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ !
,
ﬁﬁ! "
nullable
ﬂﬂ 
:
ﬂﬂ 
false
ﬂﬂ 
,
ﬂﬂ  
defaultValue
‡‡ 
:
‡‡ 
new
‡‡ !
DateTime
‡‡" *
(
‡‡* +
$num
‡‡+ ,
,
‡‡, -
$num
‡‡. /
,
‡‡/ 0
$num
‡‡1 2
,
‡‡2 3
$num
‡‡4 5
,
‡‡5 6
$num
‡‡7 8
,
‡‡8 9
$num
‡‡: ;
,
‡‡; <
$num
‡‡= >
,
‡‡> ?
DateTimeKind
‡‡@ L
.
‡‡L M
Unspecified
‡‡M X
)
‡‡X Y
,
‡‡Y Z

oldClrType
·· 
:
·· 
typeof
·· "
(
··" #
DateTime
··# +
)
··+ ,
,
··, -
oldType
‚‚ 
:
‚‚ 
$str
‚‚ $
,
‚‚$ %
oldNullable
„„ 
:
„„ 
true
„„ !
)
„„! "
;
„„" #
migrationBuilder
ÂÂ 
.
ÂÂ 

UpdateData
ÂÂ '
(
ÂÂ' (
table
ÊÊ 
:
ÊÊ 
$str
ÊÊ $
,
ÊÊ$ %
	keyColumn
ÁÁ 
:
ÁÁ 
$str
ÁÁ 
,
ÁÁ  
keyValue
ËË 
:
ËË 
$str
ËË +
,
ËË+ ,
columns
ÈÈ 
:
ÈÈ 
new
ÈÈ 
[
ÈÈ 
]
ÈÈ 
{
ÈÈ  
$str
ÈÈ! 3
,
ÈÈ3 4
$str
ÈÈ5 A
,
ÈÈA B
$str
ÈÈC Q
,
ÈÈQ R
$str
ÈÈS b
}
ÈÈc d
,
ÈÈd e
values
ÍÍ 
:
ÍÍ 
new
ÍÍ 
object
ÍÍ "
[
ÍÍ" #
]
ÍÍ# $
{
ÍÍ% &
$str
ÍÍ' M
,
ÍÍM N
new
ÍÍO R
DateTime
ÍÍS [
(
ÍÍ[ \
$num
ÍÍ\ `
,
ÍÍ` a
$num
ÍÍb c
,
ÍÍc d
$num
ÍÍe g
,
ÍÍg h
$num
ÍÍi k
,
ÍÍk l
$num
ÍÍm o
,
ÍÍo p
$num
ÍÍq s
,
ÍÍs t
$num
ÍÍu x
,
ÍÍx y
DateTimeKindÍÍz Ü
.ÍÍÜ á
UtcÍÍá ä
)ÍÍä ã
.ÍÍã å
AddTicksÍÍå î
(ÍÍî ï
$numÍÍï ô
)ÍÍô ö
,ÍÍö õ
$strÍÍú Ú
,ÍÍÚ Û
$strÍÍÙ ö
}ÍÍõ ú
)ÍÍú ù
;ÍÍù û
migrationBuilder
ÏÏ 
.
ÏÏ 

InsertData
ÏÏ '
(
ÏÏ' (
table
ÌÌ 
:
ÌÌ 
$str
ÌÌ '
,
ÌÌ' (
columns
ÓÓ 
:
ÓÓ 
new
ÓÓ 
[
ÓÓ 
]
ÓÓ 
{
ÓÓ  
$str
ÓÓ! %
,
ÓÓ% &
$str
ÓÓ' 4
,
ÓÓ4 5
$str
ÓÓ6 D
,
ÓÓD E
$str
ÓÓF P
,
ÓÓP Q
$str
ÓÓR ]
,
ÓÓ] ^
$str
ÓÓ_ l
,
ÓÓl m
$str
ÓÓn }
,
ÓÓ} ~
$strÓÓ â
,ÓÓâ ä
$strÓÓã †
,ÓÓ† °
$strÓÓ¢ ±
,ÓÓ± ≤
$strÓÓ≥ ¬
,ÓÓ¬ √
$strÓÓƒ —
,ÓÓ— “
$strÓÓ” ﬂ
,ÓÓﬂ ‡
$strÓÓ· È
,ÓÓÈ Í
$strÓÓÎ ¯
,ÓÓ¯ ˘
$strÓÓ˙ à
,ÓÓà â
$strÓÓä ï
,ÓÓï ñ
$strÓÓó §
}ÓÓ• ¶
,ÓÓ¶ ß
values
ÔÔ 
:
ÔÔ 
new
ÔÔ 
object
ÔÔ "
[
ÔÔ" #
,
ÔÔ# $
]
ÔÔ$ %
{
 
{
ÒÒ 
new
ÒÒ 
Guid
ÒÒ 
(
ÒÒ 
$str
ÒÒ E
)
ÒÒE F
,
ÒÒF G
$strÒÒH ®
,ÒÒ® ©
$strÒÒ™ ÿ
,ÒÒÿ Ÿ
$strÒÒ⁄ ‰
,ÒÒ‰ Â
nullÒÒÊ Í
,ÒÒÍ Î
nullÒÒÏ 
,ÒÒ Ò
$strÒÒÚ £
,ÒÒ£ §
$strÒÒ• Æ
,ÒÒÆ Ø
$strÒÒ∞  
,ÒÒ  À
$strÒÒÃ Û
,ÒÒÛ Ù
$strÒÒı ˇ
,ÒÒˇ Ä
$strÒÒÅ ù
,ÒÒù û
$strÒÒü ¨
,ÒÒ¨ ≠
$numÒÒÆ Ø
,ÒÒØ ∞
$strÒÒ± ∆
,ÒÒ∆ «
$strÒÒ» ÿ
,ÒÒÿ Ÿ
nullÒÒ⁄ ﬁ
,ÒÒﬁ ﬂ
nullÒÒ‡ ‰
}ÒÒÂ Ê
,ÒÒÊ Á
{
ÚÚ 
new
ÚÚ 
Guid
ÚÚ 
(
ÚÚ 
$str
ÚÚ E
)
ÚÚE F
,
ÚÚF G
$strÚÚH Ñ
,ÚÚÑ Ö
$strÚÚÜ ¿
,ÚÚ¿ ¡
$strÚÚ¬ “
,ÚÚ“ ”
nullÚÚ‘ ÿ
,ÚÚÿ Ÿ
nullÚÚ⁄ ﬁ
,ÚÚﬁ ﬂ
$strÚÚ‡ ë
,ÚÚë í
$strÚÚì ú
,ÚÚú ù
$strÚÚû ∑
,ÚÚ∑ ∏
$strÚÚπ ¡
,ÚÚ¡ ¬
$strÚÚ√ Õ
,ÚÚÕ Œ
$strÚÚœ Î
,ÚÚÎ Ï
$strÚÚÌ ˙
,ÚÚ˙ ˚
$numÚÚ¸ ˝
,ÚÚ˝ ˛
$strÚÚˇ ê
,ÚÚê ë
$strÚÚí °
,ÚÚ° ¢
nullÚÚ£ ß
,ÚÚß ®
nullÚÚ© ≠
}ÚÚÆ Ø
,ÚÚØ ∞
{
ÛÛ 
new
ÛÛ 
Guid
ÛÛ 
(
ÛÛ 
$str
ÛÛ E
)
ÛÛE F
,
ÛÛF G
$strÛÛH è
,ÛÛè ê
$strÛÛë À
,ÛÛÀ Ã
$strÛÛÕ ‰
,ÛÛ‰ Â
nullÛÛÊ Í
,ÛÛÍ Î
nullÛÛÏ 
,ÛÛ Ò
$strÛÛÚ £
,ÛÛ£ §
$strÛÛ• Æ
,ÛÛÆ Ø
$strÛÛ∞ …
,ÛÛ…  
$strÛÛÀ Ò
,ÛÛÒ Ú
$strÛÛÛ ¸
,ÛÛ¸ ˝
$strÛÛ˛ ö
,ÛÛö õ
$strÛÛú ©
,ÛÛ© ™
$numÛÛ´ ¨
,ÛÛ¨ ≠
$strÛÛÆ Œ
,ÛÛŒ œ
$strÛÛ– Ë
,ÛÛË È
nullÛÛÍ Ó
,ÛÛÓ Ô
nullÛÛ Ù
}ÛÛı ˆ
,ÛÛˆ ˜
{
ÙÙ 
new
ÙÙ 
Guid
ÙÙ 
(
ÙÙ 
$str
ÙÙ E
)
ÙÙE F
,
ÙÙF G
$strÙÙH û
,ÙÙû ü
$strÙÙ† ≈
,ÙÙ≈ ∆
$strÙÙ« œ
,ÙÙœ –
nullÙÙ— ’
,ÙÙ’ ÷
nullÙÙ◊ €
,ÙÙ€ ‹
$strÙÙ› é
,ÙÙé è
$strÙÙê ô
,ÙÙô ö
$strÙÙõ µ
,ÙÙµ ∂
$strÙÙ∑ œ
,ÙÙœ –
$strÙÙ— €
,ÙÙ€ ‹
$strÙÙ› ˘
,ÙÙ˘ ˙
$strÙÙ˚ à
,ÙÙà â
$numÙÙä ã
,ÙÙã å
$strÙÙç ¢
,ÙÙ¢ £
$strÙÙ§ µ
,ÙÙµ ∂
nullÙÙ∑ ª
,ÙÙª º
nullÙÙΩ ¡
}ÙÙ¬ √
,ÙÙ√ ƒ
{
ıı 
new
ıı 
Guid
ıı 
(
ıı 
$str
ıı E
)
ııE F
,
ııF G
$strııH ë
,ııë í
$strııì Õ
,ııÕ Œ
$strııœ ·
,ıı· ‚
nullıı„ Á
,ııÁ Ë
nullııÈ Ì
,ııÌ Ó
$strııÔ †
,ıı† °
$strıı¢ ´
,ıı´ ¨
$strıı≠ ∆
,ıı∆ «
$strıı» –
,ıı– —
$strıı“ ‹
,ıı‹ ›
$strııﬁ ˙
,ıı˙ ˚
$strıı¸ â
,ııâ ä
$numııã å
,ııå ç
$strııé π
,ııπ ∫
$strııª “
,ıı“ ”
nullıı‘ ÿ
,ııÿ Ÿ
nullıı⁄ ﬁ
}ııﬂ ‡
,ıı‡ ·
{
ˆˆ 
new
ˆˆ 
Guid
ˆˆ 
(
ˆˆ 
$str
ˆˆ E
)
ˆˆE F
,
ˆˆF G
$strˆˆH Ã
,ˆˆÃ Õ
$strˆˆŒ à
,ˆˆà â
$strˆˆä ö
,ˆˆö õ
nullˆˆú †
,ˆˆ† °
nullˆˆ¢ ¶
,ˆˆ¶ ß
$strˆˆ® Ÿ
,ˆˆŸ ⁄
$strˆˆ€ ‰
,ˆˆ‰ Â
$strˆˆÊ ˇ
,ˆˆˇ Ä
$strˆˆÅ â
,ˆˆâ ä
$strˆˆã ï
,ˆˆï ñ
$strˆˆó ≥
,ˆˆ≥ ¥
$strˆˆµ ¬
,ˆˆ¬ √
$numˆˆƒ ≈
,ˆˆ≈ ∆
$strˆˆ« ﬂ
,ˆˆﬂ ‡
$strˆˆ· ˆ
,ˆˆˆ ˜
nullˆˆ¯ ¸
,ˆˆ¸ ˝
nullˆˆ˛ Ç
}ˆˆÉ Ñ
,ˆˆÑ Ö
{
˜˜ 
new
˜˜ 
Guid
˜˜ 
(
˜˜ 
$str
˜˜ E
)
˜˜E F
,
˜˜F G
$str˜˜H è
,˜˜è ê
$str˜˜ë À
,˜˜À Ã
$str˜˜Õ ‰
,˜˜‰ Â
null˜˜Ê Í
,˜˜Í Î
null˜˜Ï 
,˜˜ Ò
$str˜˜Ú £
,˜˜£ §
$str˜˜• Æ
,˜˜Æ Ø
$str˜˜∞ …
,˜˜…  
$str˜˜À Ì
,˜˜Ì Ó
$str˜˜Ô ˚
,˜˜˚ ¸
$str˜˜˝ ô
,˜˜ô ö
$str˜˜õ ®
,˜˜® ©
$num˜˜™ ´
,˜˜´ ¨
$str˜˜≠ Õ
,˜˜Õ Œ
$str˜˜œ Ë
,˜˜Ë È
null˜˜Í Ó
,˜˜Ó Ô
null˜˜ Ù
}˜˜ı ˆ
,˜˜ˆ ˜
{
¯¯ 
new
¯¯ 
Guid
¯¯ 
(
¯¯ 
$str
¯¯ E
)
¯¯E F
,
¯¯F G
$str¯¯H ∞
,¯¯∞ ±
$str¯¯≤ Ï
,¯¯Ï Ì
$str¯¯Ó ˜
,¯¯˜ ¯
null¯¯˘ ˝
,¯¯˝ ˛
null¯¯ˇ É
,¯¯É Ñ
$str¯¯Ö ∂
,¯¯∂ ∑
$str¯¯∏ ¡
,¯¯¡ ¬
$str¯¯√ ‹
,¯¯‹ ›
$str¯¯ﬁ ˘
,¯¯˘ ˙
$str¯¯˚ Ö
,¯¯Ö Ü
$str¯¯á £
,¯¯£ §
$str¯¯• ≤
,¯¯≤ ≥
$num¯¯¥ µ
,¯¯µ ∂
$str¯¯∑ À
,¯¯À Ã
$str¯¯Õ €
,¯¯€ ‹
null¯¯› ·
,¯¯· ‚
null¯¯„ Á
}¯¯Ë È
,¯¯È Í
{
˘˘ 
new
˘˘ 
Guid
˘˘ 
(
˘˘ 
$str
˘˘ E
)
˘˘E F
,
˘˘F G
$str˘˘H è
,˘˘è ê
$str˘˘ë ∫
,˘˘∫ ª
$str˘˘º  
,˘˘  À
null˘˘Ã –
,˘˘– —
null˘˘“ ÷
,˘˘÷ ◊
$str˘˘ÿ â
,˘˘â ä
$str˘˘ã î
,˘˘î ï
$str˘˘ñ ¢
,˘˘¢ £
$str˘˘§ ¥
,˘˘¥ µ
$str˘˘∂ ¿
,˘˘¿ ¡
$str˘˘¬ ÿ
,˘˘ÿ Ÿ
$str˘˘⁄ Ê
,˘˘Ê Á
$num˘˘Ë È
,˘˘È Í
$str˘˘Î ¸
,˘˘¸ ˝
$str˘˘˛ ì
,˘˘ì î
null˘˘ï ô
,˘˘ô ö
null˘˘õ ü
}˘˘† °
,˘˘° ¢
{
˙˙ 
new
˙˙ 
Guid
˙˙ 
(
˙˙ 
$str
˙˙ E
)
˙˙E F
,
˙˙F G
$str
˙˙H s
,
˙˙s t
$str˙˙u ô
,˙˙ô ö
$str˙˙õ •
,˙˙• ¶
null˙˙ß ´
,˙˙´ ¨
null˙˙≠ ±
,˙˙± ≤
$str˙˙≥ ˘
,˙˙˘ ˙
$str˙˙˚ Ñ
,˙˙Ñ Ö
$str˙˙Ü ü
,˙˙ü †
$str˙˙° Œ
,˙˙Œ œ
$str˙˙– ‹
,˙˙‹ ›
$str˙˙ﬁ ˙
,˙˙˙ ˚
$str˙˙¸ â
,˙˙â ä
$num˙˙ã å
,˙˙å ç
$str˙˙é ª
,˙˙ª º
$str˙˙Ω ›
,˙˙› ﬁ
null˙˙ﬂ „
,˙˙„ ‰
null˙˙Â È
}˙˙Í Î
,˙˙Î Ï
{
˚˚ 
new
˚˚ 
Guid
˚˚ 
(
˚˚ 
$str
˚˚ E
)
˚˚E F
,
˚˚F G
$str˚˚H ë
,˚˚ë í
$str˚˚ì Õ
,˚˚Õ Œ
$str˚˚œ ·
,˚˚· ‚
null˚˚„ Á
,˚˚Á Ë
null˚˚È Ì
,˚˚Ì Ó
$str˚˚Ô †
,˚˚† °
$str˚˚¢ ´
,˚˚´ ¨
$str˚˚≠ ∆
,˚˚∆ «
$str˚˚» Ê
,˚˚Ê Á
$str˚˚Ë Ô
,˚˚Ô 
$str˚˚Ò ç
,˚˚ç é
$str˚˚è ú
,˚˚ú ù
$num˚˚û ü
,˚˚ü †
$str˚˚° ø
,˚˚ø ¿
$str˚˚¡ Â
,˚˚Â Ê
null˚˚Á Î
,˚˚Î Ï
null˚˚Ì Ò
}˚˚Ú Û
,˚˚Û Ù
{
¸¸ 
new
¸¸ 
Guid
¸¸ 
(
¸¸ 
$str
¸¸ E
)
¸¸E F
,
¸¸F G
$str¸¸H ”
,¸¸” ‘
$str¸¸’ è
,¸¸è ê
$str¸¸ë ô
,¸¸ô ö
null¸¸õ ü
,¸¸ü †
null¸¸° •
,¸¸• ¶
$str¸¸ß ÿ
,¸¸ÿ Ÿ
$str¸¸⁄ „
,¸¸„ ‰
$str¸¸Â °
,¸¸° ¢
$str¸¸£ ∑
,¸¸∑ ∏
$str¸¸π √
,¸¸√ ƒ
$str¸¸≈ ·
,¸¸· ‚
$str¸¸„ 
,¸¸ Ò
$num¸¸Ú Û
,¸¸Û Ù
$str¸¸ı ñ
,¸¸ñ ó
$str¸¸ò π
,¸¸π ∫
null¸¸ª ø
,¸¸ø ¿
null¸¸¡ ≈
}¸¸∆ «
,¸¸« »
{
˝˝ 
new
˝˝ 
Guid
˝˝ 
(
˝˝ 
$str
˝˝ E
)
˝˝E F
,
˝˝F G
$str˝˝H æ
,˝˝æ ø
$str˝˝¿ ù
,˝˝ù û
$str˝˝ü ©
,˝˝© ™
null˝˝´ Ø
,˝˝Ø ∞
null˝˝± µ
,˝˝µ ∂
$str˝˝∑ ˚
,˝˝˚ ¸
$str˝˝˝ Ü
,˝˝Ü á
$str˝˝à ≠
,˝˝≠ Æ
$str˝˝Ø ’
,˝˝’ ÷
$str˝˝◊ ·
,˝˝· ‚
$str˝˝„ ˇ
,˝˝ˇ Ä
$str˝˝Å é
,˝˝é è
$num˝˝ê ë
,˝˝ë í
$str˝˝ì ®
,˝˝® ©
$str˝˝™ ø
,˝˝ø ¿
null˝˝¡ ≈
,˝˝≈ ∆
null˝˝« À
}˝˝Ã Õ
}
˛˛ 
)
˛˛ 
;
˛˛ 
migrationBuilder
ÄÄ 
.
ÄÄ 
AddForeignKey
ÄÄ *
(
ÄÄ* +
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ ^
,
ÅÅ^ _
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ /
,
ÇÇ/ 0
column
ÉÉ 
:
ÉÉ 
$str
ÉÉ 0
,
ÉÉ0 1
principalTable
ÑÑ 
:
ÑÑ 
$str
ÑÑ  7
,
ÑÑ7 8
principalColumn
ÖÖ 
:
ÖÖ  
$str
ÖÖ! %
)
ÖÖ% &
;
ÖÖ& '
}
ÜÜ 	
}
áá 
}àà ﬂ≥
îD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240723173023_ModifiedKeyAndForeignKeyCourseProgress.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class 2
&ModifiedKeyAndForeignKeyCourseProgress ?
:@ A
	MigrationB K
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
DropPrimaryKey +
(+ ,
name 
: 
$str +
,+ ,
table 
: 
$str )
)) *
;* +
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn   
:   
$str   
,    
keyValue!! 
:!! 
new!! 
Guid!! "
(!!" #
$str!!# I
)!!I J
)!!J K
;!!K L
migrationBuilder## 
.## 

DeleteData## '
(##' (
table$$ 
:$$ 
$str$$ '
,$$' (
	keyColumn%% 
:%% 
$str%% 
,%%  
keyValue&& 
:&& 
new&& 
Guid&& "
(&&" #
$str&&# I
)&&I J
)&&J K
;&&K L
migrationBuilder(( 
.(( 

DeleteData(( '
(((' (
table)) 
:)) 
$str)) '
,))' (
	keyColumn** 
:** 
$str** 
,**  
keyValue++ 
:++ 
new++ 
Guid++ "
(++" #
$str++# I
)++I J
)++J K
;++K L
migrationBuilder-- 
.-- 

DeleteData-- '
(--' (
table.. 
:.. 
$str.. '
,..' (
	keyColumn// 
:// 
$str// 
,//  
keyValue00 
:00 
new00 
Guid00 "
(00" #
$str00# I
)00I J
)00J K
;00K L
migrationBuilder22 
.22 

DeleteData22 '
(22' (
table33 
:33 
$str33 '
,33' (
	keyColumn44 
:44 
$str44 
,44  
keyValue55 
:55 
new55 
Guid55 "
(55" #
$str55# I
)55I J
)55J K
;55K L
migrationBuilder77 
.77 

DeleteData77 '
(77' (
table88 
:88 
$str88 '
,88' (
	keyColumn99 
:99 
$str99 
,99  
keyValue:: 
::: 
new:: 
Guid:: "
(::" #
$str::# I
)::I J
)::J K
;::K L
migrationBuilder<< 
.<< 

DeleteData<< '
(<<' (
table== 
:== 
$str== '
,==' (
	keyColumn>> 
:>> 
$str>> 
,>>  
keyValue?? 
:?? 
new?? 
Guid?? "
(??" #
$str??# I
)??I J
)??J K
;??K L
migrationBuilderAA 
.AA 

DeleteDataAA '
(AA' (
tableBB 
:BB 
$strBB '
,BB' (
	keyColumnCC 
:CC 
$strCC 
,CC  
keyValueDD 
:DD 
newDD 
GuidDD "
(DD" #
$strDD# I
)DDI J
)DDJ K
;DDK L
migrationBuilderFF 
.FF 

DeleteDataFF '
(FF' (
tableGG 
:GG 
$strGG '
,GG' (
	keyColumnHH 
:HH 
$strHH 
,HH  
keyValueII 
:II 
newII 
GuidII "
(II" #
$strII# I
)III J
)IIJ K
;IIK L
migrationBuilderKK 
.KK 

DeleteDataKK '
(KK' (
tableLL 
:LL 
$strLL '
,LL' (
	keyColumnMM 
:MM 
$strMM 
,MM  
keyValueNN 
:NN 
newNN 
GuidNN "
(NN" #
$strNN# I
)NNI J
)NNJ K
;NNK L
migrationBuilderPP 
.PP 

DeleteDataPP '
(PP' (
tableQQ 
:QQ 
$strQQ '
,QQ' (
	keyColumnRR 
:RR 
$strRR 
,RR  
keyValueSS 
:SS 
newSS 
GuidSS "
(SS" #
$strSS# I
)SSI J
)SSJ K
;SSK L
migrationBuilderUU 
.UU 
	AddColumnUU &
<UU& '
GuidUU' +
>UU+ ,
(UU, -
nameVV 
:VV 
$strVV 
,VV 
tableWW 
:WW 
$strWW )
,WW) *
typeXX 
:XX 
$strXX (
,XX( )
nullableYY 
:YY 
falseYY 
,YY  
defaultValueZZ 
:ZZ 
newZZ !
GuidZZ" &
(ZZ& '
$strZZ' M
)ZZM N
)ZZN O
;ZZO P
migrationBuilder\\ 
.\\ 
AddPrimaryKey\\ *
(\\* +
name]] 
:]] 
$str]] +
,]]+ ,
table^^ 
:^^ 
$str^^ )
,^^) *
column__ 
:__ 
$str__ 
)__ 
;__ 
migrationBuilderaa 
.aa 

UpdateDataaa '
(aa' (
tablebb 
:bb 
$strbb $
,bb$ %
	keyColumncc 
:cc 
$strcc 
,cc  
keyValuedd 
:dd 
$strdd +
,dd+ ,
columnsee 
:ee 
newee 
[ee 
]ee 
{ee  
$stree! 3
,ee3 4
$stree5 A
,eeA B
$streeC Q
,eeQ R
$streeS b
}eec d
,eed e
valuesff 
:ff 
newff 
objectff "
[ff" #
]ff# $
{ff% &
$strff' M
,ffM N
newffO R
DateTimeffS [
(ff[ \
$numff\ `
,ff` a
$numffb c
,ffc d
$numffe g
,ffg h
$numffi k
,ffk l
$numffm o
,ffo p
$numffq s
,ffs t
$numffu x
,ffx y
DateTimeKind	ffz Ü
.
ffÜ á
Utc
ffá ä
)
ffä ã
.
ffã å
AddTicks
ffå î
(
ffî ï
$num
ffï ô
)
ffô ö
,
ffö õ
$str
ffú Ú
,
ffÚ Û
$str
ffÙ ö
}
ffõ ú
)
ffú ù
;
ffù û
migrationBuilderhh 
.hh 

InsertDatahh '
(hh' (
tableii 
:ii 
$strii '
,ii' (
columnsjj 
:jj 
newjj 
[jj 
]jj 
{jj  
$strjj! %
,jj% &
$strjj' 4
,jj4 5
$strjj6 D
,jjD E
$strjjF P
,jjP Q
$strjjR ]
,jj] ^
$strjj_ l
,jjl m
$strjjn }
,jj} ~
$str	jj â
,
jjâ ä
$str
jjã †
,
jj† °
$str
jj¢ ±
,
jj± ≤
$str
jj≥ ¬
,
jj¬ √
$str
jjƒ —
,
jj— “
$str
jj” ﬂ
,
jjﬂ ‡
$str
jj· È
,
jjÈ Í
$str
jjÎ ¯
,
jj¯ ˘
$str
jj˙ à
,
jjà â
$str
jjä ï
,
jjï ñ
$str
jjó §
}
jj• ¶
,
jj¶ ß
valueskk 
:kk 
newkk 
objectkk "
[kk" #
,kk# $
]kk$ %
{ll 
{mm 
newmm 
Guidmm 
(mm 
$strmm E
)mmE F
,mmF G
$str	mmH ®
,
mm® ©
$str
mm™ ÿ
,
mmÿ Ÿ
$str
mm⁄ ‰
,
mm‰ Â
null
mmÊ Í
,
mmÍ Î
null
mmÏ 
,
mm Ò
$str
mmÚ £
,
mm£ §
$str
mm• Æ
,
mmÆ Ø
$str
mm∞  
,
mm  À
$str
mmÃ Û
,
mmÛ Ù
$str
mmı ˇ
,
mmˇ Ä
$str
mmÅ ù
,
mmù û
$str
mmü ¨
,
mm¨ ≠
$num
mmÆ Ø
,
mmØ ∞
$str
mm± ∆
,
mm∆ «
$str
mm» ÿ
,
mmÿ Ÿ
null
mm⁄ ﬁ
,
mmﬁ ﬂ
null
mm‡ ‰
}
mmÂ Ê
,
mmÊ Á
{nn 
newnn 
Guidnn 
(nn 
$strnn E
)nnE F
,nnF G
$str	nnH Ñ
,
nnÑ Ö
$str
nnÜ ¿
,
nn¿ ¡
$str
nn¬ “
,
nn“ ”
null
nn‘ ÿ
,
nnÿ Ÿ
null
nn⁄ ﬁ
,
nnﬁ ﬂ
$str
nn‡ ë
,
nnë í
$str
nnì ú
,
nnú ù
$str
nnû ∑
,
nn∑ ∏
$str
nnπ ¡
,
nn¡ ¬
$str
nn√ Õ
,
nnÕ Œ
$str
nnœ Î
,
nnÎ Ï
$str
nnÌ ˙
,
nn˙ ˚
$num
nn¸ ˝
,
nn˝ ˛
$str
nnˇ ê
,
nnê ë
$str
nní °
,
nn° ¢
null
nn£ ß
,
nnß ®
null
nn© ≠
}
nnÆ Ø
,
nnØ ∞
{oo 
newoo 
Guidoo 
(oo 
$stroo E
)ooE F
,ooF G
$str	ooH è
,
ooè ê
$str
ooë À
,
ooÀ Ã
$str
ooÕ ‰
,
oo‰ Â
null
ooÊ Í
,
ooÍ Î
null
ooÏ 
,
oo Ò
$str
ooÚ £
,
oo£ §
$str
oo• Æ
,
ooÆ Ø
$str
oo∞ …
,
oo…  
$str
ooÀ Ò
,
ooÒ Ú
$str
ooÛ ¸
,
oo¸ ˝
$str
oo˛ ö
,
ooö õ
$str
ooú ©
,
oo© ™
$num
oo´ ¨
,
oo¨ ≠
$str
ooÆ Œ
,
ooŒ œ
$str
oo– Ë
,
ooË È
null
ooÍ Ó
,
ooÓ Ô
null
oo Ù
}
ooı ˆ
,
ooˆ ˜
{pp 
newpp 
Guidpp 
(pp 
$strpp E
)ppE F
,ppF G
$str	ppH û
,
ppû ü
$str
pp† ≈
,
pp≈ ∆
$str
pp« œ
,
ppœ –
null
pp— ’
,
pp’ ÷
null
pp◊ €
,
pp€ ‹
$str
pp› é
,
ppé è
$str
ppê ô
,
ppô ö
$str
ppõ µ
,
ppµ ∂
$str
pp∑ œ
,
ppœ –
$str
pp— €
,
pp€ ‹
$str
pp› ˘
,
pp˘ ˙
$str
pp˚ à
,
ppà â
$num
ppä ã
,
ppã å
$str
ppç ¢
,
pp¢ £
$str
pp§ µ
,
ppµ ∂
null
pp∑ ª
,
ppª º
null
ppΩ ¡
}
pp¬ √
,
pp√ ƒ
{qq 
newqq 
Guidqq 
(qq 
$strqq E
)qqE F
,qqF G
$str	qqH ë
,
qqë í
$str
qqì Õ
,
qqÕ Œ
$str
qqœ ·
,
qq· ‚
null
qq„ Á
,
qqÁ Ë
null
qqÈ Ì
,
qqÌ Ó
$str
qqÔ †
,
qq† °
$str
qq¢ ´
,
qq´ ¨
$str
qq≠ ∆
,
qq∆ «
$str
qq» –
,
qq– —
$str
qq“ ‹
,
qq‹ ›
$str
qqﬁ ˙
,
qq˙ ˚
$str
qq¸ â
,
qqâ ä
$num
qqã å
,
qqå ç
$str
qqé π
,
qqπ ∫
$str
qqª “
,
qq“ ”
null
qq‘ ÿ
,
qqÿ Ÿ
null
qq⁄ ﬁ
}
qqﬂ ‡
,
qq‡ ·
{rr 
newrr 
Guidrr 
(rr 
$strrr E
)rrE F
,rrF G
$str	rrH Ã
,
rrÃ Õ
$str
rrŒ à
,
rrà â
$str
rrä ö
,
rrö õ
null
rrú †
,
rr† °
null
rr¢ ¶
,
rr¶ ß
$str
rr® Ÿ
,
rrŸ ⁄
$str
rr€ ‰
,
rr‰ Â
$str
rrÊ ˇ
,
rrˇ Ä
$str
rrÅ â
,
rrâ ä
$str
rrã ï
,
rrï ñ
$str
rró ≥
,
rr≥ ¥
$str
rrµ ¬
,
rr¬ √
$num
rrƒ ≈
,
rr≈ ∆
$str
rr« ﬂ
,
rrﬂ ‡
$str
rr· ˆ
,
rrˆ ˜
null
rr¯ ¸
,
rr¸ ˝
null
rr˛ Ç
}
rrÉ Ñ
,
rrÑ Ö
{ss 
newss 
Guidss 
(ss 
$strss E
)ssE F
,ssF G
$str	ssH è
,
ssè ê
$str
ssë À
,
ssÀ Ã
$str
ssÕ ‰
,
ss‰ Â
null
ssÊ Í
,
ssÍ Î
null
ssÏ 
,
ss Ò
$str
ssÚ £
,
ss£ §
$str
ss• Æ
,
ssÆ Ø
$str
ss∞ …
,
ss…  
$str
ssÀ Ì
,
ssÌ Ó
$str
ssÔ ˚
,
ss˚ ¸
$str
ss˝ ô
,
ssô ö
$str
ssõ ®
,
ss® ©
$num
ss™ ´
,
ss´ ¨
$str
ss≠ Õ
,
ssÕ Œ
$str
ssœ Ë
,
ssË È
null
ssÍ Ó
,
ssÓ Ô
null
ss Ù
}
ssı ˆ
,
ssˆ ˜
{tt 
newtt 
Guidtt 
(tt 
$strtt E
)ttE F
,ttF G
$str	ttH ∞
,
tt∞ ±
$str
tt≤ Ï
,
ttÏ Ì
$str
ttÓ ˜
,
tt˜ ¯
null
tt˘ ˝
,
tt˝ ˛
null
ttˇ É
,
ttÉ Ñ
$str
ttÖ ∂
,
tt∂ ∑
$str
tt∏ ¡
,
tt¡ ¬
$str
tt√ ‹
,
tt‹ ›
$str
ttﬁ ˘
,
tt˘ ˙
$str
tt˚ Ö
,
ttÖ Ü
$str
ttá £
,
tt£ §
$str
tt• ≤
,
tt≤ ≥
$num
tt¥ µ
,
ttµ ∂
$str
tt∑ À
,
ttÀ Ã
$str
ttÕ €
,
tt€ ‹
null
tt› ·
,
tt· ‚
null
tt„ Á
}
ttË È
,
ttÈ Í
{uu 
newuu 
Guiduu 
(uu 
$struu E
)uuE F
,uuF G
$str	uuH è
,
uuè ê
$str
uuë ∫
,
uu∫ ª
$str
uuº  
,
uu  À
null
uuÃ –
,
uu– —
null
uu“ ÷
,
uu÷ ◊
$str
uuÿ â
,
uuâ ä
$str
uuã î
,
uuî ï
$str
uuñ ¢
,
uu¢ £
$str
uu§ ¥
,
uu¥ µ
$str
uu∂ ¿
,
uu¿ ¡
$str
uu¬ ÿ
,
uuÿ Ÿ
$str
uu⁄ Ê
,
uuÊ Á
$num
uuË È
,
uuÈ Í
$str
uuÎ ¸
,
uu¸ ˝
$str
uu˛ ì
,
uuì î
null
uuï ô
,
uuô ö
null
uuõ ü
}
uu† °
,
uu° ¢
{vv 
newvv 
Guidvv 
(vv 
$strvv E
)vvE F
,vvF G
$strvvH s
,vvs t
$str	vvu ô
,
vvô ö
$str
vvõ •
,
vv• ¶
null
vvß ´
,
vv´ ¨
null
vv≠ ±
,
vv± ≤
$str
vv≥ ˘
,
vv˘ ˙
$str
vv˚ Ñ
,
vvÑ Ö
$str
vvÜ ü
,
vvü †
$str
vv° Œ
,
vvŒ œ
$str
vv– ‹
,
vv‹ ›
$str
vvﬁ ˙
,
vv˙ ˚
$str
vv¸ â
,
vvâ ä
$num
vvã å
,
vvå ç
$str
vvé ª
,
vvª º
$str
vvΩ ›
,
vv› ﬁ
null
vvﬂ „
,
vv„ ‰
null
vvÂ È
}
vvÍ Î
,
vvÎ Ï
{ww 
newww 
Guidww 
(ww 
$strww E
)wwE F
,wwF G
$str	wwH ë
,
wwë í
$str
wwì Õ
,
wwÕ Œ
$str
wwœ ·
,
ww· ‚
null
ww„ Á
,
wwÁ Ë
null
wwÈ Ì
,
wwÌ Ó
$str
wwÔ †
,
ww† °
$str
ww¢ ´
,
ww´ ¨
$str
ww≠ ∆
,
ww∆ «
$str
ww» Ê
,
wwÊ Á
$str
wwË Ô
,
wwÔ 
$str
wwÒ ç
,
wwç é
$str
wwè ú
,
wwú ù
$num
wwû ü
,
wwü †
$str
ww° ø
,
wwø ¿
$str
ww¡ Â
,
wwÂ Ê
null
wwÁ Î
,
wwÎ Ï
null
wwÌ Ò
}
wwÚ Û
,
wwÛ Ù
{xx 
newxx 
Guidxx 
(xx 
$strxx E
)xxE F
,xxF G
$str	xxH ”
,
xx” ‘
$str
xx’ è
,
xxè ê
$str
xxë ô
,
xxô ö
null
xxõ ü
,
xxü †
null
xx° •
,
xx• ¶
$str
xxß ÿ
,
xxÿ Ÿ
$str
xx⁄ „
,
xx„ ‰
$str
xxÂ °
,
xx° ¢
$str
xx£ ∑
,
xx∑ ∏
$str
xxπ √
,
xx√ ƒ
$str
xx≈ ·
,
xx· ‚
$str
xx„ 
,
xx Ò
$num
xxÚ Û
,
xxÛ Ù
$str
xxı ñ
,
xxñ ó
$str
xxò π
,
xxπ ∫
null
xxª ø
,
xxø ¿
null
xx¡ ≈
}
xx∆ «
,
xx« »
{yy 
newyy 
Guidyy 
(yy 
$stryy E
)yyE F
,yyF G
$str	yyH æ
,
yyæ ø
$str
yy¿ ù
,
yyù û
$str
yyü ©
,
yy© ™
null
yy´ Ø
,
yyØ ∞
null
yy± µ
,
yyµ ∂
$str
yy∑ ˚
,
yy˚ ¸
$str
yy˝ Ü
,
yyÜ á
$str
yyà ≠
,
yy≠ Æ
$str
yyØ ’
,
yy’ ÷
$str
yy◊ ·
,
yy· ‚
$str
yy„ ˇ
,
yyˇ Ä
$str
yyÅ é
,
yyé è
$num
yyê ë
,
yyë í
$str
yyì ®
,
yy® ©
$str
yy™ ø
,
yyø ¿
null
yy¡ ≈
,
yy≈ ∆
null
yy« À
}
yyÃ Õ
}zz 
)zz 
;zz 
migrationBuilder|| 
.|| 
CreateIndex|| (
(||( )
name}} 
:}} 
$str}} ;
,}}; <
table~~ 
:~~ 
$str~~ )
,~~) *
column 
: 
$str )
)) *
;* +
}
ÄÄ 	
	protected
ÉÉ 
override
ÉÉ 
void
ÉÉ 
Down
ÉÉ  $
(
ÉÉ$ %
MigrationBuilder
ÉÉ% 5
migrationBuilder
ÉÉ6 F
)
ÉÉF G
{
ÑÑ 	
migrationBuilder
ÖÖ 
.
ÖÖ 
DropPrimaryKey
ÖÖ +
(
ÖÖ+ ,
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ +
,
ÜÜ+ ,
table
áá 
:
áá 
$str
áá )
)
áá) *
;
áá* +
migrationBuilder
ââ 
.
ââ 
	DropIndex
ââ &
(
ââ& '
name
ää 
:
ää 
$str
ää ;
,
ää; <
table
ãã 
:
ãã 
$str
ãã )
)
ãã) *
;
ãã* +
migrationBuilder
çç 
.
çç 

DeleteData
çç '
(
çç' (
table
éé 
:
éé 
$str
éé '
,
éé' (
	keyColumn
èè 
:
èè 
$str
èè 
,
èè  
keyValue
êê 
:
êê 
new
êê 
Guid
êê "
(
êê" #
$str
êê# I
)
êêI J
)
êêJ K
;
êêK L
migrationBuilder
íí 
.
íí 

DeleteData
íí '
(
íí' (
table
ìì 
:
ìì 
$str
ìì '
,
ìì' (
	keyColumn
îî 
:
îî 
$str
îî 
,
îî  
keyValue
ïï 
:
ïï 
new
ïï 
Guid
ïï "
(
ïï" #
$str
ïï# I
)
ïïI J
)
ïïJ K
;
ïïK L
migrationBuilder
óó 
.
óó 

DeleteData
óó '
(
óó' (
table
òò 
:
òò 
$str
òò '
,
òò' (
	keyColumn
ôô 
:
ôô 
$str
ôô 
,
ôô  
keyValue
öö 
:
öö 
new
öö 
Guid
öö "
(
öö" #
$str
öö# I
)
ööI J
)
ööJ K
;
ööK L
migrationBuilder
úú 
.
úú 

DeleteData
úú '
(
úú' (
table
ùù 
:
ùù 
$str
ùù '
,
ùù' (
	keyColumn
ûû 
:
ûû 
$str
ûû 
,
ûû  
keyValue
üü 
:
üü 
new
üü 
Guid
üü "
(
üü" #
$str
üü# I
)
üüI J
)
üüJ K
;
üüK L
migrationBuilder
°° 
.
°° 

DeleteData
°° '
(
°°' (
table
¢¢ 
:
¢¢ 
$str
¢¢ '
,
¢¢' (
	keyColumn
££ 
:
££ 
$str
££ 
,
££  
keyValue
§§ 
:
§§ 
new
§§ 
Guid
§§ "
(
§§" #
$str
§§# I
)
§§I J
)
§§J K
;
§§K L
migrationBuilder
¶¶ 
.
¶¶ 

DeleteData
¶¶ '
(
¶¶' (
table
ßß 
:
ßß 
$str
ßß '
,
ßß' (
	keyColumn
®® 
:
®® 
$str
®® 
,
®®  
keyValue
©© 
:
©© 
new
©© 
Guid
©© "
(
©©" #
$str
©©# I
)
©©I J
)
©©J K
;
©©K L
migrationBuilder
´´ 
.
´´ 

DeleteData
´´ '
(
´´' (
table
¨¨ 
:
¨¨ 
$str
¨¨ '
,
¨¨' (
	keyColumn
≠≠ 
:
≠≠ 
$str
≠≠ 
,
≠≠  
keyValue
ÆÆ 
:
ÆÆ 
new
ÆÆ 
Guid
ÆÆ "
(
ÆÆ" #
$str
ÆÆ# I
)
ÆÆI J
)
ÆÆJ K
;
ÆÆK L
migrationBuilder
∞∞ 
.
∞∞ 

DeleteData
∞∞ '
(
∞∞' (
table
±± 
:
±± 
$str
±± '
,
±±' (
	keyColumn
≤≤ 
:
≤≤ 
$str
≤≤ 
,
≤≤  
keyValue
≥≥ 
:
≥≥ 
new
≥≥ 
Guid
≥≥ "
(
≥≥" #
$str
≥≥# I
)
≥≥I J
)
≥≥J K
;
≥≥K L
migrationBuilder
µµ 
.
µµ 

DeleteData
µµ '
(
µµ' (
table
∂∂ 
:
∂∂ 
$str
∂∂ '
,
∂∂' (
	keyColumn
∑∑ 
:
∑∑ 
$str
∑∑ 
,
∑∑  
keyValue
∏∏ 
:
∏∏ 
new
∏∏ 
Guid
∏∏ "
(
∏∏" #
$str
∏∏# I
)
∏∏I J
)
∏∏J K
;
∏∏K L
migrationBuilder
∫∫ 
.
∫∫ 

DeleteData
∫∫ '
(
∫∫' (
table
ªª 
:
ªª 
$str
ªª '
,
ªª' (
	keyColumn
ºº 
:
ºº 
$str
ºº 
,
ºº  
keyValue
ΩΩ 
:
ΩΩ 
new
ΩΩ 
Guid
ΩΩ "
(
ΩΩ" #
$str
ΩΩ# I
)
ΩΩI J
)
ΩΩJ K
;
ΩΩK L
migrationBuilder
øø 
.
øø 

DeleteData
øø '
(
øø' (
table
¿¿ 
:
¿¿ 
$str
¿¿ '
,
¿¿' (
	keyColumn
¡¡ 
:
¡¡ 
$str
¡¡ 
,
¡¡  
keyValue
¬¬ 
:
¬¬ 
new
¬¬ 
Guid
¬¬ "
(
¬¬" #
$str
¬¬# I
)
¬¬I J
)
¬¬J K
;
¬¬K L
migrationBuilder
ƒƒ 
.
ƒƒ 

DeleteData
ƒƒ '
(
ƒƒ' (
table
≈≈ 
:
≈≈ 
$str
≈≈ '
,
≈≈' (
	keyColumn
∆∆ 
:
∆∆ 
$str
∆∆ 
,
∆∆  
keyValue
«« 
:
«« 
new
«« 
Guid
«« "
(
««" #
$str
««# I
)
««I J
)
««J K
;
««K L
migrationBuilder
…… 
.
…… 

DeleteData
…… '
(
……' (
table
   
:
   
$str
   '
,
  ' (
	keyColumn
ÀÀ 
:
ÀÀ 
$str
ÀÀ 
,
ÀÀ  
keyValue
ÃÃ 
:
ÃÃ 
new
ÃÃ 
Guid
ÃÃ "
(
ÃÃ" #
$str
ÃÃ# I
)
ÃÃI J
)
ÃÃJ K
;
ÃÃK L
migrationBuilder
ŒŒ 
.
ŒŒ 

DropColumn
ŒŒ '
(
ŒŒ' (
name
œœ 
:
œœ 
$str
œœ 
,
œœ 
table
–– 
:
–– 
$str
–– )
)
––) *
;
––* +
migrationBuilder
““ 
.
““ 
AddPrimaryKey
““ *
(
““* +
name
”” 
:
”” 
$str
”” +
,
””+ ,
table
‘‘ 
:
‘‘ 
$str
‘‘ )
,
‘‘) *
column
’’ 
:
’’ 
$str
’’ )
)
’’) *
;
’’* +
migrationBuilder
◊◊ 
.
◊◊ 

UpdateData
◊◊ '
(
◊◊' (
table
ÿÿ 
:
ÿÿ 
$str
ÿÿ $
,
ÿÿ$ %
	keyColumn
ŸŸ 
:
ŸŸ 
$str
ŸŸ 
,
ŸŸ  
keyValue
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ +
,
⁄⁄+ ,
columns
€€ 
:
€€ 
new
€€ 
[
€€ 
]
€€ 
{
€€  
$str
€€! 3
,
€€3 4
$str
€€5 A
,
€€A B
$str
€€C Q
,
€€Q R
$str
€€S b
}
€€c d
,
€€d e
values
‹‹ 
:
‹‹ 
new
‹‹ 
object
‹‹ "
[
‹‹" #
]
‹‹# $
{
‹‹% &
$str
‹‹' M
,
‹‹M N
new
‹‹O R
DateTime
‹‹S [
(
‹‹[ \
$num
‹‹\ `
,
‹‹` a
$num
‹‹b c
,
‹‹c d
$num
‹‹e g
,
‹‹g h
$num
‹‹i j
,
‹‹j k
$num
‹‹l n
,
‹‹n o
$num
‹‹p r
,
‹‹r s
$num
‹‹t w
,
‹‹w x
DateTimeKind‹‹y Ö
.‹‹Ö Ü
Utc‹‹Ü â
)‹‹â ä
.‹‹ä ã
AddTicks‹‹ã ì
(‹‹ì î
$num‹‹î ò
)‹‹ò ô
,‹‹ô ö
$str‹‹õ Ò
,‹‹Ò Ú
$str‹‹Û ô
}‹‹ö õ
)‹‹õ ú
;‹‹ú ù
migrationBuilder
ﬁﬁ 
.
ﬁﬁ 

InsertData
ﬁﬁ '
(
ﬁﬁ' (
table
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ '
,
ﬂﬂ' (
columns
‡‡ 
:
‡‡ 
new
‡‡ 
[
‡‡ 
]
‡‡ 
{
‡‡  
$str
‡‡! %
,
‡‡% &
$str
‡‡' 4
,
‡‡4 5
$str
‡‡6 D
,
‡‡D E
$str
‡‡F P
,
‡‡P Q
$str
‡‡R ]
,
‡‡] ^
$str
‡‡_ l
,
‡‡l m
$str
‡‡n }
,
‡‡} ~
$str‡‡ â
,‡‡â ä
$str‡‡ã †
,‡‡† °
$str‡‡¢ ±
,‡‡± ≤
$str‡‡≥ ¬
,‡‡¬ √
$str‡‡ƒ —
,‡‡— “
$str‡‡” ﬂ
,‡‡ﬂ ‡
$str‡‡· È
,‡‡È Í
$str‡‡Î ¯
,‡‡¯ ˘
$str‡‡˙ à
,‡‡à â
$str‡‡ä ï
,‡‡ï ñ
$str‡‡ó §
}‡‡• ¶
,‡‡¶ ß
values
·· 
:
·· 
new
·· 
object
·· "
[
··" #
,
··# $
]
··$ %
{
‚‚ 
{
„„ 
new
„„ 
Guid
„„ 
(
„„ 
$str
„„ E
)
„„E F
,
„„F G
$str„„H Ã
,„„Ã Õ
$str„„Œ à
,„„à â
$str„„ä ö
,„„ö õ
null„„ú †
,„„† °
null„„¢ ¶
,„„¶ ß
$str„„® Ÿ
,„„Ÿ ⁄
$str„„€ ‰
,„„‰ Â
$str„„Ê ˇ
,„„ˇ Ä
$str„„Å â
,„„â ä
$str„„ã ï
,„„ï ñ
$str„„ó ≥
,„„≥ ¥
$str„„µ ¬
,„„¬ √
$num„„ƒ ≈
,„„≈ ∆
$str„„« ﬂ
,„„ﬂ ‡
$str„„· ˆ
,„„ˆ ˜
null„„¯ ¸
,„„¸ ˝
null„„˛ Ç
}„„É Ñ
,„„Ñ Ö
{
‰‰ 
new
‰‰ 
Guid
‰‰ 
(
‰‰ 
$str
‰‰ E
)
‰‰E F
,
‰‰F G
$str‰‰H ∞
,‰‰∞ ±
$str‰‰≤ Ï
,‰‰Ï Ì
$str‰‰Ó ˜
,‰‰˜ ¯
null‰‰˘ ˝
,‰‰˝ ˛
null‰‰ˇ É
,‰‰É Ñ
$str‰‰Ö ∂
,‰‰∂ ∑
$str‰‰∏ ¡
,‰‰¡ ¬
$str‰‰√ ‹
,‰‰‹ ›
$str‰‰ﬁ ˘
,‰‰˘ ˙
$str‰‰˚ Ö
,‰‰Ö Ü
$str‰‰á £
,‰‰£ §
$str‰‰• ≤
,‰‰≤ ≥
$num‰‰¥ µ
,‰‰µ ∂
$str‰‰∑ À
,‰‰À Ã
$str‰‰Õ €
,‰‰€ ‹
null‰‰› ·
,‰‰· ‚
null‰‰„ Á
}‰‰Ë È
,‰‰È Í
{
ÂÂ 
new
ÂÂ 
Guid
ÂÂ 
(
ÂÂ 
$str
ÂÂ E
)
ÂÂE F
,
ÂÂF G
$strÂÂH è
,ÂÂè ê
$strÂÂë À
,ÂÂÀ Ã
$strÂÂÕ ‰
,ÂÂ‰ Â
nullÂÂÊ Í
,ÂÂÍ Î
nullÂÂÏ 
,ÂÂ Ò
$strÂÂÚ £
,ÂÂ£ §
$strÂÂ• Æ
,ÂÂÆ Ø
$strÂÂ∞ …
,ÂÂ…  
$strÂÂÀ Ì
,ÂÂÌ Ó
$strÂÂÔ ˚
,ÂÂ˚ ¸
$strÂÂ˝ ô
,ÂÂô ö
$strÂÂõ ®
,ÂÂ® ©
$numÂÂ™ ´
,ÂÂ´ ¨
$strÂÂ≠ Õ
,ÂÂÕ Œ
$strÂÂœ Ë
,ÂÂË È
nullÂÂÍ Ó
,ÂÂÓ Ô
nullÂÂ Ù
}ÂÂı ˆ
,ÂÂˆ ˜
{
ÊÊ 
new
ÊÊ 
Guid
ÊÊ 
(
ÊÊ 
$str
ÊÊ E
)
ÊÊE F
,
ÊÊF G
$strÊÊH ë
,ÊÊë í
$strÊÊì Õ
,ÊÊÕ Œ
$strÊÊœ ·
,ÊÊ· ‚
nullÊÊ„ Á
,ÊÊÁ Ë
nullÊÊÈ Ì
,ÊÊÌ Ó
$strÊÊÔ †
,ÊÊ† °
$strÊÊ¢ ´
,ÊÊ´ ¨
$strÊÊ≠ ∆
,ÊÊ∆ «
$strÊÊ» Ê
,ÊÊÊ Á
$strÊÊË Ô
,ÊÊÔ 
$strÊÊÒ ç
,ÊÊç é
$strÊÊè ú
,ÊÊú ù
$numÊÊû ü
,ÊÊü †
$strÊÊ° ø
,ÊÊø ¿
$strÊÊ¡ Â
,ÊÊÂ Ê
nullÊÊÁ Î
,ÊÊÎ Ï
nullÊÊÌ Ò
}ÊÊÚ Û
,ÊÊÛ Ù
{
ÁÁ 
new
ÁÁ 
Guid
ÁÁ 
(
ÁÁ 
$str
ÁÁ E
)
ÁÁE F
,
ÁÁF G
$str
ÁÁH s
,
ÁÁs t
$strÁÁu ô
,ÁÁô ö
$strÁÁõ •
,ÁÁ• ¶
nullÁÁß ´
,ÁÁ´ ¨
nullÁÁ≠ ±
,ÁÁ± ≤
$strÁÁ≥ ˘
,ÁÁ˘ ˙
$strÁÁ˚ Ñ
,ÁÁÑ Ö
$strÁÁÜ ü
,ÁÁü †
$strÁÁ° Œ
,ÁÁŒ œ
$strÁÁ– ‹
,ÁÁ‹ ›
$strÁÁﬁ ˙
,ÁÁ˙ ˚
$strÁÁ¸ â
,ÁÁâ ä
$numÁÁã å
,ÁÁå ç
$strÁÁé ª
,ÁÁª º
$strÁÁΩ ›
,ÁÁ› ﬁ
nullÁÁﬂ „
,ÁÁ„ ‰
nullÁÁÂ È
}ÁÁÍ Î
,ÁÁÎ Ï
{
ËË 
new
ËË 
Guid
ËË 
(
ËË 
$str
ËË E
)
ËËE F
,
ËËF G
$strËËH è
,ËËè ê
$strËËë À
,ËËÀ Ã
$strËËÕ ‰
,ËË‰ Â
nullËËÊ Í
,ËËÍ Î
nullËËÏ 
,ËË Ò
$strËËÚ £
,ËË£ §
$strËË• Æ
,ËËÆ Ø
$strËË∞ …
,ËË…  
$strËËÀ Ò
,ËËÒ Ú
$strËËÛ ¸
,ËË¸ ˝
$strËË˛ ö
,ËËö õ
$strËËú ©
,ËË© ™
$numËË´ ¨
,ËË¨ ≠
$strËËÆ Œ
,ËËŒ œ
$strËË– Ë
,ËËË È
nullËËÍ Ó
,ËËÓ Ô
nullËË Ù
}ËËı ˆ
,ËËˆ ˜
{
ÈÈ 
new
ÈÈ 
Guid
ÈÈ 
(
ÈÈ 
$str
ÈÈ E
)
ÈÈE F
,
ÈÈF G
$strÈÈH ”
,ÈÈ” ‘
$strÈÈ’ è
,ÈÈè ê
$strÈÈë ô
,ÈÈô ö
nullÈÈõ ü
,ÈÈü †
nullÈÈ° •
,ÈÈ• ¶
$strÈÈß ÿ
,ÈÈÿ Ÿ
$strÈÈ⁄ „
,ÈÈ„ ‰
$strÈÈÂ °
,ÈÈ° ¢
$strÈÈ£ ∑
,ÈÈ∑ ∏
$strÈÈπ √
,ÈÈ√ ƒ
$strÈÈ≈ ·
,ÈÈ· ‚
$strÈÈ„ 
,ÈÈ Ò
$numÈÈÚ Û
,ÈÈÛ Ù
$strÈÈı ñ
,ÈÈñ ó
$strÈÈò π
,ÈÈπ ∫
nullÈÈª ø
,ÈÈø ¿
nullÈÈ¡ ≈
}ÈÈ∆ «
,ÈÈ« »
{
ÍÍ 
new
ÍÍ 
Guid
ÍÍ 
(
ÍÍ 
$str
ÍÍ E
)
ÍÍE F
,
ÍÍF G
$strÍÍH æ
,ÍÍæ ø
$strÍÍ¿ ù
,ÍÍù û
$strÍÍü ©
,ÍÍ© ™
nullÍÍ´ Ø
,ÍÍØ ∞
nullÍÍ± µ
,ÍÍµ ∂
$strÍÍ∑ ˚
,ÍÍ˚ ¸
$strÍÍ˝ Ü
,ÍÍÜ á
$strÍÍà ≠
,ÍÍ≠ Æ
$strÍÍØ ’
,ÍÍ’ ÷
$strÍÍ◊ ·
,ÍÍ· ‚
$strÍÍ„ ˇ
,ÍÍˇ Ä
$strÍÍÅ é
,ÍÍé è
$numÍÍê ë
,ÍÍë í
$strÍÍì ®
,ÍÍ® ©
$strÍÍ™ ø
,ÍÍø ¿
nullÍÍ¡ ≈
,ÍÍ≈ ∆
nullÍÍ« À
}ÍÍÃ Õ
,ÍÍÕ Œ
{
ÎÎ 
new
ÎÎ 
Guid
ÎÎ 
(
ÎÎ 
$str
ÎÎ E
)
ÎÎE F
,
ÎÎF G
$strÎÎH è
,ÎÎè ê
$strÎÎë ∫
,ÎÎ∫ ª
$strÎÎº  
,ÎÎ  À
nullÎÎÃ –
,ÎÎ– —
nullÎÎ“ ÷
,ÎÎ÷ ◊
$strÎÎÿ â
,ÎÎâ ä
$strÎÎã î
,ÎÎî ï
$strÎÎñ ¢
,ÎÎ¢ £
$strÎÎ§ ¥
,ÎÎ¥ µ
$strÎÎ∂ ¿
,ÎÎ¿ ¡
$strÎÎ¬ ÿ
,ÎÎÿ Ÿ
$strÎÎ⁄ Ê
,ÎÎÊ Á
$numÎÎË È
,ÎÎÈ Í
$strÎÎÎ ¸
,ÎÎ¸ ˝
$strÎÎ˛ ì
,ÎÎì î
nullÎÎï ô
,ÎÎô ö
nullÎÎõ ü
}ÎÎ† °
,ÎÎ° ¢
{
ÏÏ 
new
ÏÏ 
Guid
ÏÏ 
(
ÏÏ 
$str
ÏÏ E
)
ÏÏE F
,
ÏÏF G
$strÏÏH ®
,ÏÏ® ©
$strÏÏ™ ÿ
,ÏÏÿ Ÿ
$strÏÏ⁄ ‰
,ÏÏ‰ Â
nullÏÏÊ Í
,ÏÏÍ Î
nullÏÏÏ 
,ÏÏ Ò
$strÏÏÚ £
,ÏÏ£ §
$strÏÏ• Æ
,ÏÏÆ Ø
$strÏÏ∞  
,ÏÏ  À
$strÏÏÃ Û
,ÏÏÛ Ù
$strÏÏı ˇ
,ÏÏˇ Ä
$strÏÏÅ ù
,ÏÏù û
$strÏÏü ¨
,ÏÏ¨ ≠
$numÏÏÆ Ø
,ÏÏØ ∞
$strÏÏ± ∆
,ÏÏ∆ «
$strÏÏ» ÿ
,ÏÏÿ Ÿ
nullÏÏ⁄ ﬁ
,ÏÏﬁ ﬂ
nullÏÏ‡ ‰
}ÏÏÂ Ê
,ÏÏÊ Á
{
ÌÌ 
new
ÌÌ 
Guid
ÌÌ 
(
ÌÌ 
$str
ÌÌ E
)
ÌÌE F
,
ÌÌF G
$strÌÌH û
,ÌÌû ü
$strÌÌ† ≈
,ÌÌ≈ ∆
$strÌÌ« œ
,ÌÌœ –
nullÌÌ— ’
,ÌÌ’ ÷
nullÌÌ◊ €
,ÌÌ€ ‹
$strÌÌ› é
,ÌÌé è
$strÌÌê ô
,ÌÌô ö
$strÌÌõ µ
,ÌÌµ ∂
$strÌÌ∑ œ
,ÌÌœ –
$strÌÌ— €
,ÌÌ€ ‹
$strÌÌ› ˘
,ÌÌ˘ ˙
$strÌÌ˚ à
,ÌÌà â
$numÌÌä ã
,ÌÌã å
$strÌÌç ¢
,ÌÌ¢ £
$strÌÌ§ µ
,ÌÌµ ∂
nullÌÌ∑ ª
,ÌÌª º
nullÌÌΩ ¡
}ÌÌ¬ √
,ÌÌ√ ƒ
{
ÓÓ 
new
ÓÓ 
Guid
ÓÓ 
(
ÓÓ 
$str
ÓÓ E
)
ÓÓE F
,
ÓÓF G
$strÓÓH ë
,ÓÓë í
$strÓÓì Õ
,ÓÓÕ Œ
$strÓÓœ ·
,ÓÓ· ‚
nullÓÓ„ Á
,ÓÓÁ Ë
nullÓÓÈ Ì
,ÓÓÌ Ó
$strÓÓÔ †
,ÓÓ† °
$strÓÓ¢ ´
,ÓÓ´ ¨
$strÓÓ≠ ∆
,ÓÓ∆ «
$strÓÓ» –
,ÓÓ– —
$strÓÓ“ ‹
,ÓÓ‹ ›
$strÓÓﬁ ˙
,ÓÓ˙ ˚
$strÓÓ¸ â
,ÓÓâ ä
$numÓÓã å
,ÓÓå ç
$strÓÓé π
,ÓÓπ ∫
$strÓÓª “
,ÓÓ“ ”
nullÓÓ‘ ÿ
,ÓÓÿ Ÿ
nullÓÓ⁄ ﬁ
}ÓÓﬂ ‡
,ÓÓ‡ ·
{
ÔÔ 
new
ÔÔ 
Guid
ÔÔ 
(
ÔÔ 
$str
ÔÔ E
)
ÔÔE F
,
ÔÔF G
$strÔÔH Ñ
,ÔÔÑ Ö
$strÔÔÜ ¿
,ÔÔ¿ ¡
$strÔÔ¬ “
,ÔÔ“ ”
nullÔÔ‘ ÿ
,ÔÔÿ Ÿ
nullÔÔ⁄ ﬁ
,ÔÔﬁ ﬂ
$strÔÔ‡ ë
,ÔÔë í
$strÔÔì ú
,ÔÔú ù
$strÔÔû ∑
,ÔÔ∑ ∏
$strÔÔπ ¡
,ÔÔ¡ ¬
$strÔÔ√ Õ
,ÔÔÕ Œ
$strÔÔœ Î
,ÔÔÎ Ï
$strÔÔÌ ˙
,ÔÔ˙ ˚
$numÔÔ¸ ˝
,ÔÔ˝ ˛
$strÔÔˇ ê
,ÔÔê ë
$strÔÔí °
,ÔÔ° ¢
nullÔÔ£ ß
,ÔÔß ®
nullÔÔ© ≠
}ÔÔÆ Ø
}
 
)
 
;
 
}
ÒÒ 	
}
ÚÚ 
}ÛÛ õπ
ÑD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240723084739_AddTableCourseProgress.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class "
AddTableCourseProgress /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 
CreateTableQQ (
(QQ( )
nameRR 
:RR 
$strRR (
,RR( )
columnsSS 
:SS 
tableSS 
=>SS !
newSS" %
{TT 
StudentCourseIdUU #
=UU$ %
tableUU& +
.UU+ ,
ColumnUU, 2
<UU2 3
GuidUU3 7
>UU7 8
(UU8 9
typeUU9 =
:UU= >
$strUU? Q
,UUQ R
nullableUUS [
:UU[ \
falseUU] b
)UUb c
,UUc d
CourseIdVV 
=VV 
tableVV $
.VV$ %
ColumnVV% +
<VV+ ,
GuidVV, 0
>VV0 1
(VV1 2
typeVV2 6
:VV6 7
$strVV8 J
,VVJ K
nullableVVL T
:VVT U
falseVVV [
)VV[ \
,VV\ ]
	SectionIdWW 
=WW 
tableWW  %
.WW% &
ColumnWW& ,
<WW, -
GuidWW- 1
>WW1 2
(WW2 3
typeWW3 7
:WW7 8
$strWW9 K
,WWK L
nullableWWM U
:WWU V
falseWWW \
)WW\ ]
,WW] ^
	DetailsIdXX 
=XX 
tableXX  %
.XX% &
ColumnXX& ,
<XX, -
GuidXX- 1
>XX1 2
(XX2 3
typeXX3 7
:XX7 8
$strXX9 K
,XXK L
nullableXXM U
:XXU V
falseXXW \
)XX\ ]
,XX] ^
IsCompletedYY 
=YY  !
tableYY" '
.YY' (
ColumnYY( .
<YY. /
boolYY/ 3
>YY3 4
(YY4 5
typeYY5 9
:YY9 :
$strYY; @
,YY@ A
nullableYYB J
:YYJ K
falseYYL Q
)YYQ R
,YYR S
CompletedTimeZZ !
=ZZ" #
tableZZ$ )
.ZZ) *
ColumnZZ* 0
<ZZ0 1
DateTimeZZ1 9
>ZZ9 :
(ZZ: ;
typeZZ; ?
:ZZ? @
$strZZA L
,ZZL M
nullableZZN V
:ZZV W
falseZZX ]
)ZZ] ^
}[[ 
,[[ 
constraints\\ 
:\\ 
table\\ "
=>\\# %
{]] 
table^^ 
.^^ 

PrimaryKey^^ $
(^^$ %
$str^^% :
,^^: ;
x^^< =
=>^^> @
x^^A B
.^^B C
StudentCourseId^^C R
)^^R S
;^^S T
table__ 
.__ 

ForeignKey__ $
(__$ %
name`` 
:`` 
$str`` R
,``R S
columnaa 
:aa 
xaa  !
=>aa" $
xaa% &
.aa& '
StudentCourseIdaa' 6
,aa6 7
principalTablebb &
:bb& '
$strbb( 8
,bb8 9
principalColumncc '
:cc' (
$strcc) -
,cc- .
onDeletedd  
:dd  !
ReferentialActiondd" 3
.dd3 4
Cascadedd4 ;
)dd; <
;dd< =
}ee 
)ee 
;ee 
migrationBuildergg 
.gg 

UpdateDatagg '
(gg' (
tablehh 
:hh 
$strhh $
,hh$ %
	keyColumnii 
:ii 
$strii 
,ii  
keyValuejj 
:jj 
$strjj +
,jj+ ,
columnskk 
:kk 
newkk 
[kk 
]kk 
{kk  
$strkk! 3
,kk3 4
$strkk5 A
,kkA B
$strkkC Q
,kkQ R
$strkkS b
}kkc d
,kkd e
valuesll 
:ll 
newll 
objectll "
[ll" #
]ll# $
{ll% &
$strll' M
,llM N
newllO R
DateTimellS [
(ll[ \
$numll\ `
,ll` a
$numllb c
,llc d
$numlle g
,llg h
$numlli j
,llj k
$numlll n
,lln o
$numllp r
,llr s
$numllt w
,llw x
DateTimeKind	lly Ö
.
llÖ Ü
Utc
llÜ â
)
llâ ä
.
llä ã
AddTicks
llã ì
(
llì î
$num
llî ò
)
llò ô
,
llô ö
$str
llõ Ò
,
llÒ Ú
$str
llÛ ô
}
llö õ
)
llõ ú
;
llú ù
migrationBuildernn 
.nn 

InsertDatann '
(nn' (
tableoo 
:oo 
$stroo '
,oo' (
columnspp 
:pp 
newpp 
[pp 
]pp 
{pp  
$strpp! %
,pp% &
$strpp' 4
,pp4 5
$strpp6 D
,ppD E
$strppF P
,ppP Q
$strppR ]
,pp] ^
$strpp_ l
,ppl m
$strppn }
,pp} ~
$str	pp â
,
ppâ ä
$str
ppã †
,
pp† °
$str
pp¢ ±
,
pp± ≤
$str
pp≥ ¬
,
pp¬ √
$str
ppƒ —
,
pp— “
$str
pp” ﬂ
,
ppﬂ ‡
$str
pp· È
,
ppÈ Í
$str
ppÎ ¯
,
pp¯ ˘
$str
pp˙ à
,
ppà â
$str
ppä ï
,
ppï ñ
$str
ppó §
}
pp• ¶
,
pp¶ ß
valuesqq 
:qq 
newqq 
objectqq "
[qq" #
,qq# $
]qq$ %
{rr 
{ss 
newss 
Guidss 
(ss 
$strss E
)ssE F
,ssF G
$str	ssH Ã
,
ssÃ Õ
$str
ssŒ à
,
ssà â
$str
ssä ö
,
ssö õ
null
ssú †
,
ss† °
null
ss¢ ¶
,
ss¶ ß
$str
ss® Ÿ
,
ssŸ ⁄
$str
ss€ ‰
,
ss‰ Â
$str
ssÊ ˇ
,
ssˇ Ä
$str
ssÅ â
,
ssâ ä
$str
ssã ï
,
ssï ñ
$str
ssó ≥
,
ss≥ ¥
$str
ssµ ¬
,
ss¬ √
$num
ssƒ ≈
,
ss≈ ∆
$str
ss« ﬂ
,
ssﬂ ‡
$str
ss· ˆ
,
ssˆ ˜
null
ss¯ ¸
,
ss¸ ˝
null
ss˛ Ç
}
ssÉ Ñ
,
ssÑ Ö
{tt 
newtt 
Guidtt 
(tt 
$strtt E
)ttE F
,ttF G
$str	ttH ∞
,
tt∞ ±
$str
tt≤ Ï
,
ttÏ Ì
$str
ttÓ ˜
,
tt˜ ¯
null
tt˘ ˝
,
tt˝ ˛
null
ttˇ É
,
ttÉ Ñ
$str
ttÖ ∂
,
tt∂ ∑
$str
tt∏ ¡
,
tt¡ ¬
$str
tt√ ‹
,
tt‹ ›
$str
ttﬁ ˘
,
tt˘ ˙
$str
tt˚ Ö
,
ttÖ Ü
$str
ttá £
,
tt£ §
$str
tt• ≤
,
tt≤ ≥
$num
tt¥ µ
,
ttµ ∂
$str
tt∑ À
,
ttÀ Ã
$str
ttÕ €
,
tt€ ‹
null
tt› ·
,
tt· ‚
null
tt„ Á
}
ttË È
,
ttÈ Í
{uu 
newuu 
Guiduu 
(uu 
$struu E
)uuE F
,uuF G
$str	uuH è
,
uuè ê
$str
uuë À
,
uuÀ Ã
$str
uuÕ ‰
,
uu‰ Â
null
uuÊ Í
,
uuÍ Î
null
uuÏ 
,
uu Ò
$str
uuÚ £
,
uu£ §
$str
uu• Æ
,
uuÆ Ø
$str
uu∞ …
,
uu…  
$str
uuÀ Ì
,
uuÌ Ó
$str
uuÔ ˚
,
uu˚ ¸
$str
uu˝ ô
,
uuô ö
$str
uuõ ®
,
uu® ©
$num
uu™ ´
,
uu´ ¨
$str
uu≠ Õ
,
uuÕ Œ
$str
uuœ Ë
,
uuË È
null
uuÍ Ó
,
uuÓ Ô
null
uu Ù
}
uuı ˆ
,
uuˆ ˜
{vv 
newvv 
Guidvv 
(vv 
$strvv E
)vvE F
,vvF G
$str	vvH ë
,
vvë í
$str
vvì Õ
,
vvÕ Œ
$str
vvœ ·
,
vv· ‚
null
vv„ Á
,
vvÁ Ë
null
vvÈ Ì
,
vvÌ Ó
$str
vvÔ †
,
vv† °
$str
vv¢ ´
,
vv´ ¨
$str
vv≠ ∆
,
vv∆ «
$str
vv» Ê
,
vvÊ Á
$str
vvË Ô
,
vvÔ 
$str
vvÒ ç
,
vvç é
$str
vvè ú
,
vvú ù
$num
vvû ü
,
vvü †
$str
vv° ø
,
vvø ¿
$str
vv¡ Â
,
vvÂ Ê
null
vvÁ Î
,
vvÎ Ï
null
vvÌ Ò
}
vvÚ Û
,
vvÛ Ù
{ww 
newww 
Guidww 
(ww 
$strww E
)wwE F
,wwF G
$strwwH s
,wws t
$str	wwu ô
,
wwô ö
$str
wwõ •
,
ww• ¶
null
wwß ´
,
ww´ ¨
null
ww≠ ±
,
ww± ≤
$str
ww≥ ˘
,
ww˘ ˙
$str
ww˚ Ñ
,
wwÑ Ö
$str
wwÜ ü
,
wwü †
$str
ww° Œ
,
wwŒ œ
$str
ww– ‹
,
ww‹ ›
$str
wwﬁ ˙
,
ww˙ ˚
$str
ww¸ â
,
wwâ ä
$num
wwã å
,
wwå ç
$str
wwé ª
,
wwª º
$str
wwΩ ›
,
ww› ﬁ
null
wwﬂ „
,
ww„ ‰
null
wwÂ È
}
wwÍ Î
,
wwÎ Ï
{xx 
newxx 
Guidxx 
(xx 
$strxx E
)xxE F
,xxF G
$str	xxH è
,
xxè ê
$str
xxë À
,
xxÀ Ã
$str
xxÕ ‰
,
xx‰ Â
null
xxÊ Í
,
xxÍ Î
null
xxÏ 
,
xx Ò
$str
xxÚ £
,
xx£ §
$str
xx• Æ
,
xxÆ Ø
$str
xx∞ …
,
xx…  
$str
xxÀ Ò
,
xxÒ Ú
$str
xxÛ ¸
,
xx¸ ˝
$str
xx˛ ö
,
xxö õ
$str
xxú ©
,
xx© ™
$num
xx´ ¨
,
xx¨ ≠
$str
xxÆ Œ
,
xxŒ œ
$str
xx– Ë
,
xxË È
null
xxÍ Ó
,
xxÓ Ô
null
xx Ù
}
xxı ˆ
,
xxˆ ˜
{yy 
newyy 
Guidyy 
(yy 
$stryy E
)yyE F
,yyF G
$str	yyH ”
,
yy” ‘
$str
yy’ è
,
yyè ê
$str
yyë ô
,
yyô ö
null
yyõ ü
,
yyü †
null
yy° •
,
yy• ¶
$str
yyß ÿ
,
yyÿ Ÿ
$str
yy⁄ „
,
yy„ ‰
$str
yyÂ °
,
yy° ¢
$str
yy£ ∑
,
yy∑ ∏
$str
yyπ √
,
yy√ ƒ
$str
yy≈ ·
,
yy· ‚
$str
yy„ 
,
yy Ò
$num
yyÚ Û
,
yyÛ Ù
$str
yyı ñ
,
yyñ ó
$str
yyò π
,
yyπ ∫
null
yyª ø
,
yyø ¿
null
yy¡ ≈
}
yy∆ «
,
yy« »
{zz 
newzz 
Guidzz 
(zz 
$strzz E
)zzE F
,zzF G
$str	zzH æ
,
zzæ ø
$str
zz¿ ù
,
zzù û
$str
zzü ©
,
zz© ™
null
zz´ Ø
,
zzØ ∞
null
zz± µ
,
zzµ ∂
$str
zz∑ ˚
,
zz˚ ¸
$str
zz˝ Ü
,
zzÜ á
$str
zzà ≠
,
zz≠ Æ
$str
zzØ ’
,
zz’ ÷
$str
zz◊ ·
,
zz· ‚
$str
zz„ ˇ
,
zzˇ Ä
$str
zzÅ é
,
zzé è
$num
zzê ë
,
zzë í
$str
zzì ®
,
zz® ©
$str
zz™ ø
,
zzø ¿
null
zz¡ ≈
,
zz≈ ∆
null
zz« À
}
zzÃ Õ
,
zzÕ Œ
{{{ 
new{{ 
Guid{{ 
({{ 
$str{{ E
){{E F
,{{F G
$str	{{H è
,
{{è ê
$str
{{ë ∫
,
{{∫ ª
$str
{{º  
,
{{  À
null
{{Ã –
,
{{– —
null
{{“ ÷
,
{{÷ ◊
$str
{{ÿ â
,
{{â ä
$str
{{ã î
,
{{î ï
$str
{{ñ ¢
,
{{¢ £
$str
{{§ ¥
,
{{¥ µ
$str
{{∂ ¿
,
{{¿ ¡
$str
{{¬ ÿ
,
{{ÿ Ÿ
$str
{{⁄ Ê
,
{{Ê Á
$num
{{Ë È
,
{{È Í
$str
{{Î ¸
,
{{¸ ˝
$str
{{˛ ì
,
{{ì î
null
{{ï ô
,
{{ô ö
null
{{õ ü
}
{{† °
,
{{° ¢
{|| 
new|| 
Guid|| 
(|| 
$str|| E
)||E F
,||F G
$str	||H ®
,
||® ©
$str
||™ ÿ
,
||ÿ Ÿ
$str
||⁄ ‰
,
||‰ Â
null
||Ê Í
,
||Í Î
null
||Ï 
,
|| Ò
$str
||Ú £
,
||£ §
$str
||• Æ
,
||Æ Ø
$str
||∞  
,
||  À
$str
||Ã Û
,
||Û Ù
$str
||ı ˇ
,
||ˇ Ä
$str
||Å ù
,
||ù û
$str
||ü ¨
,
||¨ ≠
$num
||Æ Ø
,
||Ø ∞
$str
||± ∆
,
||∆ «
$str
||» ÿ
,
||ÿ Ÿ
null
||⁄ ﬁ
,
||ﬁ ﬂ
null
||‡ ‰
}
||Â Ê
,
||Ê Á
{}} 
new}} 
Guid}} 
(}} 
$str}} E
)}}E F
,}}F G
$str	}}H û
,
}}û ü
$str
}}† ≈
,
}}≈ ∆
$str
}}« œ
,
}}œ –
null
}}— ’
,
}}’ ÷
null
}}◊ €
,
}}€ ‹
$str
}}› é
,
}}é è
$str
}}ê ô
,
}}ô ö
$str
}}õ µ
,
}}µ ∂
$str
}}∑ œ
,
}}œ –
$str
}}— €
,
}}€ ‹
$str
}}› ˘
,
}}˘ ˙
$str
}}˚ à
,
}}à â
$num
}}ä ã
,
}}ã å
$str
}}ç ¢
,
}}¢ £
$str
}}§ µ
,
}}µ ∂
null
}}∑ ª
,
}}ª º
null
}}Ω ¡
}
}}¬ √
,
}}√ ƒ
{~~ 
new~~ 
Guid~~ 
(~~ 
$str~~ E
)~~E F
,~~F G
$str	~~H ë
,
~~ë í
$str
~~ì Õ
,
~~Õ Œ
$str
~~œ ·
,
~~· ‚
null
~~„ Á
,
~~Á Ë
null
~~È Ì
,
~~Ì Ó
$str
~~Ô †
,
~~† °
$str
~~¢ ´
,
~~´ ¨
$str
~~≠ ∆
,
~~∆ «
$str
~~» –
,
~~– —
$str
~~“ ‹
,
~~‹ ›
$str
~~ﬁ ˙
,
~~˙ ˚
$str
~~¸ â
,
~~â ä
$num
~~ã å
,
~~å ç
$str
~~é π
,
~~π ∫
$str
~~ª “
,
~~“ ”
null
~~‘ ÿ
,
~~ÿ Ÿ
null
~~⁄ ﬁ
}
~~ﬂ ‡
,
~~‡ ·
{ 
new 
Guid 
( 
$str E
)E F
,F G
$str	H Ñ
,
Ñ Ö
$str
Ü ¿
,
¿ ¡
$str
¬ “
,
“ ”
null
‘ ÿ
,
ÿ Ÿ
null
⁄ ﬁ
,
ﬁ ﬂ
$str
‡ ë
,
ë í
$str
ì ú
,
ú ù
$str
û ∑
,
∑ ∏
$str
π ¡
,
¡ ¬
$str
√ Õ
,
Õ Œ
$str
œ Î
,
Î Ï
$str
Ì ˙
,
˙ ˚
$num
¸ ˝
,
˝ ˛
$str
ˇ ê
,
ê ë
$str
í °
,
° ¢
null
£ ß
,
ß ®
null
© ≠
}
Æ Ø
}
ÄÄ 
)
ÄÄ 
;
ÄÄ 
}
ÅÅ 	
	protected
ÑÑ 
override
ÑÑ 
void
ÑÑ 
Down
ÑÑ  $
(
ÑÑ$ %
MigrationBuilder
ÑÑ% 5
migrationBuilder
ÑÑ6 F
)
ÑÑF G
{
ÖÖ 	
migrationBuilder
ÜÜ 
.
ÜÜ 
	DropTable
ÜÜ &
(
ÜÜ& '
name
áá 
:
áá 
$str
áá (
)
áá( )
;
áá) *
migrationBuilder
ââ 
.
ââ 

DeleteData
ââ '
(
ââ' (
table
ää 
:
ää 
$str
ää '
,
ää' (
	keyColumn
ãã 
:
ãã 
$str
ãã 
,
ãã  
keyValue
åå 
:
åå 
new
åå 
Guid
åå "
(
åå" #
$str
åå# I
)
ååI J
)
ååJ K
;
ååK L
migrationBuilder
éé 
.
éé 

DeleteData
éé '
(
éé' (
table
èè 
:
èè 
$str
èè '
,
èè' (
	keyColumn
êê 
:
êê 
$str
êê 
,
êê  
keyValue
ëë 
:
ëë 
new
ëë 
Guid
ëë "
(
ëë" #
$str
ëë# I
)
ëëI J
)
ëëJ K
;
ëëK L
migrationBuilder
ìì 
.
ìì 

DeleteData
ìì '
(
ìì' (
table
îî 
:
îî 
$str
îî '
,
îî' (
	keyColumn
ïï 
:
ïï 
$str
ïï 
,
ïï  
keyValue
ññ 
:
ññ 
new
ññ 
Guid
ññ "
(
ññ" #
$str
ññ# I
)
ññI J
)
ññJ K
;
ññK L
migrationBuilder
òò 
.
òò 

DeleteData
òò '
(
òò' (
table
ôô 
:
ôô 
$str
ôô '
,
ôô' (
	keyColumn
öö 
:
öö 
$str
öö 
,
öö  
keyValue
õõ 
:
õõ 
new
õõ 
Guid
õõ "
(
õõ" #
$str
õõ# I
)
õõI J
)
õõJ K
;
õõK L
migrationBuilder
ùù 
.
ùù 

DeleteData
ùù '
(
ùù' (
table
ûû 
:
ûû 
$str
ûû '
,
ûû' (
	keyColumn
üü 
:
üü 
$str
üü 
,
üü  
keyValue
†† 
:
†† 
new
†† 
Guid
†† "
(
††" #
$str
††# I
)
††I J
)
††J K
;
††K L
migrationBuilder
¢¢ 
.
¢¢ 

DeleteData
¢¢ '
(
¢¢' (
table
££ 
:
££ 
$str
££ '
,
££' (
	keyColumn
§§ 
:
§§ 
$str
§§ 
,
§§  
keyValue
•• 
:
•• 
new
•• 
Guid
•• "
(
••" #
$str
••# I
)
••I J
)
••J K
;
••K L
migrationBuilder
ßß 
.
ßß 

DeleteData
ßß '
(
ßß' (
table
®® 
:
®® 
$str
®® '
,
®®' (
	keyColumn
©© 
:
©© 
$str
©© 
,
©©  
keyValue
™™ 
:
™™ 
new
™™ 
Guid
™™ "
(
™™" #
$str
™™# I
)
™™I J
)
™™J K
;
™™K L
migrationBuilder
¨¨ 
.
¨¨ 

DeleteData
¨¨ '
(
¨¨' (
table
≠≠ 
:
≠≠ 
$str
≠≠ '
,
≠≠' (
	keyColumn
ÆÆ 
:
ÆÆ 
$str
ÆÆ 
,
ÆÆ  
keyValue
ØØ 
:
ØØ 
new
ØØ 
Guid
ØØ "
(
ØØ" #
$str
ØØ# I
)
ØØI J
)
ØØJ K
;
ØØK L
migrationBuilder
±± 
.
±± 

DeleteData
±± '
(
±±' (
table
≤≤ 
:
≤≤ 
$str
≤≤ '
,
≤≤' (
	keyColumn
≥≥ 
:
≥≥ 
$str
≥≥ 
,
≥≥  
keyValue
¥¥ 
:
¥¥ 
new
¥¥ 
Guid
¥¥ "
(
¥¥" #
$str
¥¥# I
)
¥¥I J
)
¥¥J K
;
¥¥K L
migrationBuilder
∂∂ 
.
∂∂ 

DeleteData
∂∂ '
(
∂∂' (
table
∑∑ 
:
∑∑ 
$str
∑∑ '
,
∑∑' (
	keyColumn
∏∏ 
:
∏∏ 
$str
∏∏ 
,
∏∏  
keyValue
ππ 
:
ππ 
new
ππ 
Guid
ππ "
(
ππ" #
$str
ππ# I
)
ππI J
)
ππJ K
;
ππK L
migrationBuilder
ªª 
.
ªª 

DeleteData
ªª '
(
ªª' (
table
ºº 
:
ºº 
$str
ºº '
,
ºº' (
	keyColumn
ΩΩ 
:
ΩΩ 
$str
ΩΩ 
,
ΩΩ  
keyValue
ææ 
:
ææ 
new
ææ 
Guid
ææ "
(
ææ" #
$str
ææ# I
)
ææI J
)
ææJ K
;
ææK L
migrationBuilder
¿¿ 
.
¿¿ 

DeleteData
¿¿ '
(
¿¿' (
table
¡¡ 
:
¡¡ 
$str
¡¡ '
,
¡¡' (
	keyColumn
¬¬ 
:
¬¬ 
$str
¬¬ 
,
¬¬  
keyValue
√√ 
:
√√ 
new
√√ 
Guid
√√ "
(
√√" #
$str
√√# I
)
√√I J
)
√√J K
;
√√K L
migrationBuilder
≈≈ 
.
≈≈ 

DeleteData
≈≈ '
(
≈≈' (
table
∆∆ 
:
∆∆ 
$str
∆∆ '
,
∆∆' (
	keyColumn
«« 
:
«« 
$str
«« 
,
««  
keyValue
»» 
:
»» 
new
»» 
Guid
»» "
(
»»" #
$str
»»# I
)
»»I J
)
»»J K
;
»»K L
migrationBuilder
   
.
   

UpdateData
   '
(
  ' (
table
ÀÀ 
:
ÀÀ 
$str
ÀÀ $
,
ÀÀ$ %
	keyColumn
ÃÃ 
:
ÃÃ 
$str
ÃÃ 
,
ÃÃ  
keyValue
ÕÕ 
:
ÕÕ 
$str
ÕÕ +
,
ÕÕ+ ,
columns
ŒŒ 
:
ŒŒ 
new
ŒŒ 
[
ŒŒ 
]
ŒŒ 
{
ŒŒ  
$str
ŒŒ! 3
,
ŒŒ3 4
$str
ŒŒ5 A
,
ŒŒA B
$str
ŒŒC Q
,
ŒŒQ R
$str
ŒŒS b
}
ŒŒc d
,
ŒŒd e
values
œœ 
:
œœ 
new
œœ 
object
œœ "
[
œœ" #
]
œœ# $
{
œœ% &
$str
œœ' M
,
œœM N
new
œœO R
DateTime
œœS [
(
œœ[ \
$num
œœ\ `
,
œœ` a
$num
œœb c
,
œœc d
$num
œœe g
,
œœg h
$num
œœi k
,
œœk l
$num
œœm o
,
œœo p
$num
œœq s
,
œœs t
$num
œœu x
,
œœx y
DateTimeKindœœz Ü
.œœÜ á
Utcœœá ä
)œœä ã
.œœã å
AddTicksœœå î
(œœî ï
$numœœï ô
)œœô ö
,œœö õ
$strœœú Ú
,œœÚ Û
$strœœÙ ö
}œœõ ú
)œœú ù
;œœù û
migrationBuilder
—— 
.
—— 

InsertData
—— '
(
——' (
table
““ 
:
““ 
$str
““ '
,
““' (
columns
”” 
:
”” 
new
”” 
[
”” 
]
”” 
{
””  
$str
””! %
,
””% &
$str
””' 4
,
””4 5
$str
””6 D
,
””D E
$str
””F P
,
””P Q
$str
””R ]
,
””] ^
$str
””_ l
,
””l m
$str
””n }
,
””} ~
$str”” â
,””â ä
$str””ã †
,””† °
$str””¢ ±
,””± ≤
$str””≥ ¬
,””¬ √
$str””ƒ —
,””— “
$str””” ﬂ
,””ﬂ ‡
$str””· È
,””È Í
$str””Î ¯
,””¯ ˘
$str””˙ à
,””à â
$str””ä ï
,””ï ñ
$str””ó §
}””• ¶
,””¶ ß
values
‘‘ 
:
‘‘ 
new
‘‘ 
object
‘‘ "
[
‘‘" #
,
‘‘# $
]
‘‘$ %
{
’’ 
{
÷÷ 
new
÷÷ 
Guid
÷÷ 
(
÷÷ 
$str
÷÷ E
)
÷÷E F
,
÷÷F G
$str÷÷H ë
,÷÷ë í
$str÷÷ì Õ
,÷÷Õ Œ
$str÷÷œ ·
,÷÷· ‚
null÷÷„ Á
,÷÷Á Ë
null÷÷È Ì
,÷÷Ì Ó
$str÷÷Ô †
,÷÷† °
$str÷÷¢ ´
,÷÷´ ¨
$str÷÷≠ ∆
,÷÷∆ «
$str÷÷» –
,÷÷– —
$str÷÷“ ‹
,÷÷‹ ›
$str÷÷ﬁ ˙
,÷÷˙ ˚
$str÷÷¸ â
,÷÷â ä
$num÷÷ã å
,÷÷å ç
$str÷÷é π
,÷÷π ∫
$str÷÷ª “
,÷÷“ ”
null÷÷‘ ÿ
,÷÷ÿ Ÿ
null÷÷⁄ ﬁ
}÷÷ﬂ ‡
,÷÷‡ ·
{
◊◊ 
new
◊◊ 
Guid
◊◊ 
(
◊◊ 
$str
◊◊ E
)
◊◊E F
,
◊◊F G
$str◊◊H è
,◊◊è ê
$str◊◊ë À
,◊◊À Ã
$str◊◊Õ ‰
,◊◊‰ Â
null◊◊Ê Í
,◊◊Í Î
null◊◊Ï 
,◊◊ Ò
$str◊◊Ú £
,◊◊£ §
$str◊◊• Æ
,◊◊Æ Ø
$str◊◊∞ …
,◊◊…  
$str◊◊À Ò
,◊◊Ò Ú
$str◊◊Û ¸
,◊◊¸ ˝
$str◊◊˛ ö
,◊◊ö õ
$str◊◊ú ©
,◊◊© ™
$num◊◊´ ¨
,◊◊¨ ≠
$str◊◊Æ Œ
,◊◊Œ œ
$str◊◊– Ë
,◊◊Ë È
null◊◊Í Ó
,◊◊Ó Ô
null◊◊ Ù
}◊◊ı ˆ
,◊◊ˆ ˜
{
ÿÿ 
new
ÿÿ 
Guid
ÿÿ 
(
ÿÿ 
$str
ÿÿ E
)
ÿÿE F
,
ÿÿF G
$strÿÿH æ
,ÿÿæ ø
$strÿÿ¿ ù
,ÿÿù û
$strÿÿü ©
,ÿÿ© ™
nullÿÿ´ Ø
,ÿÿØ ∞
nullÿÿ± µ
,ÿÿµ ∂
$strÿÿ∑ ˚
,ÿÿ˚ ¸
$strÿÿ˝ Ü
,ÿÿÜ á
$strÿÿà ≠
,ÿÿ≠ Æ
$strÿÿØ ’
,ÿÿ’ ÷
$strÿÿ◊ ·
,ÿÿ· ‚
$strÿÿ„ ˇ
,ÿÿˇ Ä
$strÿÿÅ é
,ÿÿé è
$numÿÿê ë
,ÿÿë í
$strÿÿì ®
,ÿÿ® ©
$strÿÿ™ ø
,ÿÿø ¿
nullÿÿ¡ ≈
,ÿÿ≈ ∆
nullÿÿ« À
}ÿÿÃ Õ
,ÿÿÕ Œ
{
ŸŸ 
new
ŸŸ 
Guid
ŸŸ 
(
ŸŸ 
$str
ŸŸ E
)
ŸŸE F
,
ŸŸF G
$strŸŸH ë
,ŸŸë í
$strŸŸì Õ
,ŸŸÕ Œ
$strŸŸœ ·
,ŸŸ· ‚
nullŸŸ„ Á
,ŸŸÁ Ë
nullŸŸÈ Ì
,ŸŸÌ Ó
$strŸŸÔ †
,ŸŸ† °
$strŸŸ¢ ´
,ŸŸ´ ¨
$strŸŸ≠ ∆
,ŸŸ∆ «
$strŸŸ» Ê
,ŸŸÊ Á
$strŸŸË Ô
,ŸŸÔ 
$strŸŸÒ ç
,ŸŸç é
$strŸŸè ú
,ŸŸú ù
$numŸŸû ü
,ŸŸü †
$strŸŸ° ø
,ŸŸø ¿
$strŸŸ¡ Â
,ŸŸÂ Ê
nullŸŸÁ Î
,ŸŸÎ Ï
nullŸŸÌ Ò
}ŸŸÚ Û
,ŸŸÛ Ù
{
⁄⁄ 
new
⁄⁄ 
Guid
⁄⁄ 
(
⁄⁄ 
$str
⁄⁄ E
)
⁄⁄E F
,
⁄⁄F G
$str⁄⁄H è
,⁄⁄è ê
$str⁄⁄ë À
,⁄⁄À Ã
$str⁄⁄Õ ‰
,⁄⁄‰ Â
null⁄⁄Ê Í
,⁄⁄Í Î
null⁄⁄Ï 
,⁄⁄ Ò
$str⁄⁄Ú £
,⁄⁄£ §
$str⁄⁄• Æ
,⁄⁄Æ Ø
$str⁄⁄∞ …
,⁄⁄…  
$str⁄⁄À Ì
,⁄⁄Ì Ó
$str⁄⁄Ô ˚
,⁄⁄˚ ¸
$str⁄⁄˝ ô
,⁄⁄ô ö
$str⁄⁄õ ®
,⁄⁄® ©
$num⁄⁄™ ´
,⁄⁄´ ¨
$str⁄⁄≠ Õ
,⁄⁄Õ Œ
$str⁄⁄œ Ë
,⁄⁄Ë È
null⁄⁄Í Ó
,⁄⁄Ó Ô
null⁄⁄ Ù
}⁄⁄ı ˆ
,⁄⁄ˆ ˜
{
€€ 
new
€€ 
Guid
€€ 
(
€€ 
$str
€€ E
)
€€E F
,
€€F G
$str€€H Ã
,€€Ã Õ
$str€€Œ à
,€€à â
$str€€ä ö
,€€ö õ
null€€ú †
,€€† °
null€€¢ ¶
,€€¶ ß
$str€€® Ÿ
,€€Ÿ ⁄
$str€€€ ‰
,€€‰ Â
$str€€Ê ˇ
,€€ˇ Ä
$str€€Å â
,€€â ä
$str€€ã ï
,€€ï ñ
$str€€ó ≥
,€€≥ ¥
$str€€µ ¬
,€€¬ √
$num€€ƒ ≈
,€€≈ ∆
$str€€« ﬂ
,€€ﬂ ‡
$str€€· ˆ
,€€ˆ ˜
null€€¯ ¸
,€€¸ ˝
null€€˛ Ç
}€€É Ñ
,€€Ñ Ö
{
‹‹ 
new
‹‹ 
Guid
‹‹ 
(
‹‹ 
$str
‹‹ E
)
‹‹E F
,
‹‹F G
$str‹‹H ®
,‹‹® ©
$str‹‹™ ÿ
,‹‹ÿ Ÿ
$str‹‹⁄ ‰
,‹‹‰ Â
null‹‹Ê Í
,‹‹Í Î
null‹‹Ï 
,‹‹ Ò
$str‹‹Ú £
,‹‹£ §
$str‹‹• Æ
,‹‹Æ Ø
$str‹‹∞  
,‹‹  À
$str‹‹Ã Û
,‹‹Û Ù
$str‹‹ı ˇ
,‹‹ˇ Ä
$str‹‹Å ù
,‹‹ù û
$str‹‹ü ¨
,‹‹¨ ≠
$num‹‹Æ Ø
,‹‹Ø ∞
$str‹‹± ∆
,‹‹∆ «
$str‹‹» ÿ
,‹‹ÿ Ÿ
null‹‹⁄ ﬁ
,‹‹ﬁ ﬂ
null‹‹‡ ‰
}‹‹Â Ê
,‹‹Ê Á
{
›› 
new
›› 
Guid
›› 
(
›› 
$str
›› E
)
››E F
,
››F G
$str
››H s
,
››s t
$str››u ô
,››ô ö
$str››õ •
,››• ¶
null››ß ´
,››´ ¨
null››≠ ±
,››± ≤
$str››≥ ˘
,››˘ ˙
$str››˚ Ñ
,››Ñ Ö
$str››Ü ü
,››ü †
$str››° Œ
,››Œ œ
$str››– ‹
,››‹ ›
$str››ﬁ ˙
,››˙ ˚
$str››¸ â
,››â ä
$num››ã å
,››å ç
$str››é ª
,››ª º
$str››Ω ›
,››› ﬁ
null››ﬂ „
,››„ ‰
null››Â È
}››Í Î
,››Î Ï
{
ﬁﬁ 
new
ﬁﬁ 
Guid
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ E
)
ﬁﬁE F
,
ﬁﬁF G
$strﬁﬁH ∞
,ﬁﬁ∞ ±
$strﬁﬁ≤ Ï
,ﬁﬁÏ Ì
$strﬁﬁÓ ˜
,ﬁﬁ˜ ¯
nullﬁﬁ˘ ˝
,ﬁﬁ˝ ˛
nullﬁﬁˇ É
,ﬁﬁÉ Ñ
$strﬁﬁÖ ∂
,ﬁﬁ∂ ∑
$strﬁﬁ∏ ¡
,ﬁﬁ¡ ¬
$strﬁﬁ√ ‹
,ﬁﬁ‹ ›
$strﬁﬁﬁ ˘
,ﬁﬁ˘ ˙
$strﬁﬁ˚ Ö
,ﬁﬁÖ Ü
$strﬁﬁá £
,ﬁﬁ£ §
$strﬁﬁ• ≤
,ﬁﬁ≤ ≥
$numﬁﬁ¥ µ
,ﬁﬁµ ∂
$strﬁﬁ∑ À
,ﬁﬁÀ Ã
$strﬁﬁÕ €
,ﬁﬁ€ ‹
nullﬁﬁ› ·
,ﬁﬁ· ‚
nullﬁﬁ„ Á
}ﬁﬁË È
,ﬁﬁÈ Í
{
ﬂﬂ 
new
ﬂﬂ 
Guid
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ E
)
ﬂﬂE F
,
ﬂﬂF G
$strﬂﬂH Ñ
,ﬂﬂÑ Ö
$strﬂﬂÜ ¿
,ﬂﬂ¿ ¡
$strﬂﬂ¬ “
,ﬂﬂ“ ”
nullﬂﬂ‘ ÿ
,ﬂﬂÿ Ÿ
nullﬂﬂ⁄ ﬁ
,ﬂﬂﬁ ﬂ
$strﬂﬂ‡ ë
,ﬂﬂë í
$strﬂﬂì ú
,ﬂﬂú ù
$strﬂﬂû ∑
,ﬂﬂ∑ ∏
$strﬂﬂπ ¡
,ﬂﬂ¡ ¬
$strﬂﬂ√ Õ
,ﬂﬂÕ Œ
$strﬂﬂœ Î
,ﬂﬂÎ Ï
$strﬂﬂÌ ˙
,ﬂﬂ˙ ˚
$numﬂﬂ¸ ˝
,ﬂﬂ˝ ˛
$strﬂﬂˇ ê
,ﬂﬂê ë
$strﬂﬂí °
,ﬂﬂ° ¢
nullﬂﬂ£ ß
,ﬂﬂß ®
nullﬂﬂ© ≠
}ﬂﬂÆ Ø
,ﬂﬂØ ∞
{
‡‡ 
new
‡‡ 
Guid
‡‡ 
(
‡‡ 
$str
‡‡ E
)
‡‡E F
,
‡‡F G
$str‡‡H ”
,‡‡” ‘
$str‡‡’ è
,‡‡è ê
$str‡‡ë ô
,‡‡ô ö
null‡‡õ ü
,‡‡ü †
null‡‡° •
,‡‡• ¶
$str‡‡ß ÿ
,‡‡ÿ Ÿ
$str‡‡⁄ „
,‡‡„ ‰
$str‡‡Â °
,‡‡° ¢
$str‡‡£ ∑
,‡‡∑ ∏
$str‡‡π √
,‡‡√ ƒ
$str‡‡≈ ·
,‡‡· ‚
$str‡‡„ 
,‡‡ Ò
$num‡‡Ú Û
,‡‡Û Ù
$str‡‡ı ñ
,‡‡ñ ó
$str‡‡ò π
,‡‡π ∫
null‡‡ª ø
,‡‡ø ¿
null‡‡¡ ≈
}‡‡∆ «
,‡‡« »
{
·· 
new
·· 
Guid
·· 
(
·· 
$str
·· E
)
··E F
,
··F G
$str··H û
,··û ü
$str··† ≈
,··≈ ∆
$str··« œ
,··œ –
null··— ’
,··’ ÷
null··◊ €
,··€ ‹
$str··› é
,··é è
$str··ê ô
,··ô ö
$str··õ µ
,··µ ∂
$str··∑ œ
,··œ –
$str··— €
,··€ ‹
$str··› ˘
,··˘ ˙
$str··˚ à
,··à â
$num··ä ã
,··ã å
$str··ç ¢
,··¢ £
$str··§ µ
,··µ ∂
null··∑ ª
,··ª º
null··Ω ¡
}··¬ √
,··√ ƒ
{
‚‚ 
new
‚‚ 
Guid
‚‚ 
(
‚‚ 
$str
‚‚ E
)
‚‚E F
,
‚‚F G
$str‚‚H è
,‚‚è ê
$str‚‚ë ∫
,‚‚∫ ª
$str‚‚º  
,‚‚  À
null‚‚Ã –
,‚‚– —
null‚‚“ ÷
,‚‚÷ ◊
$str‚‚ÿ â
,‚‚â ä
$str‚‚ã î
,‚‚î ï
$str‚‚ñ ¢
,‚‚¢ £
$str‚‚§ ¥
,‚‚¥ µ
$str‚‚∂ ¿
,‚‚¿ ¡
$str‚‚¬ ÿ
,‚‚ÿ Ÿ
$str‚‚⁄ Ê
,‚‚Ê Á
$num‚‚Ë È
,‚‚È Í
$str‚‚Î ¸
,‚‚¸ ˝
$str‚‚˛ ì
,‚‚ì î
null‚‚ï ô
,‚‚ô ö
null‚‚õ ü
}‚‚† °
}
„„ 
)
„„ 
;
„„ 
}
‰‰ 	
}
ÂÂ 
}ÊÊ ‘¡
ÑD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240720105818_AddTableCourseBookmark.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class "
AddTableCourseBookmark /
:0 1
	Migration2 ;
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 
CreateTableQQ (
(QQ( )
nameRR 
:RR 
$strRR '
,RR' (
columnsSS 
:SS 
tableSS 
=>SS !
newSS" %
{TT 
IdUU 
=UU 
tableUU 
.UU 
ColumnUU %
<UU% &
GuidUU& *
>UU* +
(UU+ ,
typeUU, 0
:UU0 1
$strUU2 D
,UUD E
nullableUUF N
:UUN O
falseUUP U
)UUU V
,UUV W
	StudentIdVV 
=VV 
tableVV  %
.VV% &
ColumnVV& ,
<VV, -
GuidVV- 1
>VV1 2
(VV2 3
typeVV3 7
:VV7 8
$strVV9 K
,VVK L
nullableVVM U
:VVU V
falseVVW \
)VV\ ]
,VV] ^
CourseIdWW 
=WW 
tableWW $
.WW$ %
ColumnWW% +
<WW+ ,
GuidWW, 0
>WW0 1
(WW1 2
typeWW2 6
:WW6 7
$strWW8 J
,WWJ K
nullableWWL T
:WWT U
falseWWV [
)WW[ \
,WW\ ]
	CreatedByXX 
=XX 
tableXX  %
.XX% &
ColumnXX& ,
<XX, -
stringXX- 3
>XX3 4
(XX4 5
typeXX5 9
:XX9 :
$strXX; J
,XXJ K
nullableXXL T
:XXT U
trueXXV Z
)XXZ [
,XX[ \
CreatedTimeYY 
=YY  !
tableYY" '
.YY' (
ColumnYY( .
<YY. /
DateTimeYY/ 7
>YY7 8
(YY8 9
typeYY9 =
:YY= >
$strYY? J
,YYJ K
nullableYYL T
:YYT U
trueYYV Z
)YYZ [
,YY[ \
	UpdatedByZZ 
=ZZ 
tableZZ  %
.ZZ% &
ColumnZZ& ,
<ZZ, -
stringZZ- 3
>ZZ3 4
(ZZ4 5
typeZZ5 9
:ZZ9 :
$strZZ; J
,ZZJ K
nullableZZL T
:ZZT U
trueZZV Z
)ZZZ [
,ZZ[ \
UpdatedTime[[ 
=[[  !
table[[" '
.[[' (
Column[[( .
<[[. /
DateTime[[/ 7
>[[7 8
([[8 9
type[[9 =
:[[= >
$str[[? J
,[[J K
nullable[[L T
:[[T U
true[[V Z
)[[Z [
,[[[ \
Status\\ 
=\\ 
table\\ "
.\\" #
Column\\# )
<\\) *
int\\* -
>\\- .
(\\. /
type\\/ 3
:\\3 4
$str\\5 :
,\\: ;
nullable\\< D
:\\D E
false\\F K
)\\K L
}]] 
,]] 
constraints^^ 
:^^ 
table^^ "
=>^^# %
{__ 
table`` 
.`` 

PrimaryKey`` $
(``$ %
$str``% 9
,``9 :
x``; <
=>``= ?
x``@ A
.``A B
Id``B D
)``D E
;``E F
tableaa 
.aa 

ForeignKeyaa $
(aa$ %
namebb 
:bb 
$strbb E
,bbE F
columncc 
:cc 
xcc  !
=>cc" $
xcc% &
.cc& '
	StudentIdcc' 0
,cc0 1
principalTabledd &
:dd& '
$strdd( 2
,dd2 3
principalColumnee '
:ee' (
$stree) 4
,ee4 5
onDeleteff  
:ff  !
ReferentialActionff" 3
.ff3 4
Cascadeff4 ;
)ff; <
;ff< =
}gg 
)gg 
;gg 
migrationBuilderii 
.ii 

UpdateDataii '
(ii' (
tablejj 
:jj 
$strjj $
,jj$ %
	keyColumnkk 
:kk 
$strkk 
,kk  
keyValuell 
:ll 
$strll +
,ll+ ,
columnsmm 
:mm 
newmm 
[mm 
]mm 
{mm  
$strmm! 3
,mm3 4
$strmm5 A
,mmA B
$strmmC Q
,mmQ R
$strmmS b
}mmc d
,mmd e
valuesnn 
:nn 
newnn 
objectnn "
[nn" #
]nn# $
{nn% &
$strnn' M
,nnM N
newnnO R
DateTimennS [
(nn[ \
$numnn\ `
,nn` a
$numnnb c
,nnc d
$numnne g
,nng h
$numnni k
,nnk l
$numnnm o
,nno p
$numnnq s
,nns t
$numnnu x
,nnx y
DateTimeKind	nnz Ü
.
nnÜ á
Utc
nná ä
)
nnä ã
.
nnã å
AddTicks
nnå î
(
nnî ï
$num
nnï ô
)
nnô ö
,
nnö õ
$str
nnú Ú
,
nnÚ Û
$str
nnÙ ö
}
nnõ ú
)
nnú ù
;
nnù û
migrationBuilderpp 
.pp 

InsertDatapp '
(pp' (
tableqq 
:qq 
$strqq '
,qq' (
columnsrr 
:rr 
newrr 
[rr 
]rr 
{rr  
$strrr! %
,rr% &
$strrr' 4
,rr4 5
$strrr6 D
,rrD E
$strrrF P
,rrP Q
$strrrR ]
,rr] ^
$strrr_ l
,rrl m
$strrrn }
,rr} ~
$str	rr â
,
rrâ ä
$str
rrã †
,
rr† °
$str
rr¢ ±
,
rr± ≤
$str
rr≥ ¬
,
rr¬ √
$str
rrƒ —
,
rr— “
$str
rr” ﬂ
,
rrﬂ ‡
$str
rr· È
,
rrÈ Í
$str
rrÎ ¯
,
rr¯ ˘
$str
rr˙ à
,
rrà â
$str
rrä ï
,
rrï ñ
$str
rró §
}
rr• ¶
,
rr¶ ß
valuesss 
:ss 
newss 
objectss "
[ss" #
,ss# $
]ss$ %
{tt 
{uu 
newuu 
Guiduu 
(uu 
$struu E
)uuE F
,uuF G
$str	uuH ë
,
uuë í
$str
uuì Õ
,
uuÕ Œ
$str
uuœ ·
,
uu· ‚
null
uu„ Á
,
uuÁ Ë
null
uuÈ Ì
,
uuÌ Ó
$str
uuÔ †
,
uu† °
$str
uu¢ ´
,
uu´ ¨
$str
uu≠ ∆
,
uu∆ «
$str
uu» –
,
uu– —
$str
uu“ ‹
,
uu‹ ›
$str
uuﬁ ˙
,
uu˙ ˚
$str
uu¸ â
,
uuâ ä
$num
uuã å
,
uuå ç
$str
uué π
,
uuπ ∫
$str
uuª “
,
uu“ ”
null
uu‘ ÿ
,
uuÿ Ÿ
null
uu⁄ ﬁ
}
uuﬂ ‡
,
uu‡ ·
{vv 
newvv 
Guidvv 
(vv 
$strvv E
)vvE F
,vvF G
$str	vvH è
,
vvè ê
$str
vvë À
,
vvÀ Ã
$str
vvÕ ‰
,
vv‰ Â
null
vvÊ Í
,
vvÍ Î
null
vvÏ 
,
vv Ò
$str
vvÚ £
,
vv£ §
$str
vv• Æ
,
vvÆ Ø
$str
vv∞ …
,
vv…  
$str
vvÀ Ò
,
vvÒ Ú
$str
vvÛ ¸
,
vv¸ ˝
$str
vv˛ ö
,
vvö õ
$str
vvú ©
,
vv© ™
$num
vv´ ¨
,
vv¨ ≠
$str
vvÆ Œ
,
vvŒ œ
$str
vv– Ë
,
vvË È
null
vvÍ Ó
,
vvÓ Ô
null
vv Ù
}
vvı ˆ
,
vvˆ ˜
{ww 
newww 
Guidww 
(ww 
$strww E
)wwE F
,wwF G
$str	wwH æ
,
wwæ ø
$str
ww¿ ù
,
wwù û
$str
wwü ©
,
ww© ™
null
ww´ Ø
,
wwØ ∞
null
ww± µ
,
wwµ ∂
$str
ww∑ ˚
,
ww˚ ¸
$str
ww˝ Ü
,
wwÜ á
$str
wwà ≠
,
ww≠ Æ
$str
wwØ ’
,
ww’ ÷
$str
ww◊ ·
,
ww· ‚
$str
ww„ ˇ
,
wwˇ Ä
$str
wwÅ é
,
wwé è
$num
wwê ë
,
wwë í
$str
wwì ®
,
ww® ©
$str
ww™ ø
,
wwø ¿
null
ww¡ ≈
,
ww≈ ∆
null
ww« À
}
wwÃ Õ
,
wwÕ Œ
{xx 
newxx 
Guidxx 
(xx 
$strxx E
)xxE F
,xxF G
$str	xxH ë
,
xxë í
$str
xxì Õ
,
xxÕ Œ
$str
xxœ ·
,
xx· ‚
null
xx„ Á
,
xxÁ Ë
null
xxÈ Ì
,
xxÌ Ó
$str
xxÔ †
,
xx† °
$str
xx¢ ´
,
xx´ ¨
$str
xx≠ ∆
,
xx∆ «
$str
xx» Ê
,
xxÊ Á
$str
xxË Ô
,
xxÔ 
$str
xxÒ ç
,
xxç é
$str
xxè ú
,
xxú ù
$num
xxû ü
,
xxü †
$str
xx° ø
,
xxø ¿
$str
xx¡ Â
,
xxÂ Ê
null
xxÁ Î
,
xxÎ Ï
null
xxÌ Ò
}
xxÚ Û
,
xxÛ Ù
{yy 
newyy 
Guidyy 
(yy 
$stryy E
)yyE F
,yyF G
$str	yyH è
,
yyè ê
$str
yyë À
,
yyÀ Ã
$str
yyÕ ‰
,
yy‰ Â
null
yyÊ Í
,
yyÍ Î
null
yyÏ 
,
yy Ò
$str
yyÚ £
,
yy£ §
$str
yy• Æ
,
yyÆ Ø
$str
yy∞ …
,
yy…  
$str
yyÀ Ì
,
yyÌ Ó
$str
yyÔ ˚
,
yy˚ ¸
$str
yy˝ ô
,
yyô ö
$str
yyõ ®
,
yy® ©
$num
yy™ ´
,
yy´ ¨
$str
yy≠ Õ
,
yyÕ Œ
$str
yyœ Ë
,
yyË È
null
yyÍ Ó
,
yyÓ Ô
null
yy Ù
}
yyı ˆ
,
yyˆ ˜
{zz 
newzz 
Guidzz 
(zz 
$strzz E
)zzE F
,zzF G
$str	zzH Ã
,
zzÃ Õ
$str
zzŒ à
,
zzà â
$str
zzä ö
,
zzö õ
null
zzú †
,
zz† °
null
zz¢ ¶
,
zz¶ ß
$str
zz® Ÿ
,
zzŸ ⁄
$str
zz€ ‰
,
zz‰ Â
$str
zzÊ ˇ
,
zzˇ Ä
$str
zzÅ â
,
zzâ ä
$str
zzã ï
,
zzï ñ
$str
zzó ≥
,
zz≥ ¥
$str
zzµ ¬
,
zz¬ √
$num
zzƒ ≈
,
zz≈ ∆
$str
zz« ﬂ
,
zzﬂ ‡
$str
zz· ˆ
,
zzˆ ˜
null
zz¯ ¸
,
zz¸ ˝
null
zz˛ Ç
}
zzÉ Ñ
,
zzÑ Ö
{{{ 
new{{ 
Guid{{ 
({{ 
$str{{ E
){{E F
,{{F G
$str	{{H ®
,
{{® ©
$str
{{™ ÿ
,
{{ÿ Ÿ
$str
{{⁄ ‰
,
{{‰ Â
null
{{Ê Í
,
{{Í Î
null
{{Ï 
,
{{ Ò
$str
{{Ú £
,
{{£ §
$str
{{• Æ
,
{{Æ Ø
$str
{{∞  
,
{{  À
$str
{{Ã Û
,
{{Û Ù
$str
{{ı ˇ
,
{{ˇ Ä
$str
{{Å ù
,
{{ù û
$str
{{ü ¨
,
{{¨ ≠
$num
{{Æ Ø
,
{{Ø ∞
$str
{{± ∆
,
{{∆ «
$str
{{» ÿ
,
{{ÿ Ÿ
null
{{⁄ ﬁ
,
{{ﬁ ﬂ
null
{{‡ ‰
}
{{Â Ê
,
{{Ê Á
{|| 
new|| 
Guid|| 
(|| 
$str|| E
)||E F
,||F G
$str||H s
,||s t
$str	||u ô
,
||ô ö
$str
||õ •
,
||• ¶
null
||ß ´
,
||´ ¨
null
||≠ ±
,
||± ≤
$str
||≥ ˘
,
||˘ ˙
$str
||˚ Ñ
,
||Ñ Ö
$str
||Ü ü
,
||ü †
$str
||° Œ
,
||Œ œ
$str
||– ‹
,
||‹ ›
$str
||ﬁ ˙
,
||˙ ˚
$str
||¸ â
,
||â ä
$num
||ã å
,
||å ç
$str
||é ª
,
||ª º
$str
||Ω ›
,
||› ﬁ
null
||ﬂ „
,
||„ ‰
null
||Â È
}
||Í Î
,
||Î Ï
{}} 
new}} 
Guid}} 
(}} 
$str}} E
)}}E F
,}}F G
$str	}}H ∞
,
}}∞ ±
$str
}}≤ Ï
,
}}Ï Ì
$str
}}Ó ˜
,
}}˜ ¯
null
}}˘ ˝
,
}}˝ ˛
null
}}ˇ É
,
}}É Ñ
$str
}}Ö ∂
,
}}∂ ∑
$str
}}∏ ¡
,
}}¡ ¬
$str
}}√ ‹
,
}}‹ ›
$str
}}ﬁ ˘
,
}}˘ ˙
$str
}}˚ Ö
,
}}Ö Ü
$str
}}á £
,
}}£ §
$str
}}• ≤
,
}}≤ ≥
$num
}}¥ µ
,
}}µ ∂
$str
}}∑ À
,
}}À Ã
$str
}}Õ €
,
}}€ ‹
null
}}› ·
,
}}· ‚
null
}}„ Á
}
}}Ë È
,
}}È Í
{~~ 
new~~ 
Guid~~ 
(~~ 
$str~~ E
)~~E F
,~~F G
$str	~~H Ñ
,
~~Ñ Ö
$str
~~Ü ¿
,
~~¿ ¡
$str
~~¬ “
,
~~“ ”
null
~~‘ ÿ
,
~~ÿ Ÿ
null
~~⁄ ﬁ
,
~~ﬁ ﬂ
$str
~~‡ ë
,
~~ë í
$str
~~ì ú
,
~~ú ù
$str
~~û ∑
,
~~∑ ∏
$str
~~π ¡
,
~~¡ ¬
$str
~~√ Õ
,
~~Õ Œ
$str
~~œ Î
,
~~Î Ï
$str
~~Ì ˙
,
~~˙ ˚
$num
~~¸ ˝
,
~~˝ ˛
$str
~~ˇ ê
,
~~ê ë
$str
~~í °
,
~~° ¢
null
~~£ ß
,
~~ß ®
null
~~© ≠
}
~~Æ Ø
,
~~Ø ∞
{ 
new 
Guid 
( 
$str E
)E F
,F G
$str	H ”
,
” ‘
$str
’ è
,
è ê
$str
ë ô
,
ô ö
null
õ ü
,
ü †
null
° •
,
• ¶
$str
ß ÿ
,
ÿ Ÿ
$str
⁄ „
,
„ ‰
$str
Â °
,
° ¢
$str
£ ∑
,
∑ ∏
$str
π √
,
√ ƒ
$str
≈ ·
,
· ‚
$str
„ 
,
 Ò
$num
Ú Û
,
Û Ù
$str
ı ñ
,
ñ ó
$str
ò π
,
π ∫
null
ª ø
,
ø ¿
null
¡ ≈
}
∆ «
,
« »
{
ÄÄ 
new
ÄÄ 
Guid
ÄÄ 
(
ÄÄ 
$str
ÄÄ E
)
ÄÄE F
,
ÄÄF G
$strÄÄH û
,ÄÄû ü
$strÄÄ† ≈
,ÄÄ≈ ∆
$strÄÄ« œ
,ÄÄœ –
nullÄÄ— ’
,ÄÄ’ ÷
nullÄÄ◊ €
,ÄÄ€ ‹
$strÄÄ› é
,ÄÄé è
$strÄÄê ô
,ÄÄô ö
$strÄÄõ µ
,ÄÄµ ∂
$strÄÄ∑ œ
,ÄÄœ –
$strÄÄ— €
,ÄÄ€ ‹
$strÄÄ› ˘
,ÄÄ˘ ˙
$strÄÄ˚ à
,ÄÄà â
$numÄÄä ã
,ÄÄã å
$strÄÄç ¢
,ÄÄ¢ £
$strÄÄ§ µ
,ÄÄµ ∂
nullÄÄ∑ ª
,ÄÄª º
nullÄÄΩ ¡
}ÄÄ¬ √
,ÄÄ√ ƒ
{
ÅÅ 
new
ÅÅ 
Guid
ÅÅ 
(
ÅÅ 
$str
ÅÅ E
)
ÅÅE F
,
ÅÅF G
$strÅÅH è
,ÅÅè ê
$strÅÅë ∫
,ÅÅ∫ ª
$strÅÅº  
,ÅÅ  À
nullÅÅÃ –
,ÅÅ– —
nullÅÅ“ ÷
,ÅÅ÷ ◊
$strÅÅÿ â
,ÅÅâ ä
$strÅÅã î
,ÅÅî ï
$strÅÅñ ¢
,ÅÅ¢ £
$strÅÅ§ ¥
,ÅÅ¥ µ
$strÅÅ∂ ¿
,ÅÅ¿ ¡
$strÅÅ¬ ÿ
,ÅÅÿ Ÿ
$strÅÅ⁄ Ê
,ÅÅÊ Á
$numÅÅË È
,ÅÅÈ Í
$strÅÅÎ ¸
,ÅÅ¸ ˝
$strÅÅ˛ ì
,ÅÅì î
nullÅÅï ô
,ÅÅô ö
nullÅÅõ ü
}ÅÅ† °
}
ÇÇ 
)
ÇÇ 
;
ÇÇ 
migrationBuilder
ÑÑ 
.
ÑÑ 
CreateIndex
ÑÑ (
(
ÑÑ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ 4
,
ÖÖ4 5
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ (
,
ÜÜ( )
column
áá 
:
áá 
$str
áá #
)
áá# $
;
áá$ %
}
àà 	
	protected
ãã 
override
ãã 
void
ãã 
Down
ãã  $
(
ãã$ %
MigrationBuilder
ãã% 5
migrationBuilder
ãã6 F
)
ããF G
{
åå 	
migrationBuilder
çç 
.
çç 
	DropTable
çç &
(
çç& '
name
éé 
:
éé 
$str
éé '
)
éé' (
;
éé( )
migrationBuilder
êê 
.
êê 

DeleteData
êê '
(
êê' (
table
ëë 
:
ëë 
$str
ëë '
,
ëë' (
	keyColumn
íí 
:
íí 
$str
íí 
,
íí  
keyValue
ìì 
:
ìì 
new
ìì 
Guid
ìì "
(
ìì" #
$str
ìì# I
)
ììI J
)
ììJ K
;
ììK L
migrationBuilder
ïï 
.
ïï 

DeleteData
ïï '
(
ïï' (
table
ññ 
:
ññ 
$str
ññ '
,
ññ' (
	keyColumn
óó 
:
óó 
$str
óó 
,
óó  
keyValue
òò 
:
òò 
new
òò 
Guid
òò "
(
òò" #
$str
òò# I
)
òòI J
)
òòJ K
;
òòK L
migrationBuilder
öö 
.
öö 

DeleteData
öö '
(
öö' (
table
õõ 
:
õõ 
$str
õõ '
,
õõ' (
	keyColumn
úú 
:
úú 
$str
úú 
,
úú  
keyValue
ùù 
:
ùù 
new
ùù 
Guid
ùù "
(
ùù" #
$str
ùù# I
)
ùùI J
)
ùùJ K
;
ùùK L
migrationBuilder
üü 
.
üü 

DeleteData
üü '
(
üü' (
table
†† 
:
†† 
$str
†† '
,
††' (
	keyColumn
°° 
:
°° 
$str
°° 
,
°°  
keyValue
¢¢ 
:
¢¢ 
new
¢¢ 
Guid
¢¢ "
(
¢¢" #
$str
¢¢# I
)
¢¢I J
)
¢¢J K
;
¢¢K L
migrationBuilder
§§ 
.
§§ 

DeleteData
§§ '
(
§§' (
table
•• 
:
•• 
$str
•• '
,
••' (
	keyColumn
¶¶ 
:
¶¶ 
$str
¶¶ 
,
¶¶  
keyValue
ßß 
:
ßß 
new
ßß 
Guid
ßß "
(
ßß" #
$str
ßß# I
)
ßßI J
)
ßßJ K
;
ßßK L
migrationBuilder
©© 
.
©© 

DeleteData
©© '
(
©©' (
table
™™ 
:
™™ 
$str
™™ '
,
™™' (
	keyColumn
´´ 
:
´´ 
$str
´´ 
,
´´  
keyValue
¨¨ 
:
¨¨ 
new
¨¨ 
Guid
¨¨ "
(
¨¨" #
$str
¨¨# I
)
¨¨I J
)
¨¨J K
;
¨¨K L
migrationBuilder
ÆÆ 
.
ÆÆ 

DeleteData
ÆÆ '
(
ÆÆ' (
table
ØØ 
:
ØØ 
$str
ØØ '
,
ØØ' (
	keyColumn
∞∞ 
:
∞∞ 
$str
∞∞ 
,
∞∞  
keyValue
±± 
:
±± 
new
±± 
Guid
±± "
(
±±" #
$str
±±# I
)
±±I J
)
±±J K
;
±±K L
migrationBuilder
≥≥ 
.
≥≥ 

DeleteData
≥≥ '
(
≥≥' (
table
¥¥ 
:
¥¥ 
$str
¥¥ '
,
¥¥' (
	keyColumn
µµ 
:
µµ 
$str
µµ 
,
µµ  
keyValue
∂∂ 
:
∂∂ 
new
∂∂ 
Guid
∂∂ "
(
∂∂" #
$str
∂∂# I
)
∂∂I J
)
∂∂J K
;
∂∂K L
migrationBuilder
∏∏ 
.
∏∏ 

DeleteData
∏∏ '
(
∏∏' (
table
ππ 
:
ππ 
$str
ππ '
,
ππ' (
	keyColumn
∫∫ 
:
∫∫ 
$str
∫∫ 
,
∫∫  
keyValue
ªª 
:
ªª 
new
ªª 
Guid
ªª "
(
ªª" #
$str
ªª# I
)
ªªI J
)
ªªJ K
;
ªªK L
migrationBuilder
ΩΩ 
.
ΩΩ 

DeleteData
ΩΩ '
(
ΩΩ' (
table
ææ 
:
ææ 
$str
ææ '
,
ææ' (
	keyColumn
øø 
:
øø 
$str
øø 
,
øø  
keyValue
¿¿ 
:
¿¿ 
new
¿¿ 
Guid
¿¿ "
(
¿¿" #
$str
¿¿# I
)
¿¿I J
)
¿¿J K
;
¿¿K L
migrationBuilder
¬¬ 
.
¬¬ 

DeleteData
¬¬ '
(
¬¬' (
table
√√ 
:
√√ 
$str
√√ '
,
√√' (
	keyColumn
ƒƒ 
:
ƒƒ 
$str
ƒƒ 
,
ƒƒ  
keyValue
≈≈ 
:
≈≈ 
new
≈≈ 
Guid
≈≈ "
(
≈≈" #
$str
≈≈# I
)
≈≈I J
)
≈≈J K
;
≈≈K L
migrationBuilder
«« 
.
«« 

DeleteData
«« '
(
««' (
table
»» 
:
»» 
$str
»» '
,
»»' (
	keyColumn
…… 
:
…… 
$str
…… 
,
……  
keyValue
   
:
   
new
   
Guid
   "
(
  " #
$str
  # I
)
  I J
)
  J K
;
  K L
migrationBuilder
ÃÃ 
.
ÃÃ 

DeleteData
ÃÃ '
(
ÃÃ' (
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ '
,
ÕÕ' (
	keyColumn
ŒŒ 
:
ŒŒ 
$str
ŒŒ 
,
ŒŒ  
keyValue
œœ 
:
œœ 
new
œœ 
Guid
œœ "
(
œœ" #
$str
œœ# I
)
œœI J
)
œœJ K
;
œœK L
migrationBuilder
—— 
.
—— 

UpdateData
—— '
(
——' (
table
““ 
:
““ 
$str
““ $
,
““$ %
	keyColumn
”” 
:
”” 
$str
”” 
,
””  
keyValue
‘‘ 
:
‘‘ 
$str
‘‘ +
,
‘‘+ ,
columns
’’ 
:
’’ 
new
’’ 
[
’’ 
]
’’ 
{
’’  
$str
’’! 3
,
’’3 4
$str
’’5 A
,
’’A B
$str
’’C Q
,
’’Q R
$str
’’S b
}
’’c d
,
’’d e
values
÷÷ 
:
÷÷ 
new
÷÷ 
object
÷÷ "
[
÷÷" #
]
÷÷# $
{
÷÷% &
$str
÷÷' M
,
÷÷M N
new
÷÷O R
DateTime
÷÷S [
(
÷÷[ \
$num
÷÷\ `
,
÷÷` a
$num
÷÷b c
,
÷÷c d
$num
÷÷e g
,
÷÷g h
$num
÷÷i j
,
÷÷j k
$num
÷÷l n
,
÷÷n o
$num
÷÷p q
,
÷÷q r
$num
÷÷s v
,
÷÷v w
DateTimeKind÷÷x Ñ
.÷÷Ñ Ö
Utc÷÷Ö à
)÷÷à â
.÷÷â ä
AddTicks÷÷ä í
(÷÷í ì
$num÷÷ì ó
)÷÷ó ò
,÷÷ò ô
$str÷÷ö 
,÷÷ Ò
$str÷÷Ú ò
}÷÷ô ö
)÷÷ö õ
;÷÷õ ú
migrationBuilder
ÿÿ 
.
ÿÿ 

InsertData
ÿÿ '
(
ÿÿ' (
table
ŸŸ 
:
ŸŸ 
$str
ŸŸ '
,
ŸŸ' (
columns
⁄⁄ 
:
⁄⁄ 
new
⁄⁄ 
[
⁄⁄ 
]
⁄⁄ 
{
⁄⁄  
$str
⁄⁄! %
,
⁄⁄% &
$str
⁄⁄' 4
,
⁄⁄4 5
$str
⁄⁄6 D
,
⁄⁄D E
$str
⁄⁄F P
,
⁄⁄P Q
$str
⁄⁄R ]
,
⁄⁄] ^
$str
⁄⁄_ l
,
⁄⁄l m
$str
⁄⁄n }
,
⁄⁄} ~
$str⁄⁄ â
,⁄⁄â ä
$str⁄⁄ã †
,⁄⁄† °
$str⁄⁄¢ ±
,⁄⁄± ≤
$str⁄⁄≥ ¬
,⁄⁄¬ √
$str⁄⁄ƒ —
,⁄⁄— “
$str⁄⁄” ﬂ
,⁄⁄ﬂ ‡
$str⁄⁄· È
,⁄⁄È Í
$str⁄⁄Î ¯
,⁄⁄¯ ˘
$str⁄⁄˙ à
,⁄⁄à â
$str⁄⁄ä ï
,⁄⁄ï ñ
$str⁄⁄ó §
}⁄⁄• ¶
,⁄⁄¶ ß
values
€€ 
:
€€ 
new
€€ 
object
€€ "
[
€€" #
,
€€# $
]
€€$ %
{
‹‹ 
{
›› 
new
›› 
Guid
›› 
(
›› 
$str
›› E
)
››E F
,
››F G
$str››H ∞
,››∞ ±
$str››≤ Ï
,››Ï Ì
$str››Ó ˜
,››˜ ¯
null››˘ ˝
,››˝ ˛
null››ˇ É
,››É Ñ
$str››Ö ∂
,››∂ ∑
$str››∏ ¡
,››¡ ¬
$str››√ ‹
,››‹ ›
$str››ﬁ ˘
,››˘ ˙
$str››˚ Ö
,››Ö Ü
$str››á £
,››£ §
$str››• ≤
,››≤ ≥
$num››¥ µ
,››µ ∂
$str››∑ À
,››À Ã
$str››Õ €
,››€ ‹
null››› ·
,››· ‚
null››„ Á
}››Ë È
,››È Í
{
ﬁﬁ 
new
ﬁﬁ 
Guid
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ E
)
ﬁﬁE F
,
ﬁﬁF G
$strﬁﬁH ®
,ﬁﬁ® ©
$strﬁﬁ™ ÿ
,ﬁﬁÿ Ÿ
$strﬁﬁ⁄ ‰
,ﬁﬁ‰ Â
nullﬁﬁÊ Í
,ﬁﬁÍ Î
nullﬁﬁÏ 
,ﬁﬁ Ò
$strﬁﬁÚ £
,ﬁﬁ£ §
$strﬁﬁ• Æ
,ﬁﬁÆ Ø
$strﬁﬁ∞  
,ﬁﬁ  À
$strﬁﬁÃ Û
,ﬁﬁÛ Ù
$strﬁﬁı ˇ
,ﬁﬁˇ Ä
$strﬁﬁÅ ù
,ﬁﬁù û
$strﬁﬁü ¨
,ﬁﬁ¨ ≠
$numﬁﬁÆ Ø
,ﬁﬁØ ∞
$strﬁﬁ± ∆
,ﬁﬁ∆ «
$strﬁﬁ» ÿ
,ﬁﬁÿ Ÿ
nullﬁﬁ⁄ ﬁ
,ﬁﬁﬁ ﬂ
nullﬁﬁ‡ ‰
}ﬁﬁÂ Ê
,ﬁﬁÊ Á
{
ﬂﬂ 
new
ﬂﬂ 
Guid
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ E
)
ﬂﬂE F
,
ﬂﬂF G
$strﬂﬂH ë
,ﬂﬂë í
$strﬂﬂì Õ
,ﬂﬂÕ Œ
$strﬂﬂœ ·
,ﬂﬂ· ‚
nullﬂﬂ„ Á
,ﬂﬂÁ Ë
nullﬂﬂÈ Ì
,ﬂﬂÌ Ó
$strﬂﬂÔ †
,ﬂﬂ† °
$strﬂﬂ¢ ´
,ﬂﬂ´ ¨
$strﬂﬂ≠ ∆
,ﬂﬂ∆ «
$strﬂﬂ» –
,ﬂﬂ– —
$strﬂﬂ“ ‹
,ﬂﬂ‹ ›
$strﬂﬂﬁ ˙
,ﬂﬂ˙ ˚
$strﬂﬂ¸ â
,ﬂﬂâ ä
$numﬂﬂã å
,ﬂﬂå ç
$strﬂﬂé π
,ﬂﬂπ ∫
$strﬂﬂª “
,ﬂﬂ“ ”
nullﬂﬂ‘ ÿ
,ﬂﬂÿ Ÿ
nullﬂﬂ⁄ ﬁ
}ﬂﬂﬂ ‡
,ﬂﬂ‡ ·
{
‡‡ 
new
‡‡ 
Guid
‡‡ 
(
‡‡ 
$str
‡‡ E
)
‡‡E F
,
‡‡F G
$str‡‡H ë
,‡‡ë í
$str‡‡ì Õ
,‡‡Õ Œ
$str‡‡œ ·
,‡‡· ‚
null‡‡„ Á
,‡‡Á Ë
null‡‡È Ì
,‡‡Ì Ó
$str‡‡Ô †
,‡‡† °
$str‡‡¢ ´
,‡‡´ ¨
$str‡‡≠ ∆
,‡‡∆ «
$str‡‡» Ê
,‡‡Ê Á
$str‡‡Ë Ô
,‡‡Ô 
$str‡‡Ò ç
,‡‡ç é
$str‡‡è ú
,‡‡ú ù
$num‡‡û ü
,‡‡ü †
$str‡‡° ø
,‡‡ø ¿
$str‡‡¡ Â
,‡‡Â Ê
null‡‡Á Î
,‡‡Î Ï
null‡‡Ì Ò
}‡‡Ú Û
,‡‡Û Ù
{
·· 
new
·· 
Guid
·· 
(
·· 
$str
·· E
)
··E F
,
··F G
$str··H Ã
,··Ã Õ
$str··Œ à
,··à â
$str··ä ö
,··ö õ
null··ú †
,··† °
null··¢ ¶
,··¶ ß
$str··® Ÿ
,··Ÿ ⁄
$str··€ ‰
,··‰ Â
$str··Ê ˇ
,··ˇ Ä
$str··Å â
,··â ä
$str··ã ï
,··ï ñ
$str··ó ≥
,··≥ ¥
$str··µ ¬
,··¬ √
$num··ƒ ≈
,··≈ ∆
$str··« ﬂ
,··ﬂ ‡
$str··· ˆ
,··ˆ ˜
null··¯ ¸
,··¸ ˝
null··˛ Ç
}··É Ñ
,··Ñ Ö
{
‚‚ 
new
‚‚ 
Guid
‚‚ 
(
‚‚ 
$str
‚‚ E
)
‚‚E F
,
‚‚F G
$str‚‚H ”
,‚‚” ‘
$str‚‚’ è
,‚‚è ê
$str‚‚ë ô
,‚‚ô ö
null‚‚õ ü
,‚‚ü †
null‚‚° •
,‚‚• ¶
$str‚‚ß ÿ
,‚‚ÿ Ÿ
$str‚‚⁄ „
,‚‚„ ‰
$str‚‚Â °
,‚‚° ¢
$str‚‚£ ∑
,‚‚∑ ∏
$str‚‚π √
,‚‚√ ƒ
$str‚‚≈ ·
,‚‚· ‚
$str‚‚„ 
,‚‚ Ò
$num‚‚Ú Û
,‚‚Û Ù
$str‚‚ı ñ
,‚‚ñ ó
$str‚‚ò π
,‚‚π ∫
null‚‚ª ø
,‚‚ø ¿
null‚‚¡ ≈
}‚‚∆ «
,‚‚« »
{
„„ 
new
„„ 
Guid
„„ 
(
„„ 
$str
„„ E
)
„„E F
,
„„F G
$str„„H è
,„„è ê
$str„„ë ∫
,„„∫ ª
$str„„º  
,„„  À
null„„Ã –
,„„– —
null„„“ ÷
,„„÷ ◊
$str„„ÿ â
,„„â ä
$str„„ã î
,„„î ï
$str„„ñ ¢
,„„¢ £
$str„„§ ¥
,„„¥ µ
$str„„∂ ¿
,„„¿ ¡
$str„„¬ ÿ
,„„ÿ Ÿ
$str„„⁄ Ê
,„„Ê Á
$num„„Ë È
,„„È Í
$str„„Î ¸
,„„¸ ˝
$str„„˛ ì
,„„ì î
null„„ï ô
,„„ô ö
null„„õ ü
}„„† °
,„„° ¢
{
‰‰ 
new
‰‰ 
Guid
‰‰ 
(
‰‰ 
$str
‰‰ E
)
‰‰E F
,
‰‰F G
$str‰‰H æ
,‰‰æ ø
$str‰‰¿ ù
,‰‰ù û
$str‰‰ü ©
,‰‰© ™
null‰‰´ Ø
,‰‰Ø ∞
null‰‰± µ
,‰‰µ ∂
$str‰‰∑ ˚
,‰‰˚ ¸
$str‰‰˝ Ü
,‰‰Ü á
$str‰‰à ≠
,‰‰≠ Æ
$str‰‰Ø ’
,‰‰’ ÷
$str‰‰◊ ·
,‰‰· ‚
$str‰‰„ ˇ
,‰‰ˇ Ä
$str‰‰Å é
,‰‰é è
$num‰‰ê ë
,‰‰ë í
$str‰‰ì ®
,‰‰® ©
$str‰‰™ ø
,‰‰ø ¿
null‰‰¡ ≈
,‰‰≈ ∆
null‰‰« À
}‰‰Ã Õ
,‰‰Õ Œ
{
ÂÂ 
new
ÂÂ 
Guid
ÂÂ 
(
ÂÂ 
$str
ÂÂ E
)
ÂÂE F
,
ÂÂF G
$strÂÂH Ñ
,ÂÂÑ Ö
$strÂÂÜ ¿
,ÂÂ¿ ¡
$strÂÂ¬ “
,ÂÂ“ ”
nullÂÂ‘ ÿ
,ÂÂÿ Ÿ
nullÂÂ⁄ ﬁ
,ÂÂﬁ ﬂ
$strÂÂ‡ ë
,ÂÂë í
$strÂÂì ú
,ÂÂú ù
$strÂÂû ∑
,ÂÂ∑ ∏
$strÂÂπ ¡
,ÂÂ¡ ¬
$strÂÂ√ Õ
,ÂÂÕ Œ
$strÂÂœ Î
,ÂÂÎ Ï
$strÂÂÌ ˙
,ÂÂ˙ ˚
$numÂÂ¸ ˝
,ÂÂ˝ ˛
$strÂÂˇ ê
,ÂÂê ë
$strÂÂí °
,ÂÂ° ¢
nullÂÂ£ ß
,ÂÂß ®
nullÂÂ© ≠
}ÂÂÆ Ø
,ÂÂØ ∞
{
ÊÊ 
new
ÊÊ 
Guid
ÊÊ 
(
ÊÊ 
$str
ÊÊ E
)
ÊÊE F
,
ÊÊF G
$strÊÊH è
,ÊÊè ê
$strÊÊë À
,ÊÊÀ Ã
$strÊÊÕ ‰
,ÊÊ‰ Â
nullÊÊÊ Í
,ÊÊÍ Î
nullÊÊÏ 
,ÊÊ Ò
$strÊÊÚ £
,ÊÊ£ §
$strÊÊ• Æ
,ÊÊÆ Ø
$strÊÊ∞ …
,ÊÊ…  
$strÊÊÀ Ì
,ÊÊÌ Ó
$strÊÊÔ ˚
,ÊÊ˚ ¸
$strÊÊ˝ ô
,ÊÊô ö
$strÊÊõ ®
,ÊÊ® ©
$numÊÊ™ ´
,ÊÊ´ ¨
$strÊÊ≠ Õ
,ÊÊÕ Œ
$strÊÊœ Ë
,ÊÊË È
nullÊÊÍ Ó
,ÊÊÓ Ô
nullÊÊ Ù
}ÊÊı ˆ
,ÊÊˆ ˜
{
ÁÁ 
new
ÁÁ 
Guid
ÁÁ 
(
ÁÁ 
$str
ÁÁ E
)
ÁÁE F
,
ÁÁF G
$strÁÁH û
,ÁÁû ü
$strÁÁ† ≈
,ÁÁ≈ ∆
$strÁÁ« œ
,ÁÁœ –
nullÁÁ— ’
,ÁÁ’ ÷
nullÁÁ◊ €
,ÁÁ€ ‹
$strÁÁ› é
,ÁÁé è
$strÁÁê ô
,ÁÁô ö
$strÁÁõ µ
,ÁÁµ ∂
$strÁÁ∑ œ
,ÁÁœ –
$strÁÁ— €
,ÁÁ€ ‹
$strÁÁ› ˘
,ÁÁ˘ ˙
$strÁÁ˚ à
,ÁÁà â
$numÁÁä ã
,ÁÁã å
$strÁÁç ¢
,ÁÁ¢ £
$strÁÁ§ µ
,ÁÁµ ∂
nullÁÁ∑ ª
,ÁÁª º
nullÁÁΩ ¡
}ÁÁ¬ √
,ÁÁ√ ƒ
{
ËË 
new
ËË 
Guid
ËË 
(
ËË 
$str
ËË E
)
ËËE F
,
ËËF G
$strËËH è
,ËËè ê
$strËËë À
,ËËÀ Ã
$strËËÕ ‰
,ËË‰ Â
nullËËÊ Í
,ËËÍ Î
nullËËÏ 
,ËË Ò
$strËËÚ £
,ËË£ §
$strËË• Æ
,ËËÆ Ø
$strËË∞ …
,ËË…  
$strËËÀ Ò
,ËËÒ Ú
$strËËÛ ¸
,ËË¸ ˝
$strËË˛ ö
,ËËö õ
$strËËú ©
,ËË© ™
$numËË´ ¨
,ËË¨ ≠
$strËËÆ Œ
,ËËŒ œ
$strËË– Ë
,ËËË È
nullËËÍ Ó
,ËËÓ Ô
nullËË Ù
}ËËı ˆ
,ËËˆ ˜
{
ÈÈ 
new
ÈÈ 
Guid
ÈÈ 
(
ÈÈ 
$str
ÈÈ E
)
ÈÈE F
,
ÈÈF G
$str
ÈÈH s
,
ÈÈs t
$strÈÈu ô
,ÈÈô ö
$strÈÈõ •
,ÈÈ• ¶
nullÈÈß ´
,ÈÈ´ ¨
nullÈÈ≠ ±
,ÈÈ± ≤
$strÈÈ≥ ˘
,ÈÈ˘ ˙
$strÈÈ˚ Ñ
,ÈÈÑ Ö
$strÈÈÜ ü
,ÈÈü †
$strÈÈ° Œ
,ÈÈŒ œ
$strÈÈ– ‹
,ÈÈ‹ ›
$strÈÈﬁ ˙
,ÈÈ˙ ˚
$strÈÈ¸ â
,ÈÈâ ä
$numÈÈã å
,ÈÈå ç
$strÈÈé ª
,ÈÈª º
$strÈÈΩ ›
,ÈÈ› ﬁ
nullÈÈﬂ „
,ÈÈ„ ‰
nullÈÈÂ È
}ÈÈÍ Î
}
ÍÍ 
)
ÍÍ 
;
ÍÍ 
}
ÎÎ 	
}
ÏÏ 
}ÌÌ Ñ∞
äD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240720083200_ChangeNamePropsInTableCourse.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class (
ChangeNamePropsInTableCourse 5
:6 7
	Migration8 A
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 
RenameColumnQQ )
(QQ) *
nameRR 
:RR 
$strRR $
,RR$ %
tableSS 
:SS 
$strSS  
,SS  !
newNameTT 
:TT 
$strTT '
)TT' (
;TT( )
migrationBuilderVV 
.VV 
AlterColumnVV (
<VV( )
doubleVV) /
>VV/ 0
(VV0 1
nameWW 
:WW 
$strWW #
,WW# $
tableXX 
:XX 
$strXX  
,XX  !
typeYY 
:YY 
$strYY 
,YY 
nullableZZ 
:ZZ 
trueZZ 
,ZZ 

oldClrType[[ 
:[[ 
typeof[[ "
([[" #
double[[# )
)[[) *
,[[* +
oldType\\ 
:\\ 
$str\\  
)\\  !
;\\! "
migrationBuilder^^ 
.^^ 

UpdateData^^ '
(^^' (
table__ 
:__ 
$str__ $
,__$ %
	keyColumn`` 
:`` 
$str`` 
,``  
keyValueaa 
:aa 
$straa +
,aa+ ,
columnsbb 
:bb 
newbb 
[bb 
]bb 
{bb  
$strbb! 3
,bb3 4
$strbb5 A
,bbA B
$strbbC Q
,bbQ R
$strbbS b
}bbc d
,bbd e
valuescc 
:cc 
newcc 
objectcc "
[cc" #
]cc# $
{cc% &
$strcc' M
,ccM N
newccO R
DateTimeccS [
(cc[ \
$numcc\ `
,cc` a
$numccb c
,ccc d
$numcce g
,ccg h
$numcci j
,ccj k
$numccl n
,ccn o
$numccp q
,ccq r
$numccs v
,ccv w
DateTimeKind	ccx Ñ
.
ccÑ Ö
Utc
ccÖ à
)
ccà â
.
ccâ ä
AddTicks
ccä í
(
ccí ì
$num
ccì ó
)
ccó ò
,
ccò ô
$str
ccö 
,
cc Ò
$str
ccÚ ò
}
ccô ö
)
ccö õ
;
ccõ ú
migrationBuilderee 
.ee 

InsertDataee '
(ee' (
tableff 
:ff 
$strff '
,ff' (
columnsgg 
:gg 
newgg 
[gg 
]gg 
{gg  
$strgg! %
,gg% &
$strgg' 4
,gg4 5
$strgg6 D
,ggD E
$strggF P
,ggP Q
$strggR ]
,gg] ^
$strgg_ l
,ggl m
$strggn }
,gg} ~
$str	gg â
,
ggâ ä
$str
ggã †
,
gg† °
$str
gg¢ ±
,
gg± ≤
$str
gg≥ ¬
,
gg¬ √
$str
ggƒ —
,
gg— “
$str
gg” ﬂ
,
ggﬂ ‡
$str
gg· È
,
ggÈ Í
$str
ggÎ ¯
,
gg¯ ˘
$str
gg˙ à
,
ggà â
$str
ggä ï
,
ggï ñ
$str
ggó §
}
gg• ¶
,
gg¶ ß
valueshh 
:hh 
newhh 
objecthh "
[hh" #
,hh# $
]hh$ %
{ii 
{jj 
newjj 
Guidjj 
(jj 
$strjj E
)jjE F
,jjF G
$str	jjH ∞
,
jj∞ ±
$str
jj≤ Ï
,
jjÏ Ì
$str
jjÓ ˜
,
jj˜ ¯
null
jj˘ ˝
,
jj˝ ˛
null
jjˇ É
,
jjÉ Ñ
$str
jjÖ ∂
,
jj∂ ∑
$str
jj∏ ¡
,
jj¡ ¬
$str
jj√ ‹
,
jj‹ ›
$str
jjﬁ ˘
,
jj˘ ˙
$str
jj˚ Ö
,
jjÖ Ü
$str
jjá £
,
jj£ §
$str
jj• ≤
,
jj≤ ≥
$num
jj¥ µ
,
jjµ ∂
$str
jj∑ À
,
jjÀ Ã
$str
jjÕ €
,
jj€ ‹
null
jj› ·
,
jj· ‚
null
jj„ Á
}
jjË È
,
jjÈ Í
{kk 
newkk 
Guidkk 
(kk 
$strkk E
)kkE F
,kkF G
$str	kkH ®
,
kk® ©
$str
kk™ ÿ
,
kkÿ Ÿ
$str
kk⁄ ‰
,
kk‰ Â
null
kkÊ Í
,
kkÍ Î
null
kkÏ 
,
kk Ò
$str
kkÚ £
,
kk£ §
$str
kk• Æ
,
kkÆ Ø
$str
kk∞  
,
kk  À
$str
kkÃ Û
,
kkÛ Ù
$str
kkı ˇ
,
kkˇ Ä
$str
kkÅ ù
,
kkù û
$str
kkü ¨
,
kk¨ ≠
$num
kkÆ Ø
,
kkØ ∞
$str
kk± ∆
,
kk∆ «
$str
kk» ÿ
,
kkÿ Ÿ
null
kk⁄ ﬁ
,
kkﬁ ﬂ
null
kk‡ ‰
}
kkÂ Ê
,
kkÊ Á
{ll 
newll 
Guidll 
(ll 
$strll E
)llE F
,llF G
$str	llH ë
,
llë í
$str
llì Õ
,
llÕ Œ
$str
llœ ·
,
ll· ‚
null
ll„ Á
,
llÁ Ë
null
llÈ Ì
,
llÌ Ó
$str
llÔ †
,
ll† °
$str
ll¢ ´
,
ll´ ¨
$str
ll≠ ∆
,
ll∆ «
$str
ll» –
,
ll– —
$str
ll“ ‹
,
ll‹ ›
$str
llﬁ ˙
,
ll˙ ˚
$str
ll¸ â
,
llâ ä
$num
llã å
,
llå ç
$str
llé π
,
llπ ∫
$str
llª “
,
ll“ ”
null
ll‘ ÿ
,
llÿ Ÿ
null
ll⁄ ﬁ
}
llﬂ ‡
,
ll‡ ·
{mm 
newmm 
Guidmm 
(mm 
$strmm E
)mmE F
,mmF G
$str	mmH ë
,
mmë í
$str
mmì Õ
,
mmÕ Œ
$str
mmœ ·
,
mm· ‚
null
mm„ Á
,
mmÁ Ë
null
mmÈ Ì
,
mmÌ Ó
$str
mmÔ †
,
mm† °
$str
mm¢ ´
,
mm´ ¨
$str
mm≠ ∆
,
mm∆ «
$str
mm» Ê
,
mmÊ Á
$str
mmË Ô
,
mmÔ 
$str
mmÒ ç
,
mmç é
$str
mmè ú
,
mmú ù
$num
mmû ü
,
mmü †
$str
mm° ø
,
mmø ¿
$str
mm¡ Â
,
mmÂ Ê
null
mmÁ Î
,
mmÎ Ï
null
mmÌ Ò
}
mmÚ Û
,
mmÛ Ù
{nn 
newnn 
Guidnn 
(nn 
$strnn E
)nnE F
,nnF G
$str	nnH Ã
,
nnÃ Õ
$str
nnŒ à
,
nnà â
$str
nnä ö
,
nnö õ
null
nnú †
,
nn† °
null
nn¢ ¶
,
nn¶ ß
$str
nn® Ÿ
,
nnŸ ⁄
$str
nn€ ‰
,
nn‰ Â
$str
nnÊ ˇ
,
nnˇ Ä
$str
nnÅ â
,
nnâ ä
$str
nnã ï
,
nnï ñ
$str
nnó ≥
,
nn≥ ¥
$str
nnµ ¬
,
nn¬ √
$num
nnƒ ≈
,
nn≈ ∆
$str
nn« ﬂ
,
nnﬂ ‡
$str
nn· ˆ
,
nnˆ ˜
null
nn¯ ¸
,
nn¸ ˝
null
nn˛ Ç
}
nnÉ Ñ
,
nnÑ Ö
{oo 
newoo 
Guidoo 
(oo 
$stroo E
)ooE F
,ooF G
$str	ooH ”
,
oo” ‘
$str
oo’ è
,
ooè ê
$str
ooë ô
,
ooô ö
null
ooõ ü
,
ooü †
null
oo° •
,
oo• ¶
$str
ooß ÿ
,
ooÿ Ÿ
$str
oo⁄ „
,
oo„ ‰
$str
ooÂ °
,
oo° ¢
$str
oo£ ∑
,
oo∑ ∏
$str
ooπ √
,
oo√ ƒ
$str
oo≈ ·
,
oo· ‚
$str
oo„ 
,
oo Ò
$num
ooÚ Û
,
ooÛ Ù
$str
ooı ñ
,
ooñ ó
$str
ooò π
,
ooπ ∫
null
ooª ø
,
ooø ¿
null
oo¡ ≈
}
oo∆ «
,
oo« »
{pp 
newpp 
Guidpp 
(pp 
$strpp E
)ppE F
,ppF G
$str	ppH è
,
ppè ê
$str
ppë ∫
,
pp∫ ª
$str
ppº  
,
pp  À
null
ppÃ –
,
pp– —
null
pp“ ÷
,
pp÷ ◊
$str
ppÿ â
,
ppâ ä
$str
ppã î
,
ppî ï
$str
ppñ ¢
,
pp¢ £
$str
pp§ ¥
,
pp¥ µ
$str
pp∂ ¿
,
pp¿ ¡
$str
pp¬ ÿ
,
ppÿ Ÿ
$str
pp⁄ Ê
,
ppÊ Á
$num
ppË È
,
ppÈ Í
$str
ppÎ ¸
,
pp¸ ˝
$str
pp˛ ì
,
ppì î
null
ppï ô
,
ppô ö
null
ppõ ü
}
pp† °
,
pp° ¢
{qq 
newqq 
Guidqq 
(qq 
$strqq E
)qqE F
,qqF G
$str	qqH æ
,
qqæ ø
$str
qq¿ ù
,
qqù û
$str
qqü ©
,
qq© ™
null
qq´ Ø
,
qqØ ∞
null
qq± µ
,
qqµ ∂
$str
qq∑ ˚
,
qq˚ ¸
$str
qq˝ Ü
,
qqÜ á
$str
qqà ≠
,
qq≠ Æ
$str
qqØ ’
,
qq’ ÷
$str
qq◊ ·
,
qq· ‚
$str
qq„ ˇ
,
qqˇ Ä
$str
qqÅ é
,
qqé è
$num
qqê ë
,
qqë í
$str
qqì ®
,
qq® ©
$str
qq™ ø
,
qqø ¿
null
qq¡ ≈
,
qq≈ ∆
null
qq« À
}
qqÃ Õ
,
qqÕ Œ
{rr 
newrr 
Guidrr 
(rr 
$strrr E
)rrE F
,rrF G
$str	rrH Ñ
,
rrÑ Ö
$str
rrÜ ¿
,
rr¿ ¡
$str
rr¬ “
,
rr“ ”
null
rr‘ ÿ
,
rrÿ Ÿ
null
rr⁄ ﬁ
,
rrﬁ ﬂ
$str
rr‡ ë
,
rrë í
$str
rrì ú
,
rrú ù
$str
rrû ∑
,
rr∑ ∏
$str
rrπ ¡
,
rr¡ ¬
$str
rr√ Õ
,
rrÕ Œ
$str
rrœ Î
,
rrÎ Ï
$str
rrÌ ˙
,
rr˙ ˚
$num
rr¸ ˝
,
rr˝ ˛
$str
rrˇ ê
,
rrê ë
$str
rrí °
,
rr° ¢
null
rr£ ß
,
rrß ®
null
rr© ≠
}
rrÆ Ø
,
rrØ ∞
{ss 
newss 
Guidss 
(ss 
$strss E
)ssE F
,ssF G
$str	ssH è
,
ssè ê
$str
ssë À
,
ssÀ Ã
$str
ssÕ ‰
,
ss‰ Â
null
ssÊ Í
,
ssÍ Î
null
ssÏ 
,
ss Ò
$str
ssÚ £
,
ss£ §
$str
ss• Æ
,
ssÆ Ø
$str
ss∞ …
,
ss…  
$str
ssÀ Ì
,
ssÌ Ó
$str
ssÔ ˚
,
ss˚ ¸
$str
ss˝ ô
,
ssô ö
$str
ssõ ®
,
ss® ©
$num
ss™ ´
,
ss´ ¨
$str
ss≠ Õ
,
ssÕ Œ
$str
ssœ Ë
,
ssË È
null
ssÍ Ó
,
ssÓ Ô
null
ss Ù
}
ssı ˆ
,
ssˆ ˜
{tt 
newtt 
Guidtt 
(tt 
$strtt E
)ttE F
,ttF G
$str	ttH û
,
ttû ü
$str
tt† ≈
,
tt≈ ∆
$str
tt« œ
,
ttœ –
null
tt— ’
,
tt’ ÷
null
tt◊ €
,
tt€ ‹
$str
tt› é
,
tté è
$str
ttê ô
,
ttô ö
$str
ttõ µ
,
ttµ ∂
$str
tt∑ œ
,
ttœ –
$str
tt— €
,
tt€ ‹
$str
tt› ˘
,
tt˘ ˙
$str
tt˚ à
,
ttà â
$num
ttä ã
,
ttã å
$str
ttç ¢
,
tt¢ £
$str
tt§ µ
,
ttµ ∂
null
tt∑ ª
,
ttª º
null
ttΩ ¡
}
tt¬ √
,
tt√ ƒ
{uu 
newuu 
Guiduu 
(uu 
$struu E
)uuE F
,uuF G
$str	uuH è
,
uuè ê
$str
uuë À
,
uuÀ Ã
$str
uuÕ ‰
,
uu‰ Â
null
uuÊ Í
,
uuÍ Î
null
uuÏ 
,
uu Ò
$str
uuÚ £
,
uu£ §
$str
uu• Æ
,
uuÆ Ø
$str
uu∞ …
,
uu…  
$str
uuÀ Ò
,
uuÒ Ú
$str
uuÛ ¸
,
uu¸ ˝
$str
uu˛ ö
,
uuö õ
$str
uuú ©
,
uu© ™
$num
uu´ ¨
,
uu¨ ≠
$str
uuÆ Œ
,
uuŒ œ
$str
uu– Ë
,
uuË È
null
uuÍ Ó
,
uuÓ Ô
null
uu Ù
}
uuı ˆ
,
uuˆ ˜
{vv 
newvv 
Guidvv 
(vv 
$strvv E
)vvE F
,vvF G
$strvvH s
,vvs t
$str	vvu ô
,
vvô ö
$str
vvõ •
,
vv• ¶
null
vvß ´
,
vv´ ¨
null
vv≠ ±
,
vv± ≤
$str
vv≥ ˘
,
vv˘ ˙
$str
vv˚ Ñ
,
vvÑ Ö
$str
vvÜ ü
,
vvü †
$str
vv° Œ
,
vvŒ œ
$str
vv– ‹
,
vv‹ ›
$str
vvﬁ ˙
,
vv˙ ˚
$str
vv¸ â
,
vvâ ä
$num
vvã å
,
vvå ç
$str
vvé ª
,
vvª º
$str
vvΩ ›
,
vv› ﬁ
null
vvﬂ „
,
vv„ ‰
null
vvÂ È
}
vvÍ Î
}ww 
)ww 
;ww 
}xx 	
	protected{{ 
override{{ 
void{{ 
Down{{  $
({{$ %
MigrationBuilder{{% 5
migrationBuilder{{6 F
){{F G
{|| 	
migrationBuilder}} 
.}} 

DeleteData}} '
(}}' (
table~~ 
:~~ 
$str~~ '
,~~' (
	keyColumn 
: 
$str 
,  
keyValue
ÄÄ 
:
ÄÄ 
new
ÄÄ 
Guid
ÄÄ "
(
ÄÄ" #
$str
ÄÄ# I
)
ÄÄI J
)
ÄÄJ K
;
ÄÄK L
migrationBuilder
ÇÇ 
.
ÇÇ 

DeleteData
ÇÇ '
(
ÇÇ' (
table
ÉÉ 
:
ÉÉ 
$str
ÉÉ '
,
ÉÉ' (
	keyColumn
ÑÑ 
:
ÑÑ 
$str
ÑÑ 
,
ÑÑ  
keyValue
ÖÖ 
:
ÖÖ 
new
ÖÖ 
Guid
ÖÖ "
(
ÖÖ" #
$str
ÖÖ# I
)
ÖÖI J
)
ÖÖJ K
;
ÖÖK L
migrationBuilder
áá 
.
áá 

DeleteData
áá '
(
áá' (
table
àà 
:
àà 
$str
àà '
,
àà' (
	keyColumn
ââ 
:
ââ 
$str
ââ 
,
ââ  
keyValue
ää 
:
ää 
new
ää 
Guid
ää "
(
ää" #
$str
ää# I
)
ääI J
)
ääJ K
;
ääK L
migrationBuilder
åå 
.
åå 

DeleteData
åå '
(
åå' (
table
çç 
:
çç 
$str
çç '
,
çç' (
	keyColumn
éé 
:
éé 
$str
éé 
,
éé  
keyValue
èè 
:
èè 
new
èè 
Guid
èè "
(
èè" #
$str
èè# I
)
èèI J
)
èèJ K
;
èèK L
migrationBuilder
ëë 
.
ëë 

DeleteData
ëë '
(
ëë' (
table
íí 
:
íí 
$str
íí '
,
íí' (
	keyColumn
ìì 
:
ìì 
$str
ìì 
,
ìì  
keyValue
îî 
:
îî 
new
îî 
Guid
îî "
(
îî" #
$str
îî# I
)
îîI J
)
îîJ K
;
îîK L
migrationBuilder
ññ 
.
ññ 

DeleteData
ññ '
(
ññ' (
table
óó 
:
óó 
$str
óó '
,
óó' (
	keyColumn
òò 
:
òò 
$str
òò 
,
òò  
keyValue
ôô 
:
ôô 
new
ôô 
Guid
ôô "
(
ôô" #
$str
ôô# I
)
ôôI J
)
ôôJ K
;
ôôK L
migrationBuilder
õõ 
.
õõ 

DeleteData
õõ '
(
õõ' (
table
úú 
:
úú 
$str
úú '
,
úú' (
	keyColumn
ùù 
:
ùù 
$str
ùù 
,
ùù  
keyValue
ûû 
:
ûû 
new
ûû 
Guid
ûû "
(
ûû" #
$str
ûû# I
)
ûûI J
)
ûûJ K
;
ûûK L
migrationBuilder
†† 
.
†† 

DeleteData
†† '
(
††' (
table
°° 
:
°° 
$str
°° '
,
°°' (
	keyColumn
¢¢ 
:
¢¢ 
$str
¢¢ 
,
¢¢  
keyValue
££ 
:
££ 
new
££ 
Guid
££ "
(
££" #
$str
££# I
)
££I J
)
££J K
;
££K L
migrationBuilder
•• 
.
•• 

DeleteData
•• '
(
••' (
table
¶¶ 
:
¶¶ 
$str
¶¶ '
,
¶¶' (
	keyColumn
ßß 
:
ßß 
$str
ßß 
,
ßß  
keyValue
®® 
:
®® 
new
®® 
Guid
®® "
(
®®" #
$str
®®# I
)
®®I J
)
®®J K
;
®®K L
migrationBuilder
™™ 
.
™™ 

DeleteData
™™ '
(
™™' (
table
´´ 
:
´´ 
$str
´´ '
,
´´' (
	keyColumn
¨¨ 
:
¨¨ 
$str
¨¨ 
,
¨¨  
keyValue
≠≠ 
:
≠≠ 
new
≠≠ 
Guid
≠≠ "
(
≠≠" #
$str
≠≠# I
)
≠≠I J
)
≠≠J K
;
≠≠K L
migrationBuilder
ØØ 
.
ØØ 

DeleteData
ØØ '
(
ØØ' (
table
∞∞ 
:
∞∞ 
$str
∞∞ '
,
∞∞' (
	keyColumn
±± 
:
±± 
$str
±± 
,
±±  
keyValue
≤≤ 
:
≤≤ 
new
≤≤ 
Guid
≤≤ "
(
≤≤" #
$str
≤≤# I
)
≤≤I J
)
≤≤J K
;
≤≤K L
migrationBuilder
¥¥ 
.
¥¥ 

DeleteData
¥¥ '
(
¥¥' (
table
µµ 
:
µµ 
$str
µµ '
,
µµ' (
	keyColumn
∂∂ 
:
∂∂ 
$str
∂∂ 
,
∂∂  
keyValue
∑∑ 
:
∑∑ 
new
∑∑ 
Guid
∑∑ "
(
∑∑" #
$str
∑∑# I
)
∑∑I J
)
∑∑J K
;
∑∑K L
migrationBuilder
ππ 
.
ππ 

DeleteData
ππ '
(
ππ' (
table
∫∫ 
:
∫∫ 
$str
∫∫ '
,
∫∫' (
	keyColumn
ªª 
:
ªª 
$str
ªª 
,
ªª  
keyValue
ºº 
:
ºº 
new
ºº 
Guid
ºº "
(
ºº" #
$str
ºº# I
)
ººI J
)
ººJ K
;
ººK L
migrationBuilder
ææ 
.
ææ 
RenameColumn
ææ )
(
ææ) *
name
øø 
:
øø 
$str
øø $
,
øø$ %
table
¿¿ 
:
¿¿ 
$str
¿¿  
,
¿¿  !
newName
¡¡ 
:
¡¡ 
$str
¡¡ '
)
¡¡' (
;
¡¡( )
migrationBuilder
√√ 
.
√√ 
AlterColumn
√√ (
<
√√( )
double
√√) /
>
√√/ 0
(
√√0 1
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ #
,
ƒƒ# $
table
≈≈ 
:
≈≈ 
$str
≈≈  
,
≈≈  !
type
∆∆ 
:
∆∆ 
$str
∆∆ 
,
∆∆ 
nullable
«« 
:
«« 
false
«« 
,
««  
defaultValue
»» 
:
»» 
$num
»» !
,
»»! "

oldClrType
…… 
:
…… 
typeof
…… "
(
……" #
double
……# )
)
……) *
,
……* +
oldType
   
:
   
$str
    
,
    !
oldNullable
ÀÀ 
:
ÀÀ 
true
ÀÀ !
)
ÀÀ! "
;
ÀÀ" #
migrationBuilder
ÕÕ 
.
ÕÕ 

UpdateData
ÕÕ '
(
ÕÕ' (
table
ŒŒ 
:
ŒŒ 
$str
ŒŒ $
,
ŒŒ$ %
	keyColumn
œœ 
:
œœ 
$str
œœ 
,
œœ  
keyValue
–– 
:
–– 
$str
–– +
,
––+ ,
columns
—— 
:
—— 
new
—— 
[
—— 
]
—— 
{
——  
$str
——! 3
,
——3 4
$str
——5 A
,
——A B
$str
——C Q
,
——Q R
$str
——S b
}
——c d
,
——d e
values
““ 
:
““ 
new
““ 
object
““ "
[
““" #
]
““# $
{
““% &
$str
““' M
,
““M N
new
““O R
DateTime
““S [
(
““[ \
$num
““\ `
,
““` a
$num
““b c
,
““c d
$num
““e g
,
““g h
$num
““i j
,
““j k
$num
““l n
,
““n o
$num
““p r
,
““r s
$num
““t w
,
““w x
DateTimeKind““y Ö
.““Ö Ü
Utc““Ü â
)““â ä
.““ä ã
AddTicks““ã ì
(““ì î
$num““î ò
)““ò ô
,““ô ö
$str““õ Ò
,““Ò Ú
$str““Û ô
}““ö õ
)““õ ú
;““ú ù
migrationBuilder
‘‘ 
.
‘‘ 

InsertData
‘‘ '
(
‘‘' (
table
’’ 
:
’’ 
$str
’’ '
,
’’' (
columns
÷÷ 
:
÷÷ 
new
÷÷ 
[
÷÷ 
]
÷÷ 
{
÷÷  
$str
÷÷! %
,
÷÷% &
$str
÷÷' 4
,
÷÷4 5
$str
÷÷6 D
,
÷÷D E
$str
÷÷F P
,
÷÷P Q
$str
÷÷R ]
,
÷÷] ^
$str
÷÷_ l
,
÷÷l m
$str
÷÷n }
,
÷÷} ~
$str÷÷ â
,÷÷â ä
$str÷÷ã †
,÷÷† °
$str÷÷¢ ±
,÷÷± ≤
$str÷÷≥ ¬
,÷÷¬ √
$str÷÷ƒ —
,÷÷— “
$str÷÷” ﬂ
,÷÷ﬂ ‡
$str÷÷· È
,÷÷È Í
$str÷÷Î ¯
,÷÷¯ ˘
$str÷÷˙ à
,÷÷à â
$str÷÷ä ï
,÷÷ï ñ
$str÷÷ó §
}÷÷• ¶
,÷÷¶ ß
values
◊◊ 
:
◊◊ 
new
◊◊ 
object
◊◊ "
[
◊◊" #
,
◊◊# $
]
◊◊$ %
{
ÿÿ 
{
ŸŸ 
new
ŸŸ 
Guid
ŸŸ 
(
ŸŸ 
$str
ŸŸ E
)
ŸŸE F
,
ŸŸF G
$strŸŸH û
,ŸŸû ü
$strŸŸ† ≈
,ŸŸ≈ ∆
$strŸŸ« œ
,ŸŸœ –
nullŸŸ— ’
,ŸŸ’ ÷
nullŸŸ◊ €
,ŸŸ€ ‹
$strŸŸ› é
,ŸŸé è
$strŸŸê ô
,ŸŸô ö
$strŸŸõ µ
,ŸŸµ ∂
$strŸŸ∑ œ
,ŸŸœ –
$strŸŸ— €
,ŸŸ€ ‹
$strŸŸ› ˘
,ŸŸ˘ ˙
$strŸŸ˚ à
,ŸŸà â
$numŸŸä ã
,ŸŸã å
$strŸŸç ¢
,ŸŸ¢ £
$strŸŸ§ µ
,ŸŸµ ∂
nullŸŸ∑ ª
,ŸŸª º
nullŸŸΩ ¡
}ŸŸ¬ √
,ŸŸ√ ƒ
{
⁄⁄ 
new
⁄⁄ 
Guid
⁄⁄ 
(
⁄⁄ 
$str
⁄⁄ E
)
⁄⁄E F
,
⁄⁄F G
$str⁄⁄H ∞
,⁄⁄∞ ±
$str⁄⁄≤ Ï
,⁄⁄Ï Ì
$str⁄⁄Ó ˜
,⁄⁄˜ ¯
null⁄⁄˘ ˝
,⁄⁄˝ ˛
null⁄⁄ˇ É
,⁄⁄É Ñ
$str⁄⁄Ö ∂
,⁄⁄∂ ∑
$str⁄⁄∏ ¡
,⁄⁄¡ ¬
$str⁄⁄√ ‹
,⁄⁄‹ ›
$str⁄⁄ﬁ ˘
,⁄⁄˘ ˙
$str⁄⁄˚ Ö
,⁄⁄Ö Ü
$str⁄⁄á £
,⁄⁄£ §
$str⁄⁄• ≤
,⁄⁄≤ ≥
$num⁄⁄¥ µ
,⁄⁄µ ∂
$str⁄⁄∑ À
,⁄⁄À Ã
$str⁄⁄Õ €
,⁄⁄€ ‹
null⁄⁄› ·
,⁄⁄· ‚
null⁄⁄„ Á
}⁄⁄Ë È
,⁄⁄È Í
{
€€ 
new
€€ 
Guid
€€ 
(
€€ 
$str
€€ E
)
€€E F
,
€€F G
$str€€H è
,€€è ê
$str€€ë ∫
,€€∫ ª
$str€€º  
,€€  À
null€€Ã –
,€€– —
null€€“ ÷
,€€÷ ◊
$str€€ÿ â
,€€â ä
$str€€ã î
,€€î ï
$str€€ñ ¢
,€€¢ £
$str€€§ ¥
,€€¥ µ
$str€€∂ ¿
,€€¿ ¡
$str€€¬ ÿ
,€€ÿ Ÿ
$str€€⁄ Ê
,€€Ê Á
$num€€Ë È
,€€È Í
$str€€Î ¸
,€€¸ ˝
$str€€˛ ì
,€€ì î
null€€ï ô
,€€ô ö
null€€õ ü
}€€† °
,€€° ¢
{
‹‹ 
new
‹‹ 
Guid
‹‹ 
(
‹‹ 
$str
‹‹ E
)
‹‹E F
,
‹‹F G
$str‹‹H ë
,‹‹ë í
$str‹‹ì Õ
,‹‹Õ Œ
$str‹‹œ ·
,‹‹· ‚
null‹‹„ Á
,‹‹Á Ë
null‹‹È Ì
,‹‹Ì Ó
$str‹‹Ô †
,‹‹† °
$str‹‹¢ ´
,‹‹´ ¨
$str‹‹≠ ∆
,‹‹∆ «
$str‹‹» Ê
,‹‹Ê Á
$str‹‹Ë Ô
,‹‹Ô 
$str‹‹Ò ç
,‹‹ç é
$str‹‹è ú
,‹‹ú ù
$num‹‹û ü
,‹‹ü †
$str‹‹° ø
,‹‹ø ¿
$str‹‹¡ Â
,‹‹Â Ê
null‹‹Á Î
,‹‹Î Ï
null‹‹Ì Ò
}‹‹Ú Û
,‹‹Û Ù
{
›› 
new
›› 
Guid
›› 
(
›› 
$str
›› E
)
››E F
,
››F G
$str››H è
,››è ê
$str››ë À
,››À Ã
$str››Õ ‰
,››‰ Â
null››Ê Í
,››Í Î
null››Ï 
,›› Ò
$str››Ú £
,››£ §
$str››• Æ
,››Æ Ø
$str››∞ …
,››…  
$str››À Ì
,››Ì Ó
$str››Ô ˚
,››˚ ¸
$str››˝ ô
,››ô ö
$str››õ ®
,››® ©
$num››™ ´
,››´ ¨
$str››≠ Õ
,››Õ Œ
$str››œ Ë
,››Ë È
null››Í Ó
,››Ó Ô
null›› Ù
}››ı ˆ
,››ˆ ˜
{
ﬁﬁ 
new
ﬁﬁ 
Guid
ﬁﬁ 
(
ﬁﬁ 
$str
ﬁﬁ E
)
ﬁﬁE F
,
ﬁﬁF G
$strﬁﬁH ë
,ﬁﬁë í
$strﬁﬁì Õ
,ﬁﬁÕ Œ
$strﬁﬁœ ·
,ﬁﬁ· ‚
nullﬁﬁ„ Á
,ﬁﬁÁ Ë
nullﬁﬁÈ Ì
,ﬁﬁÌ Ó
$strﬁﬁÔ †
,ﬁﬁ† °
$strﬁﬁ¢ ´
,ﬁﬁ´ ¨
$strﬁﬁ≠ ∆
,ﬁﬁ∆ «
$strﬁﬁ» –
,ﬁﬁ– —
$strﬁﬁ“ ‹
,ﬁﬁ‹ ›
$strﬁﬁﬁ ˙
,ﬁﬁ˙ ˚
$strﬁﬁ¸ â
,ﬁﬁâ ä
$numﬁﬁã å
,ﬁﬁå ç
$strﬁﬁé π
,ﬁﬁπ ∫
$strﬁﬁª “
,ﬁﬁ“ ”
nullﬁﬁ‘ ÿ
,ﬁﬁÿ Ÿ
nullﬁﬁ⁄ ﬁ
}ﬁﬁﬂ ‡
,ﬁﬁ‡ ·
{
ﬂﬂ 
new
ﬂﬂ 
Guid
ﬂﬂ 
(
ﬂﬂ 
$str
ﬂﬂ E
)
ﬂﬂE F
,
ﬂﬂF G
$strﬂﬂH æ
,ﬂﬂæ ø
$strﬂﬂ¿ ù
,ﬂﬂù û
$strﬂﬂü ©
,ﬂﬂ© ™
nullﬂﬂ´ Ø
,ﬂﬂØ ∞
nullﬂﬂ± µ
,ﬂﬂµ ∂
$strﬂﬂ∑ ˚
,ﬂﬂ˚ ¸
$strﬂﬂ˝ Ü
,ﬂﬂÜ á
$strﬂﬂà ≠
,ﬂﬂ≠ Æ
$strﬂﬂØ ’
,ﬂﬂ’ ÷
$strﬂﬂ◊ ·
,ﬂﬂ· ‚
$strﬂﬂ„ ˇ
,ﬂﬂˇ Ä
$strﬂﬂÅ é
,ﬂﬂé è
$numﬂﬂê ë
,ﬂﬂë í
$strﬂﬂì ®
,ﬂﬂ® ©
$strﬂﬂ™ ø
,ﬂﬂø ¿
nullﬂﬂ¡ ≈
,ﬂﬂ≈ ∆
nullﬂﬂ« À
}ﬂﬂÃ Õ
,ﬂﬂÕ Œ
{
‡‡ 
new
‡‡ 
Guid
‡‡ 
(
‡‡ 
$str
‡‡ E
)
‡‡E F
,
‡‡F G
$str
‡‡H s
,
‡‡s t
$str‡‡u ô
,‡‡ô ö
$str‡‡õ •
,‡‡• ¶
null‡‡ß ´
,‡‡´ ¨
null‡‡≠ ±
,‡‡± ≤
$str‡‡≥ ˘
,‡‡˘ ˙
$str‡‡˚ Ñ
,‡‡Ñ Ö
$str‡‡Ü ü
,‡‡ü †
$str‡‡° Œ
,‡‡Œ œ
$str‡‡– ‹
,‡‡‹ ›
$str‡‡ﬁ ˙
,‡‡˙ ˚
$str‡‡¸ â
,‡‡â ä
$num‡‡ã å
,‡‡å ç
$str‡‡é ª
,‡‡ª º
$str‡‡Ω ›
,‡‡› ﬁ
null‡‡ﬂ „
,‡‡„ ‰
null‡‡Â È
}‡‡Í Î
,‡‡Î Ï
{
·· 
new
·· 
Guid
·· 
(
·· 
$str
·· E
)
··E F
,
··F G
$str··H Ã
,··Ã Õ
$str··Œ à
,··à â
$str··ä ö
,··ö õ
null··ú †
,··† °
null··¢ ¶
,··¶ ß
$str··® Ÿ
,··Ÿ ⁄
$str··€ ‰
,··‰ Â
$str··Ê ˇ
,··ˇ Ä
$str··Å â
,··â ä
$str··ã ï
,··ï ñ
$str··ó ≥
,··≥ ¥
$str··µ ¬
,··¬ √
$num··ƒ ≈
,··≈ ∆
$str··« ﬂ
,··ﬂ ‡
$str··· ˆ
,··ˆ ˜
null··¯ ¸
,··¸ ˝
null··˛ Ç
}··É Ñ
,··Ñ Ö
{
‚‚ 
new
‚‚ 
Guid
‚‚ 
(
‚‚ 
$str
‚‚ E
)
‚‚E F
,
‚‚F G
$str‚‚H Ñ
,‚‚Ñ Ö
$str‚‚Ü ¿
,‚‚¿ ¡
$str‚‚¬ “
,‚‚“ ”
null‚‚‘ ÿ
,‚‚ÿ Ÿ
null‚‚⁄ ﬁ
,‚‚ﬁ ﬂ
$str‚‚‡ ë
,‚‚ë í
$str‚‚ì ú
,‚‚ú ù
$str‚‚û ∑
,‚‚∑ ∏
$str‚‚π ¡
,‚‚¡ ¬
$str‚‚√ Õ
,‚‚Õ Œ
$str‚‚œ Î
,‚‚Î Ï
$str‚‚Ì ˙
,‚‚˙ ˚
$num‚‚¸ ˝
,‚‚˝ ˛
$str‚‚ˇ ê
,‚‚ê ë
$str‚‚í °
,‚‚° ¢
null‚‚£ ß
,‚‚ß ®
null‚‚© ≠
}‚‚Æ Ø
,‚‚Ø ∞
{
„„ 
new
„„ 
Guid
„„ 
(
„„ 
$str
„„ E
)
„„E F
,
„„F G
$str„„H ®
,„„® ©
$str„„™ ÿ
,„„ÿ Ÿ
$str„„⁄ ‰
,„„‰ Â
null„„Ê Í
,„„Í Î
null„„Ï 
,„„ Ò
$str„„Ú £
,„„£ §
$str„„• Æ
,„„Æ Ø
$str„„∞  
,„„  À
$str„„Ã Û
,„„Û Ù
$str„„ı ˇ
,„„ˇ Ä
$str„„Å ù
,„„ù û
$str„„ü ¨
,„„¨ ≠
$num„„Æ Ø
,„„Ø ∞
$str„„± ∆
,„„∆ «
$str„„» ÿ
,„„ÿ Ÿ
null„„⁄ ﬁ
,„„ﬁ ﬂ
null„„‡ ‰
}„„Â Ê
,„„Ê Á
{
‰‰ 
new
‰‰ 
Guid
‰‰ 
(
‰‰ 
$str
‰‰ E
)
‰‰E F
,
‰‰F G
$str‰‰H ”
,‰‰” ‘
$str‰‰’ è
,‰‰è ê
$str‰‰ë ô
,‰‰ô ö
null‰‰õ ü
,‰‰ü †
null‰‰° •
,‰‰• ¶
$str‰‰ß ÿ
,‰‰ÿ Ÿ
$str‰‰⁄ „
,‰‰„ ‰
$str‰‰Â °
,‰‰° ¢
$str‰‰£ ∑
,‰‰∑ ∏
$str‰‰π √
,‰‰√ ƒ
$str‰‰≈ ·
,‰‰· ‚
$str‰‰„ 
,‰‰ Ò
$num‰‰Ú Û
,‰‰Û Ù
$str‰‰ı ñ
,‰‰ñ ó
$str‰‰ò π
,‰‰π ∫
null‰‰ª ø
,‰‰ø ¿
null‰‰¡ ≈
}‰‰∆ «
,‰‰« »
{
ÂÂ 
new
ÂÂ 
Guid
ÂÂ 
(
ÂÂ 
$str
ÂÂ E
)
ÂÂE F
,
ÂÂF G
$strÂÂH è
,ÂÂè ê
$strÂÂë À
,ÂÂÀ Ã
$strÂÂÕ ‰
,ÂÂ‰ Â
nullÂÂÊ Í
,ÂÂÍ Î
nullÂÂÏ 
,ÂÂ Ò
$strÂÂÚ £
,ÂÂ£ §
$strÂÂ• Æ
,ÂÂÆ Ø
$strÂÂ∞ …
,ÂÂ…  
$strÂÂÀ Ò
,ÂÂÒ Ú
$strÂÂÛ ¸
,ÂÂ¸ ˝
$strÂÂ˛ ö
,ÂÂö õ
$strÂÂú ©
,ÂÂ© ™
$numÂÂ´ ¨
,ÂÂ¨ ≠
$strÂÂÆ Œ
,ÂÂŒ œ
$strÂÂ– Ë
,ÂÂË È
nullÂÂÍ Ó
,ÂÂÓ Ô
nullÂÂ Ù
}ÂÂı ˆ
}
ÊÊ 
)
ÊÊ 
;
ÊÊ 
}
ÁÁ 	
}
ËË 
}ÈÈ í•
ëD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240720082347_AddColumnTotelEarnedIntoTableCourse.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class /
#AddColumnTotelEarnedIntoTableCourse <
:= >
	Migration? H
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 
	AddColumnQQ &
<QQ& '
doubleQQ' -
>QQ- .
(QQ. /
nameRR 
:RR 
$strRR #
,RR# $
tableSS 
:SS 
$strSS  
,SS  !
typeTT 
:TT 
$strTT 
,TT 
nullableUU 
:UU 
falseUU 
,UU  
defaultValueVV 
:VV 
$numVV !
)VV! "
;VV" #
migrationBuilderXX 
.XX 

UpdateDataXX '
(XX' (
tableYY 
:YY 
$strYY $
,YY$ %
	keyColumnZZ 
:ZZ 
$strZZ 
,ZZ  
keyValue[[ 
:[[ 
$str[[ +
,[[+ ,
columns\\ 
:\\ 
new\\ 
[\\ 
]\\ 
{\\  
$str\\! 3
,\\3 4
$str\\5 A
,\\A B
$str\\C Q
,\\Q R
$str\\S b
}\\c d
,\\d e
values]] 
:]] 
new]] 
object]] "
[]]" #
]]]# $
{]]% &
$str]]' M
,]]M N
new]]O R
DateTime]]S [
(]][ \
$num]]\ `
,]]` a
$num]]b c
,]]c d
$num]]e g
,]]g h
$num]]i j
,]]j k
$num]]l n
,]]n o
$num]]p r
,]]r s
$num]]t w
,]]w x
DateTimeKind	]]y Ö
.
]]Ö Ü
Utc
]]Ü â
)
]]â ä
.
]]ä ã
AddTicks
]]ã ì
(
]]ì î
$num
]]î ò
)
]]ò ô
,
]]ô ö
$str
]]õ Ò
,
]]Ò Ú
$str
]]Û ô
}
]]ö õ
)
]]õ ú
;
]]ú ù
migrationBuilder__ 
.__ 

InsertData__ '
(__' (
table`` 
:`` 
$str`` '
,``' (
columnsaa 
:aa 
newaa 
[aa 
]aa 
{aa  
$straa! %
,aa% &
$straa' 4
,aa4 5
$straa6 D
,aaD E
$straaF P
,aaP Q
$straaR ]
,aa] ^
$straa_ l
,aal m
$straan }
,aa} ~
$str	aa â
,
aaâ ä
$str
aaã †
,
aa† °
$str
aa¢ ±
,
aa± ≤
$str
aa≥ ¬
,
aa¬ √
$str
aaƒ —
,
aa— “
$str
aa” ﬂ
,
aaﬂ ‡
$str
aa· È
,
aaÈ Í
$str
aaÎ ¯
,
aa¯ ˘
$str
aa˙ à
,
aaà â
$str
aaä ï
,
aaï ñ
$str
aaó §
}
aa• ¶
,
aa¶ ß
valuesbb 
:bb 
newbb 
objectbb "
[bb" #
,bb# $
]bb$ %
{cc 
{dd 
newdd 
Guiddd 
(dd 
$strdd E
)ddE F
,ddF G
$str	ddH û
,
ddû ü
$str
dd† ≈
,
dd≈ ∆
$str
dd« œ
,
ddœ –
null
dd— ’
,
dd’ ÷
null
dd◊ €
,
dd€ ‹
$str
dd› é
,
ddé è
$str
ddê ô
,
ddô ö
$str
ddõ µ
,
ddµ ∂
$str
dd∑ œ
,
ddœ –
$str
dd— €
,
dd€ ‹
$str
dd› ˘
,
dd˘ ˙
$str
dd˚ à
,
ddà â
$num
ddä ã
,
ddã å
$str
ddç ¢
,
dd¢ £
$str
dd§ µ
,
ddµ ∂
null
dd∑ ª
,
ddª º
null
ddΩ ¡
}
dd¬ √
,
dd√ ƒ
{ee 
newee 
Guidee 
(ee 
$stree E
)eeE F
,eeF G
$str	eeH ∞
,
ee∞ ±
$str
ee≤ Ï
,
eeÏ Ì
$str
eeÓ ˜
,
ee˜ ¯
null
ee˘ ˝
,
ee˝ ˛
null
eeˇ É
,
eeÉ Ñ
$str
eeÖ ∂
,
ee∂ ∑
$str
ee∏ ¡
,
ee¡ ¬
$str
ee√ ‹
,
ee‹ ›
$str
eeﬁ ˘
,
ee˘ ˙
$str
ee˚ Ö
,
eeÖ Ü
$str
eeá £
,
ee£ §
$str
ee• ≤
,
ee≤ ≥
$num
ee¥ µ
,
eeµ ∂
$str
ee∑ À
,
eeÀ Ã
$str
eeÕ €
,
ee€ ‹
null
ee› ·
,
ee· ‚
null
ee„ Á
}
eeË È
,
eeÈ Í
{ff 
newff 
Guidff 
(ff 
$strff E
)ffE F
,ffF G
$str	ffH è
,
ffè ê
$str
ffë ∫
,
ff∫ ª
$str
ffº  
,
ff  À
null
ffÃ –
,
ff– —
null
ff“ ÷
,
ff÷ ◊
$str
ffÿ â
,
ffâ ä
$str
ffã î
,
ffî ï
$str
ffñ ¢
,
ff¢ £
$str
ff§ ¥
,
ff¥ µ
$str
ff∂ ¿
,
ff¿ ¡
$str
ff¬ ÿ
,
ffÿ Ÿ
$str
ff⁄ Ê
,
ffÊ Á
$num
ffË È
,
ffÈ Í
$str
ffÎ ¸
,
ff¸ ˝
$str
ff˛ ì
,
ffì î
null
ffï ô
,
ffô ö
null
ffõ ü
}
ff† °
,
ff° ¢
{gg 
newgg 
Guidgg 
(gg 
$strgg E
)ggE F
,ggF G
$str	ggH ë
,
ggë í
$str
ggì Õ
,
ggÕ Œ
$str
ggœ ·
,
gg· ‚
null
gg„ Á
,
ggÁ Ë
null
ggÈ Ì
,
ggÌ Ó
$str
ggÔ †
,
gg† °
$str
gg¢ ´
,
gg´ ¨
$str
gg≠ ∆
,
gg∆ «
$str
gg» Ê
,
ggÊ Á
$str
ggË Ô
,
ggÔ 
$str
ggÒ ç
,
ggç é
$str
ggè ú
,
ggú ù
$num
ggû ü
,
ggü †
$str
gg° ø
,
ggø ¿
$str
gg¡ Â
,
ggÂ Ê
null
ggÁ Î
,
ggÎ Ï
null
ggÌ Ò
}
ggÚ Û
,
ggÛ Ù
{hh 
newhh 
Guidhh 
(hh 
$strhh E
)hhE F
,hhF G
$str	hhH è
,
hhè ê
$str
hhë À
,
hhÀ Ã
$str
hhÕ ‰
,
hh‰ Â
null
hhÊ Í
,
hhÍ Î
null
hhÏ 
,
hh Ò
$str
hhÚ £
,
hh£ §
$str
hh• Æ
,
hhÆ Ø
$str
hh∞ …
,
hh…  
$str
hhÀ Ì
,
hhÌ Ó
$str
hhÔ ˚
,
hh˚ ¸
$str
hh˝ ô
,
hhô ö
$str
hhõ ®
,
hh® ©
$num
hh™ ´
,
hh´ ¨
$str
hh≠ Õ
,
hhÕ Œ
$str
hhœ Ë
,
hhË È
null
hhÍ Ó
,
hhÓ Ô
null
hh Ù
}
hhı ˆ
,
hhˆ ˜
{ii 
newii 
Guidii 
(ii 
$strii E
)iiE F
,iiF G
$str	iiH ë
,
iië í
$str
iiì Õ
,
iiÕ Œ
$str
iiœ ·
,
ii· ‚
null
ii„ Á
,
iiÁ Ë
null
iiÈ Ì
,
iiÌ Ó
$str
iiÔ †
,
ii† °
$str
ii¢ ´
,
ii´ ¨
$str
ii≠ ∆
,
ii∆ «
$str
ii» –
,
ii– —
$str
ii“ ‹
,
ii‹ ›
$str
iiﬁ ˙
,
ii˙ ˚
$str
ii¸ â
,
iiâ ä
$num
iiã å
,
iiå ç
$str
iié π
,
iiπ ∫
$str
iiª “
,
ii“ ”
null
ii‘ ÿ
,
iiÿ Ÿ
null
ii⁄ ﬁ
}
iiﬂ ‡
,
ii‡ ·
{jj 
newjj 
Guidjj 
(jj 
$strjj E
)jjE F
,jjF G
$str	jjH æ
,
jjæ ø
$str
jj¿ ù
,
jjù û
$str
jjü ©
,
jj© ™
null
jj´ Ø
,
jjØ ∞
null
jj± µ
,
jjµ ∂
$str
jj∑ ˚
,
jj˚ ¸
$str
jj˝ Ü
,
jjÜ á
$str
jjà ≠
,
jj≠ Æ
$str
jjØ ’
,
jj’ ÷
$str
jj◊ ·
,
jj· ‚
$str
jj„ ˇ
,
jjˇ Ä
$str
jjÅ é
,
jjé è
$num
jjê ë
,
jjë í
$str
jjì ®
,
jj® ©
$str
jj™ ø
,
jjø ¿
null
jj¡ ≈
,
jj≈ ∆
null
jj« À
}
jjÃ Õ
,
jjÕ Œ
{kk 
newkk 
Guidkk 
(kk 
$strkk E
)kkE F
,kkF G
$strkkH s
,kks t
$str	kku ô
,
kkô ö
$str
kkõ •
,
kk• ¶
null
kkß ´
,
kk´ ¨
null
kk≠ ±
,
kk± ≤
$str
kk≥ ˘
,
kk˘ ˙
$str
kk˚ Ñ
,
kkÑ Ö
$str
kkÜ ü
,
kkü †
$str
kk° Œ
,
kkŒ œ
$str
kk– ‹
,
kk‹ ›
$str
kkﬁ ˙
,
kk˙ ˚
$str
kk¸ â
,
kkâ ä
$num
kkã å
,
kkå ç
$str
kké ª
,
kkª º
$str
kkΩ ›
,
kk› ﬁ
null
kkﬂ „
,
kk„ ‰
null
kkÂ È
}
kkÍ Î
,
kkÎ Ï
{ll 
newll 
Guidll 
(ll 
$strll E
)llE F
,llF G
$str	llH Ã
,
llÃ Õ
$str
llŒ à
,
llà â
$str
llä ö
,
llö õ
null
llú †
,
ll† °
null
ll¢ ¶
,
ll¶ ß
$str
ll® Ÿ
,
llŸ ⁄
$str
ll€ ‰
,
ll‰ Â
$str
llÊ ˇ
,
llˇ Ä
$str
llÅ â
,
llâ ä
$str
llã ï
,
llï ñ
$str
lló ≥
,
ll≥ ¥
$str
llµ ¬
,
ll¬ √
$num
llƒ ≈
,
ll≈ ∆
$str
ll« ﬂ
,
llﬂ ‡
$str
ll· ˆ
,
llˆ ˜
null
ll¯ ¸
,
ll¸ ˝
null
ll˛ Ç
}
llÉ Ñ
,
llÑ Ö
{mm 
newmm 
Guidmm 
(mm 
$strmm E
)mmE F
,mmF G
$str	mmH Ñ
,
mmÑ Ö
$str
mmÜ ¿
,
mm¿ ¡
$str
mm¬ “
,
mm“ ”
null
mm‘ ÿ
,
mmÿ Ÿ
null
mm⁄ ﬁ
,
mmﬁ ﬂ
$str
mm‡ ë
,
mmë í
$str
mmì ú
,
mmú ù
$str
mmû ∑
,
mm∑ ∏
$str
mmπ ¡
,
mm¡ ¬
$str
mm√ Õ
,
mmÕ Œ
$str
mmœ Î
,
mmÎ Ï
$str
mmÌ ˙
,
mm˙ ˚
$num
mm¸ ˝
,
mm˝ ˛
$str
mmˇ ê
,
mmê ë
$str
mmí °
,
mm° ¢
null
mm£ ß
,
mmß ®
null
mm© ≠
}
mmÆ Ø
,
mmØ ∞
{nn 
newnn 
Guidnn 
(nn 
$strnn E
)nnE F
,nnF G
$str	nnH ®
,
nn® ©
$str
nn™ ÿ
,
nnÿ Ÿ
$str
nn⁄ ‰
,
nn‰ Â
null
nnÊ Í
,
nnÍ Î
null
nnÏ 
,
nn Ò
$str
nnÚ £
,
nn£ §
$str
nn• Æ
,
nnÆ Ø
$str
nn∞  
,
nn  À
$str
nnÃ Û
,
nnÛ Ù
$str
nnı ˇ
,
nnˇ Ä
$str
nnÅ ù
,
nnù û
$str
nnü ¨
,
nn¨ ≠
$num
nnÆ Ø
,
nnØ ∞
$str
nn± ∆
,
nn∆ «
$str
nn» ÿ
,
nnÿ Ÿ
null
nn⁄ ﬁ
,
nnﬁ ﬂ
null
nn‡ ‰
}
nnÂ Ê
,
nnÊ Á
{oo 
newoo 
Guidoo 
(oo 
$stroo E
)ooE F
,ooF G
$str	ooH ”
,
oo” ‘
$str
oo’ è
,
ooè ê
$str
ooë ô
,
ooô ö
null
ooõ ü
,
ooü †
null
oo° •
,
oo• ¶
$str
ooß ÿ
,
ooÿ Ÿ
$str
oo⁄ „
,
oo„ ‰
$str
ooÂ °
,
oo° ¢
$str
oo£ ∑
,
oo∑ ∏
$str
ooπ √
,
oo√ ƒ
$str
oo≈ ·
,
oo· ‚
$str
oo„ 
,
oo Ò
$num
ooÚ Û
,
ooÛ Ù
$str
ooı ñ
,
ooñ ó
$str
ooò π
,
ooπ ∫
null
ooª ø
,
ooø ¿
null
oo¡ ≈
}
oo∆ «
,
oo« »
{pp 
newpp 
Guidpp 
(pp 
$strpp E
)ppE F
,ppF G
$str	ppH è
,
ppè ê
$str
ppë À
,
ppÀ Ã
$str
ppÕ ‰
,
pp‰ Â
null
ppÊ Í
,
ppÍ Î
null
ppÏ 
,
pp Ò
$str
ppÚ £
,
pp£ §
$str
pp• Æ
,
ppÆ Ø
$str
pp∞ …
,
pp…  
$str
ppÀ Ò
,
ppÒ Ú
$str
ppÛ ¸
,
pp¸ ˝
$str
pp˛ ö
,
ppö õ
$str
ppú ©
,
pp© ™
$num
pp´ ¨
,
pp¨ ≠
$str
ppÆ Œ
,
ppŒ œ
$str
pp– Ë
,
ppË È
null
ppÍ Ó
,
ppÓ Ô
null
pp Ù
}
ppı ˆ
}qq 
)qq 
;qq 
}rr 	
	protecteduu 
overrideuu 
voiduu 
Downuu  $
(uu$ %
MigrationBuilderuu% 5
migrationBuilderuu6 F
)uuF G
{vv 	
migrationBuilderww 
.ww 

DeleteDataww '
(ww' (
tablexx 
:xx 
$strxx '
,xx' (
	keyColumnyy 
:yy 
$stryy 
,yy  
keyValuezz 
:zz 
newzz 
Guidzz "
(zz" #
$strzz# I
)zzI J
)zzJ K
;zzK L
migrationBuilder|| 
.|| 

DeleteData|| '
(||' (
table}} 
:}} 
$str}} '
,}}' (
	keyColumn~~ 
:~~ 
$str~~ 
,~~  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder
ÅÅ 
.
ÅÅ 

DeleteData
ÅÅ '
(
ÅÅ' (
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ '
,
ÇÇ' (
	keyColumn
ÉÉ 
:
ÉÉ 
$str
ÉÉ 
,
ÉÉ  
keyValue
ÑÑ 
:
ÑÑ 
new
ÑÑ 
Guid
ÑÑ "
(
ÑÑ" #
$str
ÑÑ# I
)
ÑÑI J
)
ÑÑJ K
;
ÑÑK L
migrationBuilder
ÜÜ 
.
ÜÜ 

DeleteData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá '
,
áá' (
	keyColumn
àà 
:
àà 
$str
àà 
,
àà  
keyValue
ââ 
:
ââ 
new
ââ 
Guid
ââ "
(
ââ" #
$str
ââ# I
)
ââI J
)
ââJ K
;
ââK L
migrationBuilder
ãã 
.
ãã 

DeleteData
ãã '
(
ãã' (
table
åå 
:
åå 
$str
åå '
,
åå' (
	keyColumn
çç 
:
çç 
$str
çç 
,
çç  
keyValue
éé 
:
éé 
new
éé 
Guid
éé "
(
éé" #
$str
éé# I
)
ééI J
)
ééJ K
;
ééK L
migrationBuilder
êê 
.
êê 

DeleteData
êê '
(
êê' (
table
ëë 
:
ëë 
$str
ëë '
,
ëë' (
	keyColumn
íí 
:
íí 
$str
íí 
,
íí  
keyValue
ìì 
:
ìì 
new
ìì 
Guid
ìì "
(
ìì" #
$str
ìì# I
)
ììI J
)
ììJ K
;
ììK L
migrationBuilder
ïï 
.
ïï 

DeleteData
ïï '
(
ïï' (
table
ññ 
:
ññ 
$str
ññ '
,
ññ' (
	keyColumn
óó 
:
óó 
$str
óó 
,
óó  
keyValue
òò 
:
òò 
new
òò 
Guid
òò "
(
òò" #
$str
òò# I
)
òòI J
)
òòJ K
;
òòK L
migrationBuilder
öö 
.
öö 

DeleteData
öö '
(
öö' (
table
õõ 
:
õõ 
$str
õõ '
,
õõ' (
	keyColumn
úú 
:
úú 
$str
úú 
,
úú  
keyValue
ùù 
:
ùù 
new
ùù 
Guid
ùù "
(
ùù" #
$str
ùù# I
)
ùùI J
)
ùùJ K
;
ùùK L
migrationBuilder
üü 
.
üü 

DeleteData
üü '
(
üü' (
table
†† 
:
†† 
$str
†† '
,
††' (
	keyColumn
°° 
:
°° 
$str
°° 
,
°°  
keyValue
¢¢ 
:
¢¢ 
new
¢¢ 
Guid
¢¢ "
(
¢¢" #
$str
¢¢# I
)
¢¢I J
)
¢¢J K
;
¢¢K L
migrationBuilder
§§ 
.
§§ 

DeleteData
§§ '
(
§§' (
table
•• 
:
•• 
$str
•• '
,
••' (
	keyColumn
¶¶ 
:
¶¶ 
$str
¶¶ 
,
¶¶  
keyValue
ßß 
:
ßß 
new
ßß 
Guid
ßß "
(
ßß" #
$str
ßß# I
)
ßßI J
)
ßßJ K
;
ßßK L
migrationBuilder
©© 
.
©© 

DeleteData
©© '
(
©©' (
table
™™ 
:
™™ 
$str
™™ '
,
™™' (
	keyColumn
´´ 
:
´´ 
$str
´´ 
,
´´  
keyValue
¨¨ 
:
¨¨ 
new
¨¨ 
Guid
¨¨ "
(
¨¨" #
$str
¨¨# I
)
¨¨I J
)
¨¨J K
;
¨¨K L
migrationBuilder
ÆÆ 
.
ÆÆ 

DeleteData
ÆÆ '
(
ÆÆ' (
table
ØØ 
:
ØØ 
$str
ØØ '
,
ØØ' (
	keyColumn
∞∞ 
:
∞∞ 
$str
∞∞ 
,
∞∞  
keyValue
±± 
:
±± 
new
±± 
Guid
±± "
(
±±" #
$str
±±# I
)
±±I J
)
±±J K
;
±±K L
migrationBuilder
≥≥ 
.
≥≥ 

DeleteData
≥≥ '
(
≥≥' (
table
¥¥ 
:
¥¥ 
$str
¥¥ '
,
¥¥' (
	keyColumn
µµ 
:
µµ 
$str
µµ 
,
µµ  
keyValue
∂∂ 
:
∂∂ 
new
∂∂ 
Guid
∂∂ "
(
∂∂" #
$str
∂∂# I
)
∂∂I J
)
∂∂J K
;
∂∂K L
migrationBuilder
∏∏ 
.
∏∏ 

DropColumn
∏∏ '
(
∏∏' (
name
ππ 
:
ππ 
$str
ππ #
,
ππ# $
table
∫∫ 
:
∫∫ 
$str
∫∫  
)
∫∫  !
;
∫∫! "
migrationBuilder
ºº 
.
ºº 

UpdateData
ºº '
(
ºº' (
table
ΩΩ 
:
ΩΩ 
$str
ΩΩ $
,
ΩΩ$ %
	keyColumn
ææ 
:
ææ 
$str
ææ 
,
ææ  
keyValue
øø 
:
øø 
$str
øø +
,
øø+ ,
columns
¿¿ 
:
¿¿ 
new
¿¿ 
[
¿¿ 
]
¿¿ 
{
¿¿  
$str
¿¿! 3
,
¿¿3 4
$str
¿¿5 A
,
¿¿A B
$str
¿¿C Q
,
¿¿Q R
$str
¿¿S b
}
¿¿c d
,
¿¿d e
values
¡¡ 
:
¡¡ 
new
¡¡ 
object
¡¡ "
[
¡¡" #
]
¡¡# $
{
¡¡% &
$str
¡¡' M
,
¡¡M N
new
¡¡O R
DateTime
¡¡S [
(
¡¡[ \
$num
¡¡\ `
,
¡¡` a
$num
¡¡b c
,
¡¡c d
$num
¡¡e g
,
¡¡g h
$num
¡¡i j
,
¡¡j k
$num
¡¡l n
,
¡¡n o
$num
¡¡p r
,
¡¡r s
$num
¡¡t w
,
¡¡w x
DateTimeKind¡¡y Ö
.¡¡Ö Ü
Utc¡¡Ü â
)¡¡â ä
.¡¡ä ã
AddTicks¡¡ã ì
(¡¡ì î
$num¡¡î ò
)¡¡ò ô
,¡¡ô ö
$str¡¡õ Ò
,¡¡Ò Ú
$str¡¡Û ô
}¡¡ö õ
)¡¡õ ú
;¡¡ú ù
migrationBuilder
√√ 
.
√√ 

InsertData
√√ '
(
√√' (
table
ƒƒ 
:
ƒƒ 
$str
ƒƒ '
,
ƒƒ' (
columns
≈≈ 
:
≈≈ 
new
≈≈ 
[
≈≈ 
]
≈≈ 
{
≈≈  
$str
≈≈! %
,
≈≈% &
$str
≈≈' 4
,
≈≈4 5
$str
≈≈6 D
,
≈≈D E
$str
≈≈F P
,
≈≈P Q
$str
≈≈R ]
,
≈≈] ^
$str
≈≈_ l
,
≈≈l m
$str
≈≈n }
,
≈≈} ~
$str≈≈ â
,≈≈â ä
$str≈≈ã †
,≈≈† °
$str≈≈¢ ±
,≈≈± ≤
$str≈≈≥ ¬
,≈≈¬ √
$str≈≈ƒ —
,≈≈— “
$str≈≈” ﬂ
,≈≈ﬂ ‡
$str≈≈· È
,≈≈È Í
$str≈≈Î ¯
,≈≈¯ ˘
$str≈≈˙ à
,≈≈à â
$str≈≈ä ï
,≈≈ï ñ
$str≈≈ó §
}≈≈• ¶
,≈≈¶ ß
values
∆∆ 
:
∆∆ 
new
∆∆ 
object
∆∆ "
[
∆∆" #
,
∆∆# $
]
∆∆$ %
{
«« 
{
»» 
new
»» 
Guid
»» 
(
»» 
$str
»» E
)
»»E F
,
»»F G
$str
»»H s
,
»»s t
$str»»u ô
,»»ô ö
$str»»õ •
,»»• ¶
null»»ß ´
,»»´ ¨
null»»≠ ±
,»»± ≤
$str»»≥ ˘
,»»˘ ˙
$str»»˚ Ñ
,»»Ñ Ö
$str»»Ü ü
,»»ü †
$str»»° Œ
,»»Œ œ
$str»»– ‹
,»»‹ ›
$str»»ﬁ ˙
,»»˙ ˚
$str»»¸ â
,»»â ä
$num»»ã å
,»»å ç
$str»»é ª
,»»ª º
$str»»Ω ›
,»»› ﬁ
null»»ﬂ „
,»»„ ‰
null»»Â È
}»»Í Î
,»»Î Ï
{
…… 
new
…… 
Guid
…… 
(
…… 
$str
…… E
)
……E F
,
……F G
$str……H ”
,……” ‘
$str……’ è
,……è ê
$str……ë ô
,……ô ö
null……õ ü
,……ü †
null……° •
,……• ¶
$str……ß ÿ
,……ÿ Ÿ
$str……⁄ „
,……„ ‰
$str……Â °
,……° ¢
$str……£ ∑
,……∑ ∏
$str……π √
,……√ ƒ
$str……≈ ·
,……· ‚
$str……„ 
,…… Ò
$num……Ú Û
,……Û Ù
$str……ı ñ
,……ñ ó
$str……ò π
,……π ∫
null……ª ø
,……ø ¿
null……¡ ≈
}……∆ «
,……« »
{
   
new
   
Guid
   
(
   
$str
   E
)
  E F
,
  F G
$str  H è
,  è ê
$str  ë ∫
,  ∫ ª
$str  º  
,    À
null  Ã –
,  – —
null  “ ÷
,  ÷ ◊
$str  ÿ â
,  â ä
$str  ã î
,  î ï
$str  ñ ¢
,  ¢ £
$str  § ¥
,  ¥ µ
$str  ∂ ¿
,  ¿ ¡
$str  ¬ ÿ
,  ÿ Ÿ
$str  ⁄ Ê
,  Ê Á
$num  Ë È
,  È Í
$str  Î ¸
,  ¸ ˝
$str  ˛ ì
,  ì î
null  ï ô
,  ô ö
null  õ ü
}  † °
,  ° ¢
{
ÀÀ 
new
ÀÀ 
Guid
ÀÀ 
(
ÀÀ 
$str
ÀÀ E
)
ÀÀE F
,
ÀÀF G
$strÀÀH Ñ
,ÀÀÑ Ö
$strÀÀÜ ¿
,ÀÀ¿ ¡
$strÀÀ¬ “
,ÀÀ“ ”
nullÀÀ‘ ÿ
,ÀÀÿ Ÿ
nullÀÀ⁄ ﬁ
,ÀÀﬁ ﬂ
$strÀÀ‡ ë
,ÀÀë í
$strÀÀì ú
,ÀÀú ù
$strÀÀû ∑
,ÀÀ∑ ∏
$strÀÀπ ¡
,ÀÀ¡ ¬
$strÀÀ√ Õ
,ÀÀÕ Œ
$strÀÀœ Î
,ÀÀÎ Ï
$strÀÀÌ ˙
,ÀÀ˙ ˚
$numÀÀ¸ ˝
,ÀÀ˝ ˛
$strÀÀˇ ê
,ÀÀê ë
$strÀÀí °
,ÀÀ° ¢
nullÀÀ£ ß
,ÀÀß ®
nullÀÀ© ≠
}ÀÀÆ Ø
,ÀÀØ ∞
{
ÃÃ 
new
ÃÃ 
Guid
ÃÃ 
(
ÃÃ 
$str
ÃÃ E
)
ÃÃE F
,
ÃÃF G
$strÃÃH û
,ÃÃû ü
$strÃÃ† ≈
,ÃÃ≈ ∆
$strÃÃ« œ
,ÃÃœ –
nullÃÃ— ’
,ÃÃ’ ÷
nullÃÃ◊ €
,ÃÃ€ ‹
$strÃÃ› é
,ÃÃé è
$strÃÃê ô
,ÃÃô ö
$strÃÃõ µ
,ÃÃµ ∂
$strÃÃ∑ œ
,ÃÃœ –
$strÃÃ— €
,ÃÃ€ ‹
$strÃÃ› ˘
,ÃÃ˘ ˙
$strÃÃ˚ à
,ÃÃà â
$numÃÃä ã
,ÃÃã å
$strÃÃç ¢
,ÃÃ¢ £
$strÃÃ§ µ
,ÃÃµ ∂
nullÃÃ∑ ª
,ÃÃª º
nullÃÃΩ ¡
}ÃÃ¬ √
,ÃÃ√ ƒ
{
ÕÕ 
new
ÕÕ 
Guid
ÕÕ 
(
ÕÕ 
$str
ÕÕ E
)
ÕÕE F
,
ÕÕF G
$strÕÕH æ
,ÕÕæ ø
$strÕÕ¿ ù
,ÕÕù û
$strÕÕü ©
,ÕÕ© ™
nullÕÕ´ Ø
,ÕÕØ ∞
nullÕÕ± µ
,ÕÕµ ∂
$strÕÕ∑ ˚
,ÕÕ˚ ¸
$strÕÕ˝ Ü
,ÕÕÜ á
$strÕÕà ≠
,ÕÕ≠ Æ
$strÕÕØ ’
,ÕÕ’ ÷
$strÕÕ◊ ·
,ÕÕ· ‚
$strÕÕ„ ˇ
,ÕÕˇ Ä
$strÕÕÅ é
,ÕÕé è
$numÕÕê ë
,ÕÕë í
$strÕÕì ®
,ÕÕ® ©
$strÕÕ™ ø
,ÕÕø ¿
nullÕÕ¡ ≈
,ÕÕ≈ ∆
nullÕÕ« À
}ÕÕÃ Õ
,ÕÕÕ Œ
{
ŒŒ 
new
ŒŒ 
Guid
ŒŒ 
(
ŒŒ 
$str
ŒŒ E
)
ŒŒE F
,
ŒŒF G
$strŒŒH ®
,ŒŒ® ©
$strŒŒ™ ÿ
,ŒŒÿ Ÿ
$strŒŒ⁄ ‰
,ŒŒ‰ Â
nullŒŒÊ Í
,ŒŒÍ Î
nullŒŒÏ 
,ŒŒ Ò
$strŒŒÚ £
,ŒŒ£ §
$strŒŒ• Æ
,ŒŒÆ Ø
$strŒŒ∞  
,ŒŒ  À
$strŒŒÃ Û
,ŒŒÛ Ù
$strŒŒı ˇ
,ŒŒˇ Ä
$strŒŒÅ ù
,ŒŒù û
$strŒŒü ¨
,ŒŒ¨ ≠
$numŒŒÆ Ø
,ŒŒØ ∞
$strŒŒ± ∆
,ŒŒ∆ «
$strŒŒ» ÿ
,ŒŒÿ Ÿ
nullŒŒ⁄ ﬁ
,ŒŒﬁ ﬂ
nullŒŒ‡ ‰
}ŒŒÂ Ê
,ŒŒÊ Á
{
œœ 
new
œœ 
Guid
œœ 
(
œœ 
$str
œœ E
)
œœE F
,
œœF G
$strœœH è
,œœè ê
$strœœë À
,œœÀ Ã
$strœœÕ ‰
,œœ‰ Â
nullœœÊ Í
,œœÍ Î
nullœœÏ 
,œœ Ò
$strœœÚ £
,œœ£ §
$strœœ• Æ
,œœÆ Ø
$strœœ∞ …
,œœ…  
$strœœÀ Ì
,œœÌ Ó
$strœœÔ ˚
,œœ˚ ¸
$strœœ˝ ô
,œœô ö
$strœœõ ®
,œœ® ©
$numœœ™ ´
,œœ´ ¨
$strœœ≠ Õ
,œœÕ Œ
$strœœœ Ë
,œœË È
nullœœÍ Ó
,œœÓ Ô
nullœœ Ù
}œœı ˆ
,œœˆ ˜
{
–– 
new
–– 
Guid
–– 
(
–– 
$str
–– E
)
––E F
,
––F G
$str––H è
,––è ê
$str––ë À
,––À Ã
$str––Õ ‰
,––‰ Â
null––Ê Í
,––Í Î
null––Ï 
,–– Ò
$str––Ú £
,––£ §
$str––• Æ
,––Æ Ø
$str––∞ …
,––…  
$str––À Ò
,––Ò Ú
$str––Û ¸
,––¸ ˝
$str––˛ ö
,––ö õ
$str––ú ©
,––© ™
$num––´ ¨
,––¨ ≠
$str––Æ Œ
,––Œ œ
$str––– Ë
,––Ë È
null––Í Ó
,––Ó Ô
null–– Ù
}––ı ˆ
,––ˆ ˜
{
—— 
new
—— 
Guid
—— 
(
—— 
$str
—— E
)
——E F
,
——F G
$str——H ë
,——ë í
$str——ì Õ
,——Õ Œ
$str——œ ·
,——· ‚
null——„ Á
,——Á Ë
null——È Ì
,——Ì Ó
$str——Ô †
,——† °
$str——¢ ´
,——´ ¨
$str——≠ ∆
,——∆ «
$str——» –
,——– —
$str——“ ‹
,——‹ ›
$str——ﬁ ˙
,——˙ ˚
$str——¸ â
,——â ä
$num——ã å
,——å ç
$str——é π
,——π ∫
$str——ª “
,——“ ”
null——‘ ÿ
,——ÿ Ÿ
null——⁄ ﬁ
}——ﬂ ‡
,——‡ ·
{
““ 
new
““ 
Guid
““ 
(
““ 
$str
““ E
)
““E F
,
““F G
$str““H ∞
,““∞ ±
$str““≤ Ï
,““Ï Ì
$str““Ó ˜
,““˜ ¯
null““˘ ˝
,““˝ ˛
null““ˇ É
,““É Ñ
$str““Ö ∂
,““∂ ∑
$str““∏ ¡
,““¡ ¬
$str““√ ‹
,““‹ ›
$str““ﬁ ˘
,““˘ ˙
$str““˚ Ö
,““Ö Ü
$str““á £
,““£ §
$str““• ≤
,““≤ ≥
$num““¥ µ
,““µ ∂
$str““∑ À
,““À Ã
$str““Õ €
,““€ ‹
null““› ·
,““· ‚
null““„ Á
}““Ë È
,““È Í
{
”” 
new
”” 
Guid
”” 
(
”” 
$str
”” E
)
””E F
,
””F G
$str””H Ã
,””Ã Õ
$str””Œ à
,””à â
$str””ä ö
,””ö õ
null””ú †
,””† °
null””¢ ¶
,””¶ ß
$str””® Ÿ
,””Ÿ ⁄
$str””€ ‰
,””‰ Â
$str””Ê ˇ
,””ˇ Ä
$str””Å â
,””â ä
$str””ã ï
,””ï ñ
$str””ó ≥
,””≥ ¥
$str””µ ¬
,””¬ √
$num””ƒ ≈
,””≈ ∆
$str””« ﬂ
,””ﬂ ‡
$str””· ˆ
,””ˆ ˜
null””¯ ¸
,””¸ ˝
null””˛ Ç
}””É Ñ
,””Ñ Ö
{
‘‘ 
new
‘‘ 
Guid
‘‘ 
(
‘‘ 
$str
‘‘ E
)
‘‘E F
,
‘‘F G
$str‘‘H ë
,‘‘ë í
$str‘‘ì Õ
,‘‘Õ Œ
$str‘‘œ ·
,‘‘· ‚
null‘‘„ Á
,‘‘Á Ë
null‘‘È Ì
,‘‘Ì Ó
$str‘‘Ô †
,‘‘† °
$str‘‘¢ ´
,‘‘´ ¨
$str‘‘≠ ∆
,‘‘∆ «
$str‘‘» Ê
,‘‘Ê Á
$str‘‘Ë Ô
,‘‘Ô 
$str‘‘Ò ç
,‘‘ç é
$str‘‘è ú
,‘‘ú ù
$num‘‘û ü
,‘‘ü †
$str‘‘° ø
,‘‘ø ¿
$str‘‘¡ Â
,‘‘Â Ê
null‘‘Á Î
,‘‘Î Ï
null‘‘Ì Ò
}‘‘Ú Û
}
’’ 
)
’’ 
;
’’ 
}
÷÷ 	
}
◊◊ 
}ÿÿ à•
åD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240720081549_AddTotalBalanceInBalancesTable.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class *
AddTotalBalanceInBalancesTable 7
:8 9
	Migration: C
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

DeleteData== '
(==' (
table>> 
:>> 
$str>> '
,>>' (
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
new@@ 
Guid@@ "
(@@" #
$str@@# I
)@@I J
)@@J K
;@@K L
migrationBuilderBB 
.BB 

DeleteDataBB '
(BB' (
tableCC 
:CC 
$strCC '
,CC' (
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
newEE 
GuidEE "
(EE" #
$strEE# I
)EEI J
)EEJ K
;EEK L
migrationBuilderGG 
.GG 

DeleteDataGG '
(GG' (
tableHH 
:HH 
$strHH '
,HH' (
	keyColumnII 
:II 
$strII 
,II  
keyValueJJ 
:JJ 
newJJ 
GuidJJ "
(JJ" #
$strJJ# I
)JJI J
)JJJ K
;JJK L
migrationBuilderLL 
.LL 

DeleteDataLL '
(LL' (
tableMM 
:MM 
$strMM '
,MM' (
	keyColumnNN 
:NN 
$strNN 
,NN  
keyValueOO 
:OO 
newOO 
GuidOO "
(OO" #
$strOO# I
)OOI J
)OOJ K
;OOK L
migrationBuilderQQ 
.QQ 
	AddColumnQQ &
<QQ& '
doubleQQ' -
>QQ- .
(QQ. /
nameRR 
:RR 
$strRR $
,RR$ %
tableSS 
:SS 
$strSS !
,SS! "
typeTT 
:TT 
$strTT 
,TT 
nullableUU 
:UU 
falseUU 
,UU  
defaultValueVV 
:VV 
$numVV !
)VV! "
;VV" #
migrationBuilderXX 
.XX 

UpdateDataXX '
(XX' (
tableYY 
:YY 
$strYY $
,YY$ %
	keyColumnZZ 
:ZZ 
$strZZ 
,ZZ  
keyValue[[ 
:[[ 
$str[[ +
,[[+ ,
columns\\ 
:\\ 
new\\ 
[\\ 
]\\ 
{\\  
$str\\! 3
,\\3 4
$str\\5 A
,\\A B
$str\\C Q
,\\Q R
$str\\S b
}\\c d
,\\d e
values]] 
:]] 
new]] 
object]] "
[]]" #
]]]# $
{]]% &
$str]]' M
,]]M N
new]]O R
DateTime]]S [
(]][ \
$num]]\ `
,]]` a
$num]]b c
,]]c d
$num]]e g
,]]g h
$num]]i j
,]]j k
$num]]l n
,]]n o
$num]]p r
,]]r s
$num]]t w
,]]w x
DateTimeKind	]]y Ö
.
]]Ö Ü
Utc
]]Ü â
)
]]â ä
.
]]ä ã
AddTicks
]]ã ì
(
]]ì î
$num
]]î ò
)
]]ò ô
,
]]ô ö
$str
]]õ Ò
,
]]Ò Ú
$str
]]Û ô
}
]]ö õ
)
]]õ ú
;
]]ú ù
migrationBuilder__ 
.__ 

InsertData__ '
(__' (
table`` 
:`` 
$str`` '
,``' (
columnsaa 
:aa 
newaa 
[aa 
]aa 
{aa  
$straa! %
,aa% &
$straa' 4
,aa4 5
$straa6 D
,aaD E
$straaF P
,aaP Q
$straaR ]
,aa] ^
$straa_ l
,aal m
$straan }
,aa} ~
$str	aa â
,
aaâ ä
$str
aaã †
,
aa† °
$str
aa¢ ±
,
aa± ≤
$str
aa≥ ¬
,
aa¬ √
$str
aaƒ —
,
aa— “
$str
aa” ﬂ
,
aaﬂ ‡
$str
aa· È
,
aaÈ Í
$str
aaÎ ¯
,
aa¯ ˘
$str
aa˙ à
,
aaà â
$str
aaä ï
,
aaï ñ
$str
aaó §
}
aa• ¶
,
aa¶ ß
valuesbb 
:bb 
newbb 
objectbb "
[bb" #
,bb# $
]bb$ %
{cc 
{dd 
newdd 
Guiddd 
(dd 
$strdd E
)ddE F
,ddF G
$strddH s
,dds t
$str	ddu ô
,
ddô ö
$str
ddõ •
,
dd• ¶
null
ddß ´
,
dd´ ¨
null
dd≠ ±
,
dd± ≤
$str
dd≥ ˘
,
dd˘ ˙
$str
dd˚ Ñ
,
ddÑ Ö
$str
ddÜ ü
,
ddü †
$str
dd° Œ
,
ddŒ œ
$str
dd– ‹
,
dd‹ ›
$str
ddﬁ ˙
,
dd˙ ˚
$str
dd¸ â
,
ddâ ä
$num
ddã å
,
ddå ç
$str
ddé ª
,
ddª º
$str
ddΩ ›
,
dd› ﬁ
null
ddﬂ „
,
dd„ ‰
null
ddÂ È
}
ddÍ Î
,
ddÎ Ï
{ee 
newee 
Guidee 
(ee 
$stree E
)eeE F
,eeF G
$str	eeH ”
,
ee” ‘
$str
ee’ è
,
eeè ê
$str
eeë ô
,
eeô ö
null
eeõ ü
,
eeü †
null
ee° •
,
ee• ¶
$str
eeß ÿ
,
eeÿ Ÿ
$str
ee⁄ „
,
ee„ ‰
$str
eeÂ °
,
ee° ¢
$str
ee£ ∑
,
ee∑ ∏
$str
eeπ √
,
ee√ ƒ
$str
ee≈ ·
,
ee· ‚
$str
ee„ 
,
ee Ò
$num
eeÚ Û
,
eeÛ Ù
$str
eeı ñ
,
eeñ ó
$str
eeò π
,
eeπ ∫
null
eeª ø
,
eeø ¿
null
ee¡ ≈
}
ee∆ «
,
ee« »
{ff 
newff 
Guidff 
(ff 
$strff E
)ffE F
,ffF G
$str	ffH è
,
ffè ê
$str
ffë ∫
,
ff∫ ª
$str
ffº  
,
ff  À
null
ffÃ –
,
ff– —
null
ff“ ÷
,
ff÷ ◊
$str
ffÿ â
,
ffâ ä
$str
ffã î
,
ffî ï
$str
ffñ ¢
,
ff¢ £
$str
ff§ ¥
,
ff¥ µ
$str
ff∂ ¿
,
ff¿ ¡
$str
ff¬ ÿ
,
ffÿ Ÿ
$str
ff⁄ Ê
,
ffÊ Á
$num
ffË È
,
ffÈ Í
$str
ffÎ ¸
,
ff¸ ˝
$str
ff˛ ì
,
ffì î
null
ffï ô
,
ffô ö
null
ffõ ü
}
ff† °
,
ff° ¢
{gg 
newgg 
Guidgg 
(gg 
$strgg E
)ggE F
,ggF G
$str	ggH Ñ
,
ggÑ Ö
$str
ggÜ ¿
,
gg¿ ¡
$str
gg¬ “
,
gg“ ”
null
gg‘ ÿ
,
ggÿ Ÿ
null
gg⁄ ﬁ
,
ggﬁ ﬂ
$str
gg‡ ë
,
ggë í
$str
ggì ú
,
ggú ù
$str
ggû ∑
,
gg∑ ∏
$str
ggπ ¡
,
gg¡ ¬
$str
gg√ Õ
,
ggÕ Œ
$str
ggœ Î
,
ggÎ Ï
$str
ggÌ ˙
,
gg˙ ˚
$num
gg¸ ˝
,
gg˝ ˛
$str
ggˇ ê
,
ggê ë
$str
ggí °
,
gg° ¢
null
gg£ ß
,
ggß ®
null
gg© ≠
}
ggÆ Ø
,
ggØ ∞
{hh 
newhh 
Guidhh 
(hh 
$strhh E
)hhE F
,hhF G
$str	hhH û
,
hhû ü
$str
hh† ≈
,
hh≈ ∆
$str
hh« œ
,
hhœ –
null
hh— ’
,
hh’ ÷
null
hh◊ €
,
hh€ ‹
$str
hh› é
,
hhé è
$str
hhê ô
,
hhô ö
$str
hhõ µ
,
hhµ ∂
$str
hh∑ œ
,
hhœ –
$str
hh— €
,
hh€ ‹
$str
hh› ˘
,
hh˘ ˙
$str
hh˚ à
,
hhà â
$num
hhä ã
,
hhã å
$str
hhç ¢
,
hh¢ £
$str
hh§ µ
,
hhµ ∂
null
hh∑ ª
,
hhª º
null
hhΩ ¡
}
hh¬ √
,
hh√ ƒ
{ii 
newii 
Guidii 
(ii 
$strii E
)iiE F
,iiF G
$str	iiH æ
,
iiæ ø
$str
ii¿ ù
,
iiù û
$str
iiü ©
,
ii© ™
null
ii´ Ø
,
iiØ ∞
null
ii± µ
,
iiµ ∂
$str
ii∑ ˚
,
ii˚ ¸
$str
ii˝ Ü
,
iiÜ á
$str
iià ≠
,
ii≠ Æ
$str
iiØ ’
,
ii’ ÷
$str
ii◊ ·
,
ii· ‚
$str
ii„ ˇ
,
iiˇ Ä
$str
iiÅ é
,
iié è
$num
iiê ë
,
iië í
$str
iiì ®
,
ii® ©
$str
ii™ ø
,
iiø ¿
null
ii¡ ≈
,
ii≈ ∆
null
ii« À
}
iiÃ Õ
,
iiÕ Œ
{jj 
newjj 
Guidjj 
(jj 
$strjj E
)jjE F
,jjF G
$str	jjH ®
,
jj® ©
$str
jj™ ÿ
,
jjÿ Ÿ
$str
jj⁄ ‰
,
jj‰ Â
null
jjÊ Í
,
jjÍ Î
null
jjÏ 
,
jj Ò
$str
jjÚ £
,
jj£ §
$str
jj• Æ
,
jjÆ Ø
$str
jj∞  
,
jj  À
$str
jjÃ Û
,
jjÛ Ù
$str
jjı ˇ
,
jjˇ Ä
$str
jjÅ ù
,
jjù û
$str
jjü ¨
,
jj¨ ≠
$num
jjÆ Ø
,
jjØ ∞
$str
jj± ∆
,
jj∆ «
$str
jj» ÿ
,
jjÿ Ÿ
null
jj⁄ ﬁ
,
jjﬁ ﬂ
null
jj‡ ‰
}
jjÂ Ê
,
jjÊ Á
{kk 
newkk 
Guidkk 
(kk 
$strkk E
)kkE F
,kkF G
$str	kkH è
,
kkè ê
$str
kkë À
,
kkÀ Ã
$str
kkÕ ‰
,
kk‰ Â
null
kkÊ Í
,
kkÍ Î
null
kkÏ 
,
kk Ò
$str
kkÚ £
,
kk£ §
$str
kk• Æ
,
kkÆ Ø
$str
kk∞ …
,
kk…  
$str
kkÀ Ì
,
kkÌ Ó
$str
kkÔ ˚
,
kk˚ ¸
$str
kk˝ ô
,
kkô ö
$str
kkõ ®
,
kk® ©
$num
kk™ ´
,
kk´ ¨
$str
kk≠ Õ
,
kkÕ Œ
$str
kkœ Ë
,
kkË È
null
kkÍ Ó
,
kkÓ Ô
null
kk Ù
}
kkı ˆ
,
kkˆ ˜
{ll 
newll 
Guidll 
(ll 
$strll E
)llE F
,llF G
$str	llH è
,
llè ê
$str
llë À
,
llÀ Ã
$str
llÕ ‰
,
ll‰ Â
null
llÊ Í
,
llÍ Î
null
llÏ 
,
ll Ò
$str
llÚ £
,
ll£ §
$str
ll• Æ
,
llÆ Ø
$str
ll∞ …
,
ll…  
$str
llÀ Ò
,
llÒ Ú
$str
llÛ ¸
,
ll¸ ˝
$str
ll˛ ö
,
llö õ
$str
llú ©
,
ll© ™
$num
ll´ ¨
,
ll¨ ≠
$str
llÆ Œ
,
llŒ œ
$str
ll– Ë
,
llË È
null
llÍ Ó
,
llÓ Ô
null
ll Ù
}
llı ˆ
,
llˆ ˜
{mm 
newmm 
Guidmm 
(mm 
$strmm E
)mmE F
,mmF G
$str	mmH ë
,
mmë í
$str
mmì Õ
,
mmÕ Œ
$str
mmœ ·
,
mm· ‚
null
mm„ Á
,
mmÁ Ë
null
mmÈ Ì
,
mmÌ Ó
$str
mmÔ †
,
mm† °
$str
mm¢ ´
,
mm´ ¨
$str
mm≠ ∆
,
mm∆ «
$str
mm» –
,
mm– —
$str
mm“ ‹
,
mm‹ ›
$str
mmﬁ ˙
,
mm˙ ˚
$str
mm¸ â
,
mmâ ä
$num
mmã å
,
mmå ç
$str
mmé π
,
mmπ ∫
$str
mmª “
,
mm“ ”
null
mm‘ ÿ
,
mmÿ Ÿ
null
mm⁄ ﬁ
}
mmﬂ ‡
,
mm‡ ·
{nn 
newnn 
Guidnn 
(nn 
$strnn E
)nnE F
,nnF G
$str	nnH ∞
,
nn∞ ±
$str
nn≤ Ï
,
nnÏ Ì
$str
nnÓ ˜
,
nn˜ ¯
null
nn˘ ˝
,
nn˝ ˛
null
nnˇ É
,
nnÉ Ñ
$str
nnÖ ∂
,
nn∂ ∑
$str
nn∏ ¡
,
nn¡ ¬
$str
nn√ ‹
,
nn‹ ›
$str
nnﬁ ˘
,
nn˘ ˙
$str
nn˚ Ö
,
nnÖ Ü
$str
nná £
,
nn£ §
$str
nn• ≤
,
nn≤ ≥
$num
nn¥ µ
,
nnµ ∂
$str
nn∑ À
,
nnÀ Ã
$str
nnÕ €
,
nn€ ‹
null
nn› ·
,
nn· ‚
null
nn„ Á
}
nnË È
,
nnÈ Í
{oo 
newoo 
Guidoo 
(oo 
$stroo E
)ooE F
,ooF G
$str	ooH Ã
,
ooÃ Õ
$str
ooŒ à
,
ooà â
$str
ooä ö
,
ooö õ
null
ooú †
,
oo† °
null
oo¢ ¶
,
oo¶ ß
$str
oo® Ÿ
,
ooŸ ⁄
$str
oo€ ‰
,
oo‰ Â
$str
ooÊ ˇ
,
ooˇ Ä
$str
ooÅ â
,
ooâ ä
$str
ooã ï
,
ooï ñ
$str
ooó ≥
,
oo≥ ¥
$str
ooµ ¬
,
oo¬ √
$num
ooƒ ≈
,
oo≈ ∆
$str
oo« ﬂ
,
ooﬂ ‡
$str
oo· ˆ
,
ooˆ ˜
null
oo¯ ¸
,
oo¸ ˝
null
oo˛ Ç
}
ooÉ Ñ
,
ooÑ Ö
{pp 
newpp 
Guidpp 
(pp 
$strpp E
)ppE F
,ppF G
$str	ppH ë
,
ppë í
$str
ppì Õ
,
ppÕ Œ
$str
ppœ ·
,
pp· ‚
null
pp„ Á
,
ppÁ Ë
null
ppÈ Ì
,
ppÌ Ó
$str
ppÔ †
,
pp† °
$str
pp¢ ´
,
pp´ ¨
$str
pp≠ ∆
,
pp∆ «
$str
pp» Ê
,
ppÊ Á
$str
ppË Ô
,
ppÔ 
$str
ppÒ ç
,
ppç é
$str
ppè ú
,
ppú ù
$num
ppû ü
,
ppü †
$str
pp° ø
,
ppø ¿
$str
pp¡ Â
,
ppÂ Ê
null
ppÁ Î
,
ppÎ Ï
null
ppÌ Ò
}
ppÚ Û
}qq 
)qq 
;qq 
}rr 	
	protecteduu 
overrideuu 
voiduu 
Downuu  $
(uu$ %
MigrationBuilderuu% 5
migrationBuilderuu6 F
)uuF G
{vv 	
migrationBuilderww 
.ww 

DeleteDataww '
(ww' (
tablexx 
:xx 
$strxx '
,xx' (
	keyColumnyy 
:yy 
$stryy 
,yy  
keyValuezz 
:zz 
newzz 
Guidzz "
(zz" #
$strzz# I
)zzI J
)zzJ K
;zzK L
migrationBuilder|| 
.|| 

DeleteData|| '
(||' (
table}} 
:}} 
$str}} '
,}}' (
	keyColumn~~ 
:~~ 
$str~~ 
,~~  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder
ÅÅ 
.
ÅÅ 

DeleteData
ÅÅ '
(
ÅÅ' (
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ '
,
ÇÇ' (
	keyColumn
ÉÉ 
:
ÉÉ 
$str
ÉÉ 
,
ÉÉ  
keyValue
ÑÑ 
:
ÑÑ 
new
ÑÑ 
Guid
ÑÑ "
(
ÑÑ" #
$str
ÑÑ# I
)
ÑÑI J
)
ÑÑJ K
;
ÑÑK L
migrationBuilder
ÜÜ 
.
ÜÜ 

DeleteData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá '
,
áá' (
	keyColumn
àà 
:
àà 
$str
àà 
,
àà  
keyValue
ââ 
:
ââ 
new
ââ 
Guid
ââ "
(
ââ" #
$str
ââ# I
)
ââI J
)
ââJ K
;
ââK L
migrationBuilder
ãã 
.
ãã 

DeleteData
ãã '
(
ãã' (
table
åå 
:
åå 
$str
åå '
,
åå' (
	keyColumn
çç 
:
çç 
$str
çç 
,
çç  
keyValue
éé 
:
éé 
new
éé 
Guid
éé "
(
éé" #
$str
éé# I
)
ééI J
)
ééJ K
;
ééK L
migrationBuilder
êê 
.
êê 

DeleteData
êê '
(
êê' (
table
ëë 
:
ëë 
$str
ëë '
,
ëë' (
	keyColumn
íí 
:
íí 
$str
íí 
,
íí  
keyValue
ìì 
:
ìì 
new
ìì 
Guid
ìì "
(
ìì" #
$str
ìì# I
)
ììI J
)
ììJ K
;
ììK L
migrationBuilder
ïï 
.
ïï 

DeleteData
ïï '
(
ïï' (
table
ññ 
:
ññ 
$str
ññ '
,
ññ' (
	keyColumn
óó 
:
óó 
$str
óó 
,
óó  
keyValue
òò 
:
òò 
new
òò 
Guid
òò "
(
òò" #
$str
òò# I
)
òòI J
)
òòJ K
;
òòK L
migrationBuilder
öö 
.
öö 

DeleteData
öö '
(
öö' (
table
õõ 
:
õõ 
$str
õõ '
,
õõ' (
	keyColumn
úú 
:
úú 
$str
úú 
,
úú  
keyValue
ùù 
:
ùù 
new
ùù 
Guid
ùù "
(
ùù" #
$str
ùù# I
)
ùùI J
)
ùùJ K
;
ùùK L
migrationBuilder
üü 
.
üü 

DeleteData
üü '
(
üü' (
table
†† 
:
†† 
$str
†† '
,
††' (
	keyColumn
°° 
:
°° 
$str
°° 
,
°°  
keyValue
¢¢ 
:
¢¢ 
new
¢¢ 
Guid
¢¢ "
(
¢¢" #
$str
¢¢# I
)
¢¢I J
)
¢¢J K
;
¢¢K L
migrationBuilder
§§ 
.
§§ 

DeleteData
§§ '
(
§§' (
table
•• 
:
•• 
$str
•• '
,
••' (
	keyColumn
¶¶ 
:
¶¶ 
$str
¶¶ 
,
¶¶  
keyValue
ßß 
:
ßß 
new
ßß 
Guid
ßß "
(
ßß" #
$str
ßß# I
)
ßßI J
)
ßßJ K
;
ßßK L
migrationBuilder
©© 
.
©© 

DeleteData
©© '
(
©©' (
table
™™ 
:
™™ 
$str
™™ '
,
™™' (
	keyColumn
´´ 
:
´´ 
$str
´´ 
,
´´  
keyValue
¨¨ 
:
¨¨ 
new
¨¨ 
Guid
¨¨ "
(
¨¨" #
$str
¨¨# I
)
¨¨I J
)
¨¨J K
;
¨¨K L
migrationBuilder
ÆÆ 
.
ÆÆ 

DeleteData
ÆÆ '
(
ÆÆ' (
table
ØØ 
:
ØØ 
$str
ØØ '
,
ØØ' (
	keyColumn
∞∞ 
:
∞∞ 
$str
∞∞ 
,
∞∞  
keyValue
±± 
:
±± 
new
±± 
Guid
±± "
(
±±" #
$str
±±# I
)
±±I J
)
±±J K
;
±±K L
migrationBuilder
≥≥ 
.
≥≥ 

DeleteData
≥≥ '
(
≥≥' (
table
¥¥ 
:
¥¥ 
$str
¥¥ '
,
¥¥' (
	keyColumn
µµ 
:
µµ 
$str
µµ 
,
µµ  
keyValue
∂∂ 
:
∂∂ 
new
∂∂ 
Guid
∂∂ "
(
∂∂" #
$str
∂∂# I
)
∂∂I J
)
∂∂J K
;
∂∂K L
migrationBuilder
∏∏ 
.
∏∏ 

DropColumn
∏∏ '
(
∏∏' (
name
ππ 
:
ππ 
$str
ππ $
,
ππ$ %
table
∫∫ 
:
∫∫ 
$str
∫∫ !
)
∫∫! "
;
∫∫" #
migrationBuilder
ºº 
.
ºº 

UpdateData
ºº '
(
ºº' (
table
ΩΩ 
:
ΩΩ 
$str
ΩΩ $
,
ΩΩ$ %
	keyColumn
ææ 
:
ææ 
$str
ææ 
,
ææ  
keyValue
øø 
:
øø 
$str
øø +
,
øø+ ,
columns
¿¿ 
:
¿¿ 
new
¿¿ 
[
¿¿ 
]
¿¿ 
{
¿¿  
$str
¿¿! 3
,
¿¿3 4
$str
¿¿5 A
,
¿¿A B
$str
¿¿C Q
,
¿¿Q R
$str
¿¿S b
}
¿¿c d
,
¿¿d e
values
¡¡ 
:
¡¡ 
new
¡¡ 
object
¡¡ "
[
¡¡" #
]
¡¡# $
{
¡¡% &
$str
¡¡' M
,
¡¡M N
new
¡¡O R
DateTime
¡¡S [
(
¡¡[ \
$num
¡¡\ `
,
¡¡` a
$num
¡¡b c
,
¡¡c d
$num
¡¡e g
,
¡¡g h
$num
¡¡i j
,
¡¡j k
$num
¡¡l n
,
¡¡n o
$num
¡¡p r
,
¡¡r s
$num
¡¡t w
,
¡¡w x
DateTimeKind¡¡y Ö
.¡¡Ö Ü
Utc¡¡Ü â
)¡¡â ä
.¡¡ä ã
AddTicks¡¡ã ì
(¡¡ì î
$num¡¡î ò
)¡¡ò ô
,¡¡ô ö
$str¡¡õ Ò
,¡¡Ò Ú
$str¡¡Û ô
}¡¡ö õ
)¡¡õ ú
;¡¡ú ù
migrationBuilder
√√ 
.
√√ 

InsertData
√√ '
(
√√' (
table
ƒƒ 
:
ƒƒ 
$str
ƒƒ '
,
ƒƒ' (
columns
≈≈ 
:
≈≈ 
new
≈≈ 
[
≈≈ 
]
≈≈ 
{
≈≈  
$str
≈≈! %
,
≈≈% &
$str
≈≈' 4
,
≈≈4 5
$str
≈≈6 D
,
≈≈D E
$str
≈≈F P
,
≈≈P Q
$str
≈≈R ]
,
≈≈] ^
$str
≈≈_ l
,
≈≈l m
$str
≈≈n }
,
≈≈} ~
$str≈≈ â
,≈≈â ä
$str≈≈ã †
,≈≈† °
$str≈≈¢ ±
,≈≈± ≤
$str≈≈≥ ¬
,≈≈¬ √
$str≈≈ƒ —
,≈≈— “
$str≈≈” ﬂ
,≈≈ﬂ ‡
$str≈≈· È
,≈≈È Í
$str≈≈Î ¯
,≈≈¯ ˘
$str≈≈˙ à
,≈≈à â
$str≈≈ä ï
,≈≈ï ñ
$str≈≈ó §
}≈≈• ¶
,≈≈¶ ß
values
∆∆ 
:
∆∆ 
new
∆∆ 
object
∆∆ "
[
∆∆" #
,
∆∆# $
]
∆∆$ %
{
«« 
{
»» 
new
»» 
Guid
»» 
(
»» 
$str
»» E
)
»»E F
,
»»F G
$str»»H ë
,»»ë í
$str»»ì Õ
,»»Õ Œ
$str»»œ ·
,»»· ‚
null»»„ Á
,»»Á Ë
null»»È Ì
,»»Ì Ó
$str»»Ô †
,»»† °
$str»»¢ ´
,»»´ ¨
$str»»≠ ∆
,»»∆ «
$str»»» Ê
,»»Ê Á
$str»»Ë Ô
,»»Ô 
$str»»Ò ç
,»»ç é
$str»»è ú
,»»ú ù
$num»»û ü
,»»ü †
$str»»° ø
,»»ø ¿
$str»»¡ Â
,»»Â Ê
null»»Á Î
,»»Î Ï
null»»Ì Ò
}»»Ú Û
,»»Û Ù
{
…… 
new
…… 
Guid
…… 
(
…… 
$str
…… E
)
……E F
,
……F G
$str……H Ñ
,……Ñ Ö
$str……Ü ¿
,……¿ ¡
$str……¬ “
,……“ ”
null……‘ ÿ
,……ÿ Ÿ
null……⁄ ﬁ
,……ﬁ ﬂ
$str……‡ ë
,……ë í
$str……ì ú
,……ú ù
$str……û ∑
,……∑ ∏
$str……π ¡
,……¡ ¬
$str……√ Õ
,……Õ Œ
$str……œ Î
,……Î Ï
$str……Ì ˙
,……˙ ˚
$num……¸ ˝
,……˝ ˛
$str……ˇ ê
,……ê ë
$str……í °
,……° ¢
null……£ ß
,……ß ®
null……© ≠
}……Æ Ø
,……Ø ∞
{
   
new
   
Guid
   
(
   
$str
   E
)
  E F
,
  F G
$str
  H s
,
  s t
$str  u ô
,  ô ö
$str  õ •
,  • ¶
null  ß ´
,  ´ ¨
null  ≠ ±
,  ± ≤
$str  ≥ ˘
,  ˘ ˙
$str  ˚ Ñ
,  Ñ Ö
$str  Ü ü
,  ü †
$str  ° Œ
,  Œ œ
$str  – ‹
,  ‹ ›
$str  ﬁ ˙
,  ˙ ˚
$str  ¸ â
,  â ä
$num  ã å
,  å ç
$str  é ª
,  ª º
$str  Ω ›
,  › ﬁ
null  ﬂ „
,  „ ‰
null  Â È
}  Í Î
,  Î Ï
{
ÀÀ 
new
ÀÀ 
Guid
ÀÀ 
(
ÀÀ 
$str
ÀÀ E
)
ÀÀE F
,
ÀÀF G
$strÀÀH ”
,ÀÀ” ‘
$strÀÀ’ è
,ÀÀè ê
$strÀÀë ô
,ÀÀô ö
nullÀÀõ ü
,ÀÀü †
nullÀÀ° •
,ÀÀ• ¶
$strÀÀß ÿ
,ÀÀÿ Ÿ
$strÀÀ⁄ „
,ÀÀ„ ‰
$strÀÀÂ °
,ÀÀ° ¢
$strÀÀ£ ∑
,ÀÀ∑ ∏
$strÀÀπ √
,ÀÀ√ ƒ
$strÀÀ≈ ·
,ÀÀ· ‚
$strÀÀ„ 
,ÀÀ Ò
$numÀÀÚ Û
,ÀÀÛ Ù
$strÀÀı ñ
,ÀÀñ ó
$strÀÀò π
,ÀÀπ ∫
nullÀÀª ø
,ÀÀø ¿
nullÀÀ¡ ≈
}ÀÀ∆ «
,ÀÀ« »
{
ÃÃ 
new
ÃÃ 
Guid
ÃÃ 
(
ÃÃ 
$str
ÃÃ E
)
ÃÃE F
,
ÃÃF G
$strÃÃH ë
,ÃÃë í
$strÃÃì Õ
,ÃÃÕ Œ
$strÃÃœ ·
,ÃÃ· ‚
nullÃÃ„ Á
,ÃÃÁ Ë
nullÃÃÈ Ì
,ÃÃÌ Ó
$strÃÃÔ †
,ÃÃ† °
$strÃÃ¢ ´
,ÃÃ´ ¨
$strÃÃ≠ ∆
,ÃÃ∆ «
$strÃÃ» –
,ÃÃ– —
$strÃÃ“ ‹
,ÃÃ‹ ›
$strÃÃﬁ ˙
,ÃÃ˙ ˚
$strÃÃ¸ â
,ÃÃâ ä
$numÃÃã å
,ÃÃå ç
$strÃÃé π
,ÃÃπ ∫
$strÃÃª “
,ÃÃ“ ”
nullÃÃ‘ ÿ
,ÃÃÿ Ÿ
nullÃÃ⁄ ﬁ
}ÃÃﬂ ‡
,ÃÃ‡ ·
{
ÕÕ 
new
ÕÕ 
Guid
ÕÕ 
(
ÕÕ 
$str
ÕÕ E
)
ÕÕE F
,
ÕÕF G
$strÕÕH ∞
,ÕÕ∞ ±
$strÕÕ≤ Ï
,ÕÕÏ Ì
$strÕÕÓ ˜
,ÕÕ˜ ¯
nullÕÕ˘ ˝
,ÕÕ˝ ˛
nullÕÕˇ É
,ÕÕÉ Ñ
$strÕÕÖ ∂
,ÕÕ∂ ∑
$strÕÕ∏ ¡
,ÕÕ¡ ¬
$strÕÕ√ ‹
,ÕÕ‹ ›
$strÕÕﬁ ˘
,ÕÕ˘ ˙
$strÕÕ˚ Ö
,ÕÕÖ Ü
$strÕÕá £
,ÕÕ£ §
$strÕÕ• ≤
,ÕÕ≤ ≥
$numÕÕ¥ µ
,ÕÕµ ∂
$strÕÕ∑ À
,ÕÕÀ Ã
$strÕÕÕ €
,ÕÕ€ ‹
nullÕÕ› ·
,ÕÕ· ‚
nullÕÕ„ Á
}ÕÕË È
,ÕÕÈ Í
{
ŒŒ 
new
ŒŒ 
Guid
ŒŒ 
(
ŒŒ 
$str
ŒŒ E
)
ŒŒE F
,
ŒŒF G
$strŒŒH û
,ŒŒû ü
$strŒŒ† ≈
,ŒŒ≈ ∆
$strŒŒ« œ
,ŒŒœ –
nullŒŒ— ’
,ŒŒ’ ÷
nullŒŒ◊ €
,ŒŒ€ ‹
$strŒŒ› é
,ŒŒé è
$strŒŒê ô
,ŒŒô ö
$strŒŒõ µ
,ŒŒµ ∂
$strŒŒ∑ œ
,ŒŒœ –
$strŒŒ— €
,ŒŒ€ ‹
$strŒŒ› ˘
,ŒŒ˘ ˙
$strŒŒ˚ à
,ŒŒà â
$numŒŒä ã
,ŒŒã å
$strŒŒç ¢
,ŒŒ¢ £
$strŒŒ§ µ
,ŒŒµ ∂
nullŒŒ∑ ª
,ŒŒª º
nullŒŒΩ ¡
}ŒŒ¬ √
,ŒŒ√ ƒ
{
œœ 
new
œœ 
Guid
œœ 
(
œœ 
$str
œœ E
)
œœE F
,
œœF G
$strœœH è
,œœè ê
$strœœë À
,œœÀ Ã
$strœœÕ ‰
,œœ‰ Â
nullœœÊ Í
,œœÍ Î
nullœœÏ 
,œœ Ò
$strœœÚ £
,œœ£ §
$strœœ• Æ
,œœÆ Ø
$strœœ∞ …
,œœ…  
$strœœÀ Ì
,œœÌ Ó
$strœœÔ ˚
,œœ˚ ¸
$strœœ˝ ô
,œœô ö
$strœœõ ®
,œœ® ©
$numœœ™ ´
,œœ´ ¨
$strœœ≠ Õ
,œœÕ Œ
$strœœœ Ë
,œœË È
nullœœÍ Ó
,œœÓ Ô
nullœœ Ù
}œœı ˆ
,œœˆ ˜
{
–– 
new
–– 
Guid
–– 
(
–– 
$str
–– E
)
––E F
,
––F G
$str––H è
,––è ê
$str––ë À
,––À Ã
$str––Õ ‰
,––‰ Â
null––Ê Í
,––Í Î
null––Ï 
,–– Ò
$str––Ú £
,––£ §
$str––• Æ
,––Æ Ø
$str––∞ …
,––…  
$str––À Ò
,––Ò Ú
$str––Û ¸
,––¸ ˝
$str––˛ ö
,––ö õ
$str––ú ©
,––© ™
$num––´ ¨
,––¨ ≠
$str––Æ Œ
,––Œ œ
$str––– Ë
,––Ë È
null––Í Ó
,––Ó Ô
null–– Ù
}––ı ˆ
,––ˆ ˜
{
—— 
new
—— 
Guid
—— 
(
—— 
$str
—— E
)
——E F
,
——F G
$str——H ®
,——® ©
$str——™ ÿ
,——ÿ Ÿ
$str——⁄ ‰
,——‰ Â
null——Ê Í
,——Í Î
null——Ï 
,—— Ò
$str——Ú £
,——£ §
$str——• Æ
,——Æ Ø
$str——∞  
,——  À
$str——Ã Û
,——Û Ù
$str——ı ˇ
,——ˇ Ä
$str——Å ù
,——ù û
$str——ü ¨
,——¨ ≠
$num——Æ Ø
,——Ø ∞
$str——± ∆
,——∆ «
$str——» ÿ
,——ÿ Ÿ
null——⁄ ﬁ
,——ﬁ ﬂ
null——‡ ‰
}——Â Ê
,——Ê Á
{
““ 
new
““ 
Guid
““ 
(
““ 
$str
““ E
)
““E F
,
““F G
$str““H æ
,““æ ø
$str““¿ ù
,““ù û
$str““ü ©
,““© ™
null““´ Ø
,““Ø ∞
null““± µ
,““µ ∂
$str““∑ ˚
,““˚ ¸
$str““˝ Ü
,““Ü á
$str““à ≠
,““≠ Æ
$str““Ø ’
,““’ ÷
$str““◊ ·
,““· ‚
$str““„ ˇ
,““ˇ Ä
$str““Å é
,““é è
$num““ê ë
,““ë í
$str““ì ®
,““® ©
$str““™ ø
,““ø ¿
null““¡ ≈
,““≈ ∆
null““« À
}““Ã Õ
,““Õ Œ
{
”” 
new
”” 
Guid
”” 
(
”” 
$str
”” E
)
””E F
,
””F G
$str””H è
,””è ê
$str””ë ∫
,””∫ ª
$str””º  
,””  À
null””Ã –
,””– —
null””“ ÷
,””÷ ◊
$str””ÿ â
,””â ä
$str””ã î
,””î ï
$str””ñ ¢
,””¢ £
$str””§ ¥
,””¥ µ
$str””∂ ¿
,””¿ ¡
$str””¬ ÿ
,””ÿ Ÿ
$str””⁄ Ê
,””Ê Á
$num””Ë È
,””È Í
$str””Î ¸
,””¸ ˝
$str””˛ ì
,””ì î
null””ï ô
,””ô ö
null””õ ü
}””† °
,””° ¢
{
‘‘ 
new
‘‘ 
Guid
‘‘ 
(
‘‘ 
$str
‘‘ E
)
‘‘E F
,
‘‘F G
$str‘‘H Ã
,‘‘Ã Õ
$str‘‘Œ à
,‘‘à â
$str‘‘ä ö
,‘‘ö õ
null‘‘ú †
,‘‘† °
null‘‘¢ ¶
,‘‘¶ ß
$str‘‘® Ÿ
,‘‘Ÿ ⁄
$str‘‘€ ‰
,‘‘‰ Â
$str‘‘Ê ˇ
,‘‘ˇ Ä
$str‘‘Å â
,‘‘â ä
$str‘‘ã ï
,‘‘ï ñ
$str‘‘ó ≥
,‘‘≥ ¥
$str‘‘µ ¬
,‘‘¬ √
$num‘‘ƒ ≈
,‘‘≈ ∆
$str‘‘« ﬂ
,‘‘ﬂ ‡
$str‘‘· ˆ
,‘‘ˆ ˜
null‘‘¯ ¸
,‘‘¸ ˝
null‘‘˛ Ç
}‘‘É Ñ
}
’’ 
)
’’ 
;
’’ 
}
÷÷ 	
}
◊◊ 
}ÿÿ ´˜
~D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240719035128_AddEmailTemplate.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class 
AddEmailTemplate )
:* +
	Migration, 5
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 

UpdateData== '
(==' (
table>> 
:>> 
$str>> $
,>>$ %
	keyColumn?? 
:?? 
$str?? 
,??  
keyValue@@ 
:@@ 
$str@@ +
,@@+ ,
columnsAA 
:AA 
newAA 
[AA 
]AA 
{AA  
$strAA! 3
,AA3 4
$strAA5 A
,AAA B
$strAAC Q
,AAQ R
$strAAS b
}AAc d
,AAd e
valuesBB 
:BB 
newBB 
objectBB "
[BB" #
]BB# $
{BB% &
$strBB' M
,BBM N
newBBO R
DateTimeBBS [
(BB[ \
$numBB\ `
,BB` a
$numBBb c
,BBc d
$numBBe g
,BBg h
$numBBi j
,BBj k
$numBBl n
,BBn o
$numBBp r
,BBr s
$numBBt w
,BBw x
DateTimeKind	BBy Ö
.
BBÖ Ü
Utc
BBÜ â
)
BBâ ä
.
BBä ã
AddTicks
BBã ì
(
BBì î
$num
BBî ò
)
BBò ô
,
BBô ö
$str
BBõ Ò
,
BBÒ Ú
$str
BBÛ ô
}
BBö õ
)
BBõ ú
;
BBú ù
migrationBuilderDD 
.DD 

InsertDataDD '
(DD' (
tableEE 
:EE 
$strEE '
,EE' (
columnsFF 
:FF 
newFF 
[FF 
]FF 
{FF  
$strFF! %
,FF% &
$strFF' 4
,FF4 5
$strFF6 D
,FFD E
$strFFF P
,FFP Q
$strFFR ]
,FF] ^
$strFF_ l
,FFl m
$strFFn }
,FF} ~
$str	FF â
,
FFâ ä
$str
FFã †
,
FF† °
$str
FF¢ ±
,
FF± ≤
$str
FF≥ ¬
,
FF¬ √
$str
FFƒ —
,
FF— “
$str
FF” ﬂ
,
FFﬂ ‡
$str
FF· È
,
FFÈ Í
$str
FFÎ ¯
,
FF¯ ˘
$str
FF˙ à
,
FFà â
$str
FFä ï
,
FFï ñ
$str
FFó §
}
FF• ¶
,
FF¶ ß
valuesGG 
:GG 
newGG 
objectGG "
[GG" #
,GG# $
]GG$ %
{HH 
{II 
newII 
GuidII 
(II 
$strII E
)IIE F
,IIF G
$str	IIH ë
,
IIë í
$str
IIì Õ
,
IIÕ Œ
$str
IIœ ·
,
II· ‚
null
II„ Á
,
IIÁ Ë
null
IIÈ Ì
,
IIÌ Ó
$str
IIÔ †
,
II† °
$str
II¢ ´
,
II´ ¨
$str
II≠ ∆
,
II∆ «
$str
II» Ê
,
IIÊ Á
$str
IIË Ô
,
IIÔ 
$str
IIÒ ç
,
IIç é
$str
IIè ú
,
IIú ù
$num
IIû ü
,
IIü †
$str
II° ø
,
IIø ¿
$str
II¡ Â
,
IIÂ Ê
null
IIÁ Î
,
IIÎ Ï
null
IIÌ Ò
}
IIÚ Û
,
IIÛ Ù
{JJ 
newJJ 
GuidJJ 
(JJ 
$strJJ E
)JJE F
,JJF G
$str	JJH Ñ
,
JJÑ Ö
$str
JJÜ ¿
,
JJ¿ ¡
$str
JJ¬ “
,
JJ“ ”
null
JJ‘ ÿ
,
JJÿ Ÿ
null
JJ⁄ ﬁ
,
JJﬁ ﬂ
$str
JJ‡ ë
,
JJë í
$str
JJì ú
,
JJú ù
$str
JJû ∑
,
JJ∑ ∏
$str
JJπ ¡
,
JJ¡ ¬
$str
JJ√ Õ
,
JJÕ Œ
$str
JJœ Î
,
JJÎ Ï
$str
JJÌ ˙
,
JJ˙ ˚
$num
JJ¸ ˝
,
JJ˝ ˛
$str
JJˇ ê
,
JJê ë
$str
JJí °
,
JJ° ¢
null
JJ£ ß
,
JJß ®
null
JJ© ≠
}
JJÆ Ø
,
JJØ ∞
{KK 
newKK 
GuidKK 
(KK 
$strKK E
)KKE F
,KKF G
$strKKH s
,KKs t
$str	KKu ô
,
KKô ö
$str
KKõ •
,
KK• ¶
null
KKß ´
,
KK´ ¨
null
KK≠ ±
,
KK± ≤
$str
KK≥ ˘
,
KK˘ ˙
$str
KK˚ Ñ
,
KKÑ Ö
$str
KKÜ ü
,
KKü †
$str
KK° Œ
,
KKŒ œ
$str
KK– ‹
,
KK‹ ›
$str
KKﬁ ˙
,
KK˙ ˚
$str
KK¸ â
,
KKâ ä
$num
KKã å
,
KKå ç
$str
KKé ª
,
KKª º
$str
KKΩ ›
,
KK› ﬁ
null
KKﬂ „
,
KK„ ‰
null
KKÂ È
}
KKÍ Î
,
KKÎ Ï
{LL 
newLL 
GuidLL 
(LL 
$strLL E
)LLE F
,LLF G
$str	LLH ”
,
LL” ‘
$str
LL’ è
,
LLè ê
$str
LLë ô
,
LLô ö
null
LLõ ü
,
LLü †
null
LL° •
,
LL• ¶
$str
LLß ÿ
,
LLÿ Ÿ
$str
LL⁄ „
,
LL„ ‰
$str
LLÂ °
,
LL° ¢
$str
LL£ ∑
,
LL∑ ∏
$str
LLπ √
,
LL√ ƒ
$str
LL≈ ·
,
LL· ‚
$str
LL„ 
,
LL Ò
$num
LLÚ Û
,
LLÛ Ù
$str
LLı ñ
,
LLñ ó
$str
LLò π
,
LLπ ∫
null
LLª ø
,
LLø ¿
null
LL¡ ≈
}
LL∆ «
,
LL« »
{MM 
newMM 
GuidMM 
(MM 
$strMM E
)MME F
,MMF G
$str	MMH ë
,
MMë í
$str
MMì Õ
,
MMÕ Œ
$str
MMœ ·
,
MM· ‚
null
MM„ Á
,
MMÁ Ë
null
MMÈ Ì
,
MMÌ Ó
$str
MMÔ †
,
MM† °
$str
MM¢ ´
,
MM´ ¨
$str
MM≠ ∆
,
MM∆ «
$str
MM» –
,
MM– —
$str
MM“ ‹
,
MM‹ ›
$str
MMﬁ ˙
,
MM˙ ˚
$str
MM¸ â
,
MMâ ä
$num
MMã å
,
MMå ç
$str
MMé π
,
MMπ ∫
$str
MMª “
,
MM“ ”
null
MM‘ ÿ
,
MMÿ Ÿ
null
MM⁄ ﬁ
}
MMﬂ ‡
,
MM‡ ·
{NN 
newNN 
GuidNN 
(NN 
$strNN E
)NNE F
,NNF G
$str	NNH ∞
,
NN∞ ±
$str
NN≤ Ï
,
NNÏ Ì
$str
NNÓ ˜
,
NN˜ ¯
null
NN˘ ˝
,
NN˝ ˛
null
NNˇ É
,
NNÉ Ñ
$str
NNÖ ∂
,
NN∂ ∑
$str
NN∏ ¡
,
NN¡ ¬
$str
NN√ ‹
,
NN‹ ›
$str
NNﬁ ˘
,
NN˘ ˙
$str
NN˚ Ö
,
NNÖ Ü
$str
NNá £
,
NN£ §
$str
NN• ≤
,
NN≤ ≥
$num
NN¥ µ
,
NNµ ∂
$str
NN∑ À
,
NNÀ Ã
$str
NNÕ €
,
NN€ ‹
null
NN› ·
,
NN· ‚
null
NN„ Á
}
NNË È
,
NNÈ Í
{OO 
newOO 
GuidOO 
(OO 
$strOO E
)OOE F
,OOF G
$str	OOH û
,
OOû ü
$str
OO† ≈
,
OO≈ ∆
$str
OO« œ
,
OOœ –
null
OO— ’
,
OO’ ÷
null
OO◊ €
,
OO€ ‹
$str
OO› é
,
OOé è
$str
OOê ô
,
OOô ö
$str
OOõ µ
,
OOµ ∂
$str
OO∑ œ
,
OOœ –
$str
OO— €
,
OO€ ‹
$str
OO› ˘
,
OO˘ ˙
$str
OO˚ à
,
OOà â
$num
OOä ã
,
OOã å
$str
OOç ¢
,
OO¢ £
$str
OO§ µ
,
OOµ ∂
null
OO∑ ª
,
OOª º
null
OOΩ ¡
}
OO¬ √
,
OO√ ƒ
{PP 
newPP 
GuidPP 
(PP 
$strPP E
)PPE F
,PPF G
$str	PPH è
,
PPè ê
$str
PPë À
,
PPÀ Ã
$str
PPÕ ‰
,
PP‰ Â
null
PPÊ Í
,
PPÍ Î
null
PPÏ 
,
PP Ò
$str
PPÚ £
,
PP£ §
$str
PP• Æ
,
PPÆ Ø
$str
PP∞ …
,
PP…  
$str
PPÀ Ì
,
PPÌ Ó
$str
PPÔ ˚
,
PP˚ ¸
$str
PP˝ ô
,
PPô ö
$str
PPõ ®
,
PP® ©
$num
PP™ ´
,
PP´ ¨
$str
PP≠ Õ
,
PPÕ Œ
$str
PPœ Ë
,
PPË È
null
PPÍ Ó
,
PPÓ Ô
null
PP Ù
}
PPı ˆ
,
PPˆ ˜
{QQ 
newQQ 
GuidQQ 
(QQ 
$strQQ E
)QQE F
,QQF G
$str	QQH è
,
QQè ê
$str
QQë À
,
QQÀ Ã
$str
QQÕ ‰
,
QQ‰ Â
null
QQÊ Í
,
QQÍ Î
null
QQÏ 
,
QQ Ò
$str
QQÚ £
,
QQ£ §
$str
QQ• Æ
,
QQÆ Ø
$str
QQ∞ …
,
QQ…  
$str
QQÀ Ò
,
QQÒ Ú
$str
QQÛ ¸
,
QQ¸ ˝
$str
QQ˛ ö
,
QQö õ
$str
QQú ©
,
QQ© ™
$num
QQ´ ¨
,
QQ¨ ≠
$str
QQÆ Œ
,
QQŒ œ
$str
QQ– Ë
,
QQË È
null
QQÍ Ó
,
QQÓ Ô
null
QQ Ù
}
QQı ˆ
,
QQˆ ˜
{RR 
newRR 
GuidRR 
(RR 
$strRR E
)RRE F
,RRF G
$str	RRH ®
,
RR® ©
$str
RR™ ÿ
,
RRÿ Ÿ
$str
RR⁄ ‰
,
RR‰ Â
null
RRÊ Í
,
RRÍ Î
null
RRÏ 
,
RR Ò
$str
RRÚ £
,
RR£ §
$str
RR• Æ
,
RRÆ Ø
$str
RR∞  
,
RR  À
$str
RRÃ Û
,
RRÛ Ù
$str
RRı ˇ
,
RRˇ Ä
$str
RRÅ ù
,
RRù û
$str
RRü ¨
,
RR¨ ≠
$num
RRÆ Ø
,
RRØ ∞
$str
RR± ∆
,
RR∆ «
$str
RR» ÿ
,
RRÿ Ÿ
null
RR⁄ ﬁ
,
RRﬁ ﬂ
null
RR‡ ‰
}
RRÂ Ê
,
RRÊ Á
{SS 
newSS 
GuidSS 
(SS 
$strSS E
)SSE F
,SSF G
$str	SSH æ
,
SSæ ø
$str
SS¿ ù
,
SSù û
$str
SSü ©
,
SS© ™
null
SS´ Ø
,
SSØ ∞
null
SS± µ
,
SSµ ∂
$str
SS∑ ˚
,
SS˚ ¸
$str
SS˝ Ü
,
SSÜ á
$str
SSà ≠
,
SS≠ Æ
$str
SSØ ’
,
SS’ ÷
$str
SS◊ ·
,
SS· ‚
$str
SS„ ˇ
,
SSˇ Ä
$str
SSÅ é
,
SSé è
$num
SSê ë
,
SSë í
$str
SSì ®
,
SS® ©
$str
SS™ ø
,
SSø ¿
null
SS¡ ≈
,
SS≈ ∆
null
SS« À
}
SSÃ Õ
,
SSÕ Œ
{TT 
newTT 
GuidTT 
(TT 
$strTT E
)TTE F
,TTF G
$str	TTH è
,
TTè ê
$str
TTë ∫
,
TT∫ ª
$str
TTº  
,
TT  À
null
TTÃ –
,
TT– —
null
TT“ ÷
,
TT÷ ◊
$str
TTÿ â
,
TTâ ä
$str
TTã î
,
TTî ï
$str
TTñ ¢
,
TT¢ £
$str
TT§ ¥
,
TT¥ µ
$str
TT∂ ¿
,
TT¿ ¡
$str
TT¬ ÿ
,
TTÿ Ÿ
$str
TT⁄ Ê
,
TTÊ Á
$num
TTË È
,
TTÈ Í
$str
TTÎ ¸
,
TT¸ ˝
$str
TT˛ ì
,
TTì î
null
TTï ô
,
TTô ö
null
TTõ ü
}
TT† °
,
TT° ¢
{UU 
newUU 
GuidUU 
(UU 
$strUU E
)UUE F
,UUF G
$str	UUH Ã
,
UUÃ Õ
$str
UUŒ à
,
UUà â
$str
UUä ö
,
UUö õ
null
UUú †
,
UU† °
null
UU¢ ¶
,
UU¶ ß
$str
UU® Ÿ
,
UUŸ ⁄
$str
UU€ ‰
,
UU‰ Â
$str
UUÊ ˇ
,
UUˇ Ä
$str
UUÅ â
,
UUâ ä
$str
UUã ï
,
UUï ñ
$str
UUó ≥
,
UU≥ ¥
$str
UUµ ¬
,
UU¬ √
$num
UUƒ ≈
,
UU≈ ∆
$str
UU« ﬂ
,
UUﬂ ‡
$str
UU· ˆ
,
UUˆ ˜
null
UU¯ ¸
,
UU¸ ˝
null
UU˛ Ç
}
UUÉ Ñ
}VV 
)VV 
;VV 
}WW 	
	protectedZZ 
overrideZZ 
voidZZ 
DownZZ  $
(ZZ$ %
MigrationBuilderZZ% 5
migrationBuilderZZ6 F
)ZZF G
{[[ 	
migrationBuilder\\ 
.\\ 

DeleteData\\ '
(\\' (
table]] 
:]] 
$str]] '
,]]' (
	keyColumn^^ 
:^^ 
$str^^ 
,^^  
keyValue__ 
:__ 
new__ 
Guid__ "
(__" #
$str__# I
)__I J
)__J K
;__K L
migrationBuilderaa 
.aa 

DeleteDataaa '
(aa' (
tablebb 
:bb 
$strbb '
,bb' (
	keyColumncc 
:cc 
$strcc 
,cc  
keyValuedd 
:dd 
newdd 
Guiddd "
(dd" #
$strdd# I
)ddI J
)ddJ K
;ddK L
migrationBuilderff 
.ff 

DeleteDataff '
(ff' (
tablegg 
:gg 
$strgg '
,gg' (
	keyColumnhh 
:hh 
$strhh 
,hh  
keyValueii 
:ii 
newii 
Guidii "
(ii" #
$strii# I
)iiI J
)iiJ K
;iiK L
migrationBuilderkk 
.kk 

DeleteDatakk '
(kk' (
tablell 
:ll 
$strll '
,ll' (
	keyColumnmm 
:mm 
$strmm 
,mm  
keyValuenn 
:nn 
newnn 
Guidnn "
(nn" #
$strnn# I
)nnI J
)nnJ K
;nnK L
migrationBuilderpp 
.pp 

DeleteDatapp '
(pp' (
tableqq 
:qq 
$strqq '
,qq' (
	keyColumnrr 
:rr 
$strrr 
,rr  
keyValuess 
:ss 
newss 
Guidss "
(ss" #
$strss# I
)ssI J
)ssJ K
;ssK L
migrationBuilderuu 
.uu 

DeleteDatauu '
(uu' (
tablevv 
:vv 
$strvv '
,vv' (
	keyColumnww 
:ww 
$strww 
,ww  
keyValuexx 
:xx 
newxx 
Guidxx "
(xx" #
$strxx# I
)xxI J
)xxJ K
;xxK L
migrationBuilderzz 
.zz 

DeleteDatazz '
(zz' (
table{{ 
:{{ 
$str{{ '
,{{' (
	keyColumn|| 
:|| 
$str|| 
,||  
keyValue}} 
:}} 
new}} 
Guid}} "
(}}" #
$str}}# I
)}}I J
)}}J K
;}}K L
migrationBuilder 
. 

DeleteData '
(' (
table
ÄÄ 
:
ÄÄ 
$str
ÄÄ '
,
ÄÄ' (
	keyColumn
ÅÅ 
:
ÅÅ 
$str
ÅÅ 
,
ÅÅ  
keyValue
ÇÇ 
:
ÇÇ 
new
ÇÇ 
Guid
ÇÇ "
(
ÇÇ" #
$str
ÇÇ# I
)
ÇÇI J
)
ÇÇJ K
;
ÇÇK L
migrationBuilder
ÑÑ 
.
ÑÑ 

DeleteData
ÑÑ '
(
ÑÑ' (
table
ÖÖ 
:
ÖÖ 
$str
ÖÖ '
,
ÖÖ' (
	keyColumn
ÜÜ 
:
ÜÜ 
$str
ÜÜ 
,
ÜÜ  
keyValue
áá 
:
áá 
new
áá 
Guid
áá "
(
áá" #
$str
áá# I
)
ááI J
)
ááJ K
;
ááK L
migrationBuilder
ââ 
.
ââ 

DeleteData
ââ '
(
ââ' (
table
ää 
:
ää 
$str
ää '
,
ää' (
	keyColumn
ãã 
:
ãã 
$str
ãã 
,
ãã  
keyValue
åå 
:
åå 
new
åå 
Guid
åå "
(
åå" #
$str
åå# I
)
ååI J
)
ååJ K
;
ååK L
migrationBuilder
éé 
.
éé 

DeleteData
éé '
(
éé' (
table
èè 
:
èè 
$str
èè '
,
èè' (
	keyColumn
êê 
:
êê 
$str
êê 
,
êê  
keyValue
ëë 
:
ëë 
new
ëë 
Guid
ëë "
(
ëë" #
$str
ëë# I
)
ëëI J
)
ëëJ K
;
ëëK L
migrationBuilder
ìì 
.
ìì 

DeleteData
ìì '
(
ìì' (
table
îî 
:
îî 
$str
îî '
,
îî' (
	keyColumn
ïï 
:
ïï 
$str
ïï 
,
ïï  
keyValue
ññ 
:
ññ 
new
ññ 
Guid
ññ "
(
ññ" #
$str
ññ# I
)
ññI J
)
ññJ K
;
ññK L
migrationBuilder
òò 
.
òò 

DeleteData
òò '
(
òò' (
table
ôô 
:
ôô 
$str
ôô '
,
ôô' (
	keyColumn
öö 
:
öö 
$str
öö 
,
öö  
keyValue
õõ 
:
õõ 
new
õõ 
Guid
õõ "
(
õõ" #
$str
õõ# I
)
õõI J
)
õõJ K
;
õõK L
migrationBuilder
ùù 
.
ùù 

UpdateData
ùù '
(
ùù' (
table
ûû 
:
ûû 
$str
ûû $
,
ûû$ %
	keyColumn
üü 
:
üü 
$str
üü 
,
üü  
keyValue
†† 
:
†† 
$str
†† +
,
††+ ,
columns
°° 
:
°° 
new
°° 
[
°° 
]
°° 
{
°°  
$str
°°! 3
,
°°3 4
$str
°°5 A
,
°°A B
$str
°°C Q
,
°°Q R
$str
°°S b
}
°°c d
,
°°d e
values
¢¢ 
:
¢¢ 
new
¢¢ 
object
¢¢ "
[
¢¢" #
]
¢¢# $
{
¢¢% &
$str
¢¢' M
,
¢¢M N
new
¢¢O R
DateTime
¢¢S [
(
¢¢[ \
$num
¢¢\ `
,
¢¢` a
$num
¢¢b c
,
¢¢c d
$num
¢¢e g
,
¢¢g h
$num
¢¢i j
,
¢¢j k
$num
¢¢l n
,
¢¢n o
$num
¢¢p r
,
¢¢r s
$num
¢¢t w
,
¢¢w x
DateTimeKind¢¢y Ö
.¢¢Ö Ü
Utc¢¢Ü â
)¢¢â ä
.¢¢ä ã
AddTicks¢¢ã ì
(¢¢ì î
$num¢¢î ò
)¢¢ò ô
,¢¢ô ö
$str¢¢õ Ò
,¢¢Ò Ú
$str¢¢Û ô
}¢¢ö õ
)¢¢õ ú
;¢¢ú ù
migrationBuilder
§§ 
.
§§ 

InsertData
§§ '
(
§§' (
table
•• 
:
•• 
$str
•• '
,
••' (
columns
¶¶ 
:
¶¶ 
new
¶¶ 
[
¶¶ 
]
¶¶ 
{
¶¶  
$str
¶¶! %
,
¶¶% &
$str
¶¶' 4
,
¶¶4 5
$str
¶¶6 D
,
¶¶D E
$str
¶¶F P
,
¶¶P Q
$str
¶¶R ]
,
¶¶] ^
$str
¶¶_ l
,
¶¶l m
$str
¶¶n }
,
¶¶} ~
$str¶¶ â
,¶¶â ä
$str¶¶ã †
,¶¶† °
$str¶¶¢ ±
,¶¶± ≤
$str¶¶≥ ¬
,¶¶¬ √
$str¶¶ƒ —
,¶¶— “
$str¶¶” ﬂ
,¶¶ﬂ ‡
$str¶¶· È
,¶¶È Í
$str¶¶Î ¯
,¶¶¯ ˘
$str¶¶˙ à
,¶¶à â
$str¶¶ä ï
,¶¶ï ñ
$str¶¶ó §
}¶¶• ¶
,¶¶¶ ß
values
ßß 
:
ßß 
new
ßß 
object
ßß "
[
ßß" #
,
ßß# $
]
ßß$ %
{
®® 
{
©© 
new
©© 
Guid
©© 
(
©© 
$str
©© E
)
©©E F
,
©©F G
$str©©H æ
,©©æ ø
$str©©¿ ù
,©©ù û
$str©©ü ©
,©©© ™
null©©´ Ø
,©©Ø ∞
null©©± µ
,©©µ ∂
$str©©∑ ˚
,©©˚ ¸
$str©©˝ Ü
,©©Ü á
$str©©à ≠
,©©≠ Æ
$str©©Ø ’
,©©’ ÷
$str©©◊ ·
,©©· ‚
$str©©„ ˇ
,©©ˇ Ä
$str©©Å é
,©©é è
$num©©ê ë
,©©ë í
$str©©ì ®
,©©® ©
$str©©™ ø
,©©ø ¿
null©©¡ ≈
,©©≈ ∆
null©©« À
}©©Ã Õ
,©©Õ Œ
{
™™ 
new
™™ 
Guid
™™ 
(
™™ 
$str
™™ E
)
™™E F
,
™™F G
$str™™H è
,™™è ê
$str™™ë À
,™™À Ã
$str™™Õ ‰
,™™‰ Â
null™™Ê Í
,™™Í Î
null™™Ï 
,™™ Ò
$str™™Ú £
,™™£ §
$str™™• Æ
,™™Æ Ø
$str™™∞ …
,™™…  
$str™™À Ò
,™™Ò Ú
$str™™Û ˇ
,™™ˇ Ä
$str™™Å ù
,™™ù û
$str™™ü ¨
,™™¨ ≠
$num™™Æ Ø
,™™Ø ∞
$str™™± —
,™™— “
$str™™” Î
,™™Î Ï
null™™Ì Ò
,™™Ò Ú
null™™Û ˜
}™™¯ ˘
,™™˘ ˙
{
´´ 
new
´´ 
Guid
´´ 
(
´´ 
$str
´´ E
)
´´E F
,
´´F G
$str´´H è
,´´è ê
$str´´ë À
,´´À Ã
$str´´Õ ‰
,´´‰ Â
null´´Ê Í
,´´Í Î
null´´Ï 
,´´ Ò
$str´´Ú £
,´´£ §
$str´´• Æ
,´´Æ Ø
$str´´∞ …
,´´…  
$str´´À Ì
,´´Ì Ó
$str´´Ô ˚
,´´˚ ¸
$str´´˝ ô
,´´ô ö
$str´´õ ®
,´´® ©
$num´´™ ´
,´´´ ¨
$str´´≠ Õ
,´´Õ Œ
$str´´œ Ë
,´´Ë È
null´´Í Ó
,´´Ó Ô
null´´ Ù
}´´ı ˆ
,´´ˆ ˜
{
¨¨ 
new
¨¨ 
Guid
¨¨ 
(
¨¨ 
$str
¨¨ E
)
¨¨E F
,
¨¨F G
$str¨¨H ®
,¨¨® ©
$str¨¨™ ÿ
,¨¨ÿ Ÿ
$str¨¨⁄ ‰
,¨¨‰ Â
null¨¨Ê Í
,¨¨Í Î
null¨¨Ï 
,¨¨ Ò
$str¨¨Ú £
,¨¨£ §
$str¨¨• Æ
,¨¨Æ Ø
$str¨¨∞  
,¨¨  À
$str¨¨Ã Û
,¨¨Û Ù
$str¨¨ı ˇ
,¨¨ˇ Ä
$str¨¨Å ù
,¨¨ù û
$str¨¨ü ¨
,¨¨¨ ≠
$num¨¨Æ Ø
,¨¨Ø ∞
$str¨¨± ∆
,¨¨∆ «
$str¨¨» ÿ
,¨¨ÿ Ÿ
null¨¨⁄ ﬁ
,¨¨ﬁ ﬂ
null¨¨‡ ‰
}¨¨Â Ê
,¨¨Ê Á
{
≠≠ 
new
≠≠ 
Guid
≠≠ 
(
≠≠ 
$str
≠≠ E
)
≠≠E F
,
≠≠F G
$str≠≠H ë
,≠≠ë í
$str≠≠ì Õ
,≠≠Õ Œ
$str≠≠œ ·
,≠≠· ‚
null≠≠„ Á
,≠≠Á Ë
null≠≠È Ì
,≠≠Ì Ó
$str≠≠Ô †
,≠≠† °
$str≠≠¢ ´
,≠≠´ ¨
$str≠≠≠ ∆
,≠≠∆ «
$str≠≠» Ê
,≠≠Ê Á
$str≠≠Ë Ô
,≠≠Ô 
$str≠≠Ò ç
,≠≠ç é
$str≠≠è ú
,≠≠ú ù
$num≠≠û ü
,≠≠ü †
$str≠≠° ø
,≠≠ø ¿
$str≠≠¡ Â
,≠≠Â Ê
null≠≠Á Î
,≠≠Î Ï
null≠≠Ì Ò
}≠≠Ú Û
,≠≠Û Ù
{
ÆÆ 
new
ÆÆ 
Guid
ÆÆ 
(
ÆÆ 
$str
ÆÆ E
)
ÆÆE F
,
ÆÆF G
$strÆÆH è
,ÆÆè ê
$strÆÆë ∫
,ÆÆ∫ ª
$strÆÆº  
,ÆÆ  À
nullÆÆÃ –
,ÆÆ– —
nullÆÆ“ ÷
,ÆÆ÷ ◊
$strÆÆÿ â
,ÆÆâ ä
$strÆÆã î
,ÆÆî ï
$strÆÆñ ¢
,ÆÆ¢ £
$strÆÆ§ ¥
,ÆÆ¥ µ
$strÆÆ∂ ¿
,ÆÆ¿ ¡
$strÆÆ¬ ÿ
,ÆÆÿ Ÿ
$strÆÆ⁄ Ê
,ÆÆÊ Á
$numÆÆË È
,ÆÆÈ Í
$strÆÆÎ ¸
,ÆÆ¸ ˝
$strÆÆ˛ ì
,ÆÆì î
nullÆÆï ô
,ÆÆô ö
nullÆÆõ ü
}ÆÆ† °
,ÆÆ° ¢
{
ØØ 
new
ØØ 
Guid
ØØ 
(
ØØ 
$str
ØØ E
)
ØØE F
,
ØØF G
$strØØH û
,ØØû ü
$strØØ† ≈
,ØØ≈ ∆
$strØØ« œ
,ØØœ –
nullØØ— ’
,ØØ’ ÷
nullØØ◊ €
,ØØ€ ‹
$strØØ› é
,ØØé è
$strØØê ô
,ØØô ö
$strØØõ µ
,ØØµ ∂
$strØØ∑ œ
,ØØœ –
$strØØ— €
,ØØ€ ‹
$strØØ› ˘
,ØØ˘ ˙
$strØØ˚ à
,ØØà â
$numØØä ã
,ØØã å
$strØØç ¢
,ØØ¢ £
$strØØ§ µ
,ØØµ ∂
nullØØ∑ ª
,ØØª º
nullØØΩ ¡
}ØØ¬ √
,ØØ√ ƒ
{
∞∞ 
new
∞∞ 
Guid
∞∞ 
(
∞∞ 
$str
∞∞ E
)
∞∞E F
,
∞∞F G
$str∞∞H ∞
,∞∞∞ ±
$str∞∞≤ Ï
,∞∞Ï Ì
$str∞∞Ó ˜
,∞∞˜ ¯
null∞∞˘ ˝
,∞∞˝ ˛
null∞∞ˇ É
,∞∞É Ñ
$str∞∞Ö ∂
,∞∞∂ ∑
$str∞∞∏ ¡
,∞∞¡ ¬
$str∞∞√ ‹
,∞∞‹ ›
$str∞∞ﬁ ˘
,∞∞˘ ˙
$str∞∞˚ Ö
,∞∞Ö Ü
$str∞∞á £
,∞∞£ §
$str∞∞• ≤
,∞∞≤ ≥
$num∞∞¥ µ
,∞∞µ ∂
$str∞∞∑ À
,∞∞À Ã
$str∞∞Õ €
,∞∞€ ‹
null∞∞› ·
,∞∞· ‚
null∞∞„ Á
}∞∞Ë È
,∞∞È Í
{
±± 
new
±± 
Guid
±± 
(
±± 
$str
±± E
)
±±E F
,
±±F G
$str
±±H s
,
±±s t
$str±±u ô
,±±ô ö
$str±±õ •
,±±• ¶
null±±ß ´
,±±´ ¨
null±±≠ ±
,±±± ≤
$str±±≥ ˘
,±±˘ ˙
$str±±˚ Ñ
,±±Ñ Ö
$str±±Ü ü
,±±ü †
$str±±° Œ
,±±Œ œ
$str±±– ‹
,±±‹ ›
$str±±ﬁ ˙
,±±˙ ˚
$str±±¸ â
,±±â ä
$num±±ã å
,±±å ç
$str±±é ª
,±±ª º
$str±±Ω ›
,±±› ﬁ
null±±ﬂ „
,±±„ ‰
null±±Â È
}±±Í Î
}
≤≤ 
)
≤≤ 
;
≤≤ 
}
≥≥ 	
}
¥¥ 
}µµ êÿ
îD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240719024828_RenamePendingBalanceToAvailableBalance.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class 2
&RenamePendingBalanceToAvailableBalance ?
:@ A
	MigrationB K
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 
RenameColumn== )
(==) *
name>> 
:>> 
$str>> &
,>>& '
table?? 
:?? 
$str?? !
,??! "
newName@@ 
:@@ 
$str@@ (
)@@( )
;@@) *
migrationBuilderBB 
.BB 

UpdateDataBB '
(BB' (
tableCC 
:CC 
$strCC $
,CC$ %
	keyColumnDD 
:DD 
$strDD 
,DD  
keyValueEE 
:EE 
$strEE +
,EE+ ,
columnsFF 
:FF 
newFF 
[FF 
]FF 
{FF  
$strFF! 3
,FF3 4
$strFF5 A
,FFA B
$strFFC Q
,FFQ R
$strFFS b
}FFc d
,FFd e
valuesGG 
:GG 
newGG 
objectGG "
[GG" #
]GG# $
{GG% &
$strGG' M
,GGM N
newGGO R
DateTimeGGS [
(GG[ \
$numGG\ `
,GG` a
$numGGb c
,GGc d
$numGGe g
,GGg h
$numGGi j
,GGj k
$numGGl n
,GGn o
$numGGp r
,GGr s
$numGGt w
,GGw x
DateTimeKind	GGy Ö
.
GGÖ Ü
Utc
GGÜ â
)
GGâ ä
.
GGä ã
AddTicks
GGã ì
(
GGì î
$num
GGî ò
)
GGò ô
,
GGô ö
$str
GGõ Ò
,
GGÒ Ú
$str
GGÛ ô
}
GGö õ
)
GGõ ú
;
GGú ù
migrationBuilderII 
.II 

InsertDataII '
(II' (
tableJJ 
:JJ 
$strJJ '
,JJ' (
columnsKK 
:KK 
newKK 
[KK 
]KK 
{KK  
$strKK! %
,KK% &
$strKK' 4
,KK4 5
$strKK6 D
,KKD E
$strKKF P
,KKP Q
$strKKR ]
,KK] ^
$strKK_ l
,KKl m
$strKKn }
,KK} ~
$str	KK â
,
KKâ ä
$str
KKã †
,
KK† °
$str
KK¢ ±
,
KK± ≤
$str
KK≥ ¬
,
KK¬ √
$str
KKƒ —
,
KK— “
$str
KK” ﬂ
,
KKﬂ ‡
$str
KK· È
,
KKÈ Í
$str
KKÎ ¯
,
KK¯ ˘
$str
KK˙ à
,
KKà â
$str
KKä ï
,
KKï ñ
$str
KKó §
}
KK• ¶
,
KK¶ ß
valuesLL 
:LL 
newLL 
objectLL "
[LL" #
,LL# $
]LL$ %
{MM 
{NN 
newNN 
GuidNN 
(NN 
$strNN E
)NNE F
,NNF G
$str	NNH æ
,
NNæ ø
$str
NN¿ ù
,
NNù û
$str
NNü ©
,
NN© ™
null
NN´ Ø
,
NNØ ∞
null
NN± µ
,
NNµ ∂
$str
NN∑ ˚
,
NN˚ ¸
$str
NN˝ Ü
,
NNÜ á
$str
NNà ≠
,
NN≠ Æ
$str
NNØ ’
,
NN’ ÷
$str
NN◊ ·
,
NN· ‚
$str
NN„ ˇ
,
NNˇ Ä
$str
NNÅ é
,
NNé è
$num
NNê ë
,
NNë í
$str
NNì ®
,
NN® ©
$str
NN™ ø
,
NNø ¿
null
NN¡ ≈
,
NN≈ ∆
null
NN« À
}
NNÃ Õ
,
NNÕ Œ
{OO 
newOO 
GuidOO 
(OO 
$strOO E
)OOE F
,OOF G
$str	OOH è
,
OOè ê
$str
OOë À
,
OOÀ Ã
$str
OOÕ ‰
,
OO‰ Â
null
OOÊ Í
,
OOÍ Î
null
OOÏ 
,
OO Ò
$str
OOÚ £
,
OO£ §
$str
OO• Æ
,
OOÆ Ø
$str
OO∞ …
,
OO…  
$str
OOÀ Ò
,
OOÒ Ú
$str
OOÛ ˇ
,
OOˇ Ä
$str
OOÅ ù
,
OOù û
$str
OOü ¨
,
OO¨ ≠
$num
OOÆ Ø
,
OOØ ∞
$str
OO± —
,
OO— “
$str
OO” Î
,
OOÎ Ï
null
OOÌ Ò
,
OOÒ Ú
null
OOÛ ˜
}
OO¯ ˘
,
OO˘ ˙
{PP 
newPP 
GuidPP 
(PP 
$strPP E
)PPE F
,PPF G
$str	PPH è
,
PPè ê
$str
PPë À
,
PPÀ Ã
$str
PPÕ ‰
,
PP‰ Â
null
PPÊ Í
,
PPÍ Î
null
PPÏ 
,
PP Ò
$str
PPÚ £
,
PP£ §
$str
PP• Æ
,
PPÆ Ø
$str
PP∞ …
,
PP…  
$str
PPÀ Ì
,
PPÌ Ó
$str
PPÔ ˚
,
PP˚ ¸
$str
PP˝ ô
,
PPô ö
$str
PPõ ®
,
PP® ©
$num
PP™ ´
,
PP´ ¨
$str
PP≠ Õ
,
PPÕ Œ
$str
PPœ Ë
,
PPË È
null
PPÍ Ó
,
PPÓ Ô
null
PP Ù
}
PPı ˆ
,
PPˆ ˜
{QQ 
newQQ 
GuidQQ 
(QQ 
$strQQ E
)QQE F
,QQF G
$str	QQH ®
,
QQ® ©
$str
QQ™ ÿ
,
QQÿ Ÿ
$str
QQ⁄ ‰
,
QQ‰ Â
null
QQÊ Í
,
QQÍ Î
null
QQÏ 
,
QQ Ò
$str
QQÚ £
,
QQ£ §
$str
QQ• Æ
,
QQÆ Ø
$str
QQ∞  
,
QQ  À
$str
QQÃ Û
,
QQÛ Ù
$str
QQı ˇ
,
QQˇ Ä
$str
QQÅ ù
,
QQù û
$str
QQü ¨
,
QQ¨ ≠
$num
QQÆ Ø
,
QQØ ∞
$str
QQ± ∆
,
QQ∆ «
$str
QQ» ÿ
,
QQÿ Ÿ
null
QQ⁄ ﬁ
,
QQﬁ ﬂ
null
QQ‡ ‰
}
QQÂ Ê
,
QQÊ Á
{RR 
newRR 
GuidRR 
(RR 
$strRR E
)RRE F
,RRF G
$str	RRH ë
,
RRë í
$str
RRì Õ
,
RRÕ Œ
$str
RRœ ·
,
RR· ‚
null
RR„ Á
,
RRÁ Ë
null
RRÈ Ì
,
RRÌ Ó
$str
RRÔ †
,
RR† °
$str
RR¢ ´
,
RR´ ¨
$str
RR≠ ∆
,
RR∆ «
$str
RR» Ê
,
RRÊ Á
$str
RRË Ô
,
RRÔ 
$str
RRÒ ç
,
RRç é
$str
RRè ú
,
RRú ù
$num
RRû ü
,
RRü †
$str
RR° ø
,
RRø ¿
$str
RR¡ Â
,
RRÂ Ê
null
RRÁ Î
,
RRÎ Ï
null
RRÌ Ò
}
RRÚ Û
,
RRÛ Ù
{SS 
newSS 
GuidSS 
(SS 
$strSS E
)SSE F
,SSF G
$str	SSH è
,
SSè ê
$str
SSë ∫
,
SS∫ ª
$str
SSº  
,
SS  À
null
SSÃ –
,
SS– —
null
SS“ ÷
,
SS÷ ◊
$str
SSÿ â
,
SSâ ä
$str
SSã î
,
SSî ï
$str
SSñ ¢
,
SS¢ £
$str
SS§ ¥
,
SS¥ µ
$str
SS∂ ¿
,
SS¿ ¡
$str
SS¬ ÿ
,
SSÿ Ÿ
$str
SS⁄ Ê
,
SSÊ Á
$num
SSË È
,
SSÈ Í
$str
SSÎ ¸
,
SS¸ ˝
$str
SS˛ ì
,
SSì î
null
SSï ô
,
SSô ö
null
SSõ ü
}
SS† °
,
SS° ¢
{TT 
newTT 
GuidTT 
(TT 
$strTT E
)TTE F
,TTF G
$str	TTH û
,
TTû ü
$str
TT† ≈
,
TT≈ ∆
$str
TT« œ
,
TTœ –
null
TT— ’
,
TT’ ÷
null
TT◊ €
,
TT€ ‹
$str
TT› é
,
TTé è
$str
TTê ô
,
TTô ö
$str
TTõ µ
,
TTµ ∂
$str
TT∑ œ
,
TTœ –
$str
TT— €
,
TT€ ‹
$str
TT› ˘
,
TT˘ ˙
$str
TT˚ à
,
TTà â
$num
TTä ã
,
TTã å
$str
TTç ¢
,
TT¢ £
$str
TT§ µ
,
TTµ ∂
null
TT∑ ª
,
TTª º
null
TTΩ ¡
}
TT¬ √
,
TT√ ƒ
{UU 
newUU 
GuidUU 
(UU 
$strUU E
)UUE F
,UUF G
$str	UUH ∞
,
UU∞ ±
$str
UU≤ Ï
,
UUÏ Ì
$str
UUÓ ˜
,
UU˜ ¯
null
UU˘ ˝
,
UU˝ ˛
null
UUˇ É
,
UUÉ Ñ
$str
UUÖ ∂
,
UU∂ ∑
$str
UU∏ ¡
,
UU¡ ¬
$str
UU√ ‹
,
UU‹ ›
$str
UUﬁ ˘
,
UU˘ ˙
$str
UU˚ Ö
,
UUÖ Ü
$str
UUá £
,
UU£ §
$str
UU• ≤
,
UU≤ ≥
$num
UU¥ µ
,
UUµ ∂
$str
UU∑ À
,
UUÀ Ã
$str
UUÕ €
,
UU€ ‹
null
UU› ·
,
UU· ‚
null
UU„ Á
}
UUË È
,
UUÈ Í
{VV 
newVV 
GuidVV 
(VV 
$strVV E
)VVE F
,VVF G
$strVVH s
,VVs t
$str	VVu ô
,
VVô ö
$str
VVõ •
,
VV• ¶
null
VVß ´
,
VV´ ¨
null
VV≠ ±
,
VV± ≤
$str
VV≥ ˘
,
VV˘ ˙
$str
VV˚ Ñ
,
VVÑ Ö
$str
VVÜ ü
,
VVü †
$str
VV° Œ
,
VVŒ œ
$str
VV– ‹
,
VV‹ ›
$str
VVﬁ ˙
,
VV˙ ˚
$str
VV¸ â
,
VVâ ä
$num
VVã å
,
VVå ç
$str
VVé ª
,
VVª º
$str
VVΩ ›
,
VV› ﬁ
null
VVﬂ „
,
VV„ ‰
null
VVÂ È
}
VVÍ Î
}WW 
)WW 
;WW 
}XX 	
	protected[[ 
override[[ 
void[[ 
Down[[  $
([[$ %
MigrationBuilder[[% 5
migrationBuilder[[6 F
)[[F G
{\\ 	
migrationBuilder]] 
.]] 

DeleteData]] '
(]]' (
table^^ 
:^^ 
$str^^ '
,^^' (
	keyColumn__ 
:__ 
$str__ 
,__  
keyValue`` 
:`` 
new`` 
Guid`` "
(``" #
$str``# I
)``I J
)``J K
;``K L
migrationBuilderbb 
.bb 

DeleteDatabb '
(bb' (
tablecc 
:cc 
$strcc '
,cc' (
	keyColumndd 
:dd 
$strdd 
,dd  
keyValueee 
:ee 
newee 
Guidee "
(ee" #
$stree# I
)eeI J
)eeJ K
;eeK L
migrationBuildergg 
.gg 

DeleteDatagg '
(gg' (
tablehh 
:hh 
$strhh '
,hh' (
	keyColumnii 
:ii 
$strii 
,ii  
keyValuejj 
:jj 
newjj 
Guidjj "
(jj" #
$strjj# I
)jjI J
)jjJ K
;jjK L
migrationBuilderll 
.ll 

DeleteDatall '
(ll' (
tablemm 
:mm 
$strmm '
,mm' (
	keyColumnnn 
:nn 
$strnn 
,nn  
keyValueoo 
:oo 
newoo 
Guidoo "
(oo" #
$stroo# I
)ooI J
)ooJ K
;ooK L
migrationBuilderqq 
.qq 

DeleteDataqq '
(qq' (
tablerr 
:rr 
$strrr '
,rr' (
	keyColumnss 
:ss 
$strss 
,ss  
keyValuett 
:tt 
newtt 
Guidtt "
(tt" #
$strtt# I
)ttI J
)ttJ K
;ttK L
migrationBuildervv 
.vv 

DeleteDatavv '
(vv' (
tableww 
:ww 
$strww '
,ww' (
	keyColumnxx 
:xx 
$strxx 
,xx  
keyValueyy 
:yy 
newyy 
Guidyy "
(yy" #
$stryy# I
)yyI J
)yyJ K
;yyK L
migrationBuilder{{ 
.{{ 

DeleteData{{ '
({{' (
table|| 
:|| 
$str|| '
,||' (
	keyColumn}} 
:}} 
$str}} 
,}}  
keyValue~~ 
:~~ 
new~~ 
Guid~~ "
(~~" #
$str~~# I
)~~I J
)~~J K
;~~K L
migrationBuilder
ÄÄ 
.
ÄÄ 

DeleteData
ÄÄ '
(
ÄÄ' (
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ '
,
ÅÅ' (
	keyColumn
ÇÇ 
:
ÇÇ 
$str
ÇÇ 
,
ÇÇ  
keyValue
ÉÉ 
:
ÉÉ 
new
ÉÉ 
Guid
ÉÉ "
(
ÉÉ" #
$str
ÉÉ# I
)
ÉÉI J
)
ÉÉJ K
;
ÉÉK L
migrationBuilder
ÖÖ 
.
ÖÖ 

DeleteData
ÖÖ '
(
ÖÖ' (
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ '
,
ÜÜ' (
	keyColumn
áá 
:
áá 
$str
áá 
,
áá  
keyValue
àà 
:
àà 
new
àà 
Guid
àà "
(
àà" #
$str
àà# I
)
ààI J
)
ààJ K
;
ààK L
migrationBuilder
ää 
.
ää 
RenameColumn
ää )
(
ää) *
name
ãã 
:
ãã 
$str
ãã %
,
ãã% &
table
åå 
:
åå 
$str
åå !
,
åå! "
newName
çç 
:
çç 
$str
çç )
)
çç) *
;
çç* +
migrationBuilder
èè 
.
èè 

UpdateData
èè '
(
èè' (
table
êê 
:
êê 
$str
êê $
,
êê$ %
	keyColumn
ëë 
:
ëë 
$str
ëë 
,
ëë  
keyValue
íí 
:
íí 
$str
íí +
,
íí+ ,
columns
ìì 
:
ìì 
new
ìì 
[
ìì 
]
ìì 
{
ìì  
$str
ìì! 3
,
ìì3 4
$str
ìì5 A
,
ììA B
$str
ììC Q
,
ììQ R
$str
ììS b
}
ììc d
,
ììd e
values
îî 
:
îî 
new
îî 
object
îî "
[
îî" #
]
îî# $
{
îî% &
$str
îî' M
,
îîM N
new
îîO R
DateTime
îîS [
(
îî[ \
$num
îî\ `
,
îî` a
$num
îîb c
,
îîc d
$num
îîe g
,
îîg h
$num
îîi j
,
îîj k
$num
îîl n
,
îîn o
$num
îîp r
,
îîr s
$num
îît u
,
îîu v
DateTimeKindîîw É
.îîÉ Ñ
UtcîîÑ á
)îîá à
.îîà â
AddTicksîîâ ë
(îîë í
$numîîí ñ
)îîñ ó
,îîó ò
$strîîô Ô
,îîÔ 
$strîîÒ ó
}îîò ô
)îîô ö
;îîö õ
migrationBuilder
ññ 
.
ññ 

InsertData
ññ '
(
ññ' (
table
óó 
:
óó 
$str
óó '
,
óó' (
columns
òò 
:
òò 
new
òò 
[
òò 
]
òò 
{
òò  
$str
òò! %
,
òò% &
$str
òò' 4
,
òò4 5
$str
òò6 D
,
òòD E
$str
òòF P
,
òòP Q
$str
òòR ]
,
òò] ^
$str
òò_ l
,
òòl m
$str
òòn }
,
òò} ~
$stròò â
,òòâ ä
$stròòã †
,òò† °
$stròò¢ ±
,òò± ≤
$stròò≥ ¬
,òò¬ √
$stròòƒ —
,òò— “
$stròò” ﬂ
,òòﬂ ‡
$stròò· È
,òòÈ Í
$stròòÎ ¯
,òò¯ ˘
$stròò˙ à
,òòà â
$stròòä ï
,òòï ñ
$stròòó §
}òò• ¶
,òò¶ ß
values
ôô 
:
ôô 
new
ôô 
object
ôô "
[
ôô" #
,
ôô# $
]
ôô$ %
{
öö 
{
õõ 
new
õõ 
Guid
õõ 
(
õõ 
$str
õõ E
)
õõE F
,
õõF G
$strõõH ë
,õõë í
$strõõì Õ
,õõÕ Œ
$strõõœ ·
,õõ· ‚
nullõõ„ Á
,õõÁ Ë
nullõõÈ Ì
,õõÌ Ó
$strõõÔ †
,õõ† °
$strõõ¢ ´
,õõ´ ¨
$strõõ≠ ∆
,õõ∆ «
$strõõ» Ê
,õõÊ Á
$strõõË Ô
,õõÔ 
$strõõÒ ç
,õõç é
$strõõè ú
,õõú ù
$numõõû ü
,õõü †
$strõõ° ø
,õõø ¿
$strõõ¡ Â
,õõÂ Ê
nullõõÁ Î
,õõÎ Ï
nullõõÌ Ò
}õõÚ Û
,õõÛ Ù
{
úú 
new
úú 
Guid
úú 
(
úú 
$str
úú E
)
úúE F
,
úúF G
$strúúH è
,úúè ê
$strúúë ∫
,úú∫ ª
$strúúº  
,úú  À
nullúúÃ –
,úú– —
nullúú“ ÷
,úú÷ ◊
$strúúÿ â
,úúâ ä
$strúúã î
,úúî ï
$strúúñ ¢
,úú¢ £
$strúú§ ¥
,úú¥ µ
$strúú∂ ¿
,úú¿ ¡
$strúú¬ ÿ
,úúÿ Ÿ
$strúú⁄ Ê
,úúÊ Á
$numúúË È
,úúÈ Í
$strúúÎ ¸
,úú¸ ˝
$strúú˛ ì
,úúì î
nullúúï ô
,úúô ö
nullúúõ ü
}úú† °
,úú° ¢
{
ùù 
new
ùù 
Guid
ùù 
(
ùù 
$str
ùù E
)
ùùE F
,
ùùF G
$strùùH æ
,ùùæ ø
$strùù¿ ù
,ùùù û
$strùùü ©
,ùù© ™
nullùù´ Ø
,ùùØ ∞
nullùù± µ
,ùùµ ∂
$strùù∑ ˚
,ùù˚ ¸
$strùù˝ Ü
,ùùÜ á
$strùùà ≠
,ùù≠ Æ
$strùùØ ’
,ùù’ ÷
$strùù◊ ·
,ùù· ‚
$strùù„ ˇ
,ùùˇ Ä
$strùùÅ é
,ùùé è
$numùùê ë
,ùùë í
$strùùì ®
,ùù® ©
$strùù™ ø
,ùùø ¿
nullùù¡ ≈
,ùù≈ ∆
nullùù« À
}ùùÃ Õ
,ùùÕ Œ
{
ûû 
new
ûû 
Guid
ûû 
(
ûû 
$str
ûû E
)
ûûE F
,
ûûF G
$strûûH û
,ûûû ü
$strûû† ≈
,ûû≈ ∆
$strûû« œ
,ûûœ –
nullûû— ’
,ûû’ ÷
nullûû◊ €
,ûû€ ‹
$strûû› é
,ûûé è
$strûûê ô
,ûûô ö
$strûûõ µ
,ûûµ ∂
$strûû∑ œ
,ûûœ –
$strûû— €
,ûû€ ‹
$strûû› ˘
,ûû˘ ˙
$strûû˚ à
,ûûà â
$numûûä ã
,ûûã å
$strûûç ¢
,ûû¢ £
$strûû§ µ
,ûûµ ∂
nullûû∑ ª
,ûûª º
nullûûΩ ¡
}ûû¬ √
,ûû√ ƒ
{
üü 
new
üü 
Guid
üü 
(
üü 
$str
üü E
)
üüE F
,
üüF G
$str
üüH s
,
üüs t
$strüüu ô
,üüô ö
$strüüõ •
,üü• ¶
nullüüß ´
,üü´ ¨
nullüü≠ ±
,üü± ≤
$strüü≥ ˘
,üü˘ ˙
$strüü˚ Ñ
,üüÑ Ö
$strüüÜ ü
,üüü †
$strüü° Œ
,üüŒ œ
$strüü– ‹
,üü‹ ›
$strüüﬁ ˙
,üü˙ ˚
$strüü¸ â
,üüâ ä
$numüüã å
,üüå ç
$strüüé ª
,üüª º
$strüüΩ ›
,üü› ﬁ
nullüüﬂ „
,üü„ ‰
nullüüÂ È
}üüÍ Î
,üüÎ Ï
{
†† 
new
†† 
Guid
†† 
(
†† 
$str
†† E
)
††E F
,
††F G
$str††H ®
,††® ©
$str††™ ÿ
,††ÿ Ÿ
$str††⁄ ‰
,††‰ Â
null††Ê Í
,††Í Î
null††Ï 
,†† Ò
$str††Ú £
,††£ §
$str††• Æ
,††Æ Ø
$str††∞  
,††  À
$str††Ã Û
,††Û Ù
$str††ı ˇ
,††ˇ Ä
$str††Å ù
,††ù û
$str††ü ¨
,††¨ ≠
$num††Æ Ø
,††Ø ∞
$str††± ∆
,††∆ «
$str††» ÿ
,††ÿ Ÿ
null††⁄ ﬁ
,††ﬁ ﬂ
null††‡ ‰
}††Â Ê
,††Ê Á
{
°° 
new
°° 
Guid
°° 
(
°° 
$str
°° E
)
°°E F
,
°°F G
$str°°H è
,°°è ê
$str°°ë À
,°°À Ã
$str°°Õ ‰
,°°‰ Â
null°°Ê Í
,°°Í Î
null°°Ï 
,°° Ò
$str°°Ú £
,°°£ §
$str°°• Æ
,°°Æ Ø
$str°°∞ …
,°°…  
$str°°À Ì
,°°Ì Ó
$str°°Ô ˚
,°°˚ ¸
$str°°˝ ô
,°°ô ö
$str°°õ ®
,°°® ©
$num°°™ ´
,°°´ ¨
$str°°≠ Õ
,°°Õ Œ
$str°°œ Ë
,°°Ë È
null°°Í Ó
,°°Ó Ô
null°° Ù
}°°ı ˆ
,°°ˆ ˜
{
¢¢ 
new
¢¢ 
Guid
¢¢ 
(
¢¢ 
$str
¢¢ E
)
¢¢E F
,
¢¢F G
$str¢¢H ∞
,¢¢∞ ±
$str¢¢≤ Ï
,¢¢Ï Ì
$str¢¢Ó ˜
,¢¢˜ ¯
null¢¢˘ ˝
,¢¢˝ ˛
null¢¢ˇ É
,¢¢É Ñ
$str¢¢Ö ∂
,¢¢∂ ∑
$str¢¢∏ ¡
,¢¢¡ ¬
$str¢¢√ ‹
,¢¢‹ ›
$str¢¢ﬁ ˘
,¢¢˘ ˙
$str¢¢˚ Ö
,¢¢Ö Ü
$str¢¢á £
,¢¢£ §
$str¢¢• ≤
,¢¢≤ ≥
$num¢¢¥ µ
,¢¢µ ∂
$str¢¢∑ À
,¢¢À Ã
$str¢¢Õ €
,¢¢€ ‹
null¢¢› ·
,¢¢· ‚
null¢¢„ Á
}¢¢Ë È
,¢¢È Í
{
££ 
new
££ 
Guid
££ 
(
££ 
$str
££ E
)
££E F
,
££F G
$str££H è
,££è ê
$str££ë À
,££À Ã
$str££Õ ‰
,££‰ Â
null££Ê Í
,££Í Î
null££Ï 
,££ Ò
$str££Ú £
,£££ §
$str££• Æ
,££Æ Ø
$str££∞ …
,££…  
$str££À Ò
,££Ò Ú
$str££Û ˇ
,££ˇ Ä
$str££Å ù
,££ù û
$str££ü ¨
,££¨ ≠
$num££Æ Ø
,££Ø ∞
$str££± —
,££— “
$str££” Î
,££Î Ï
null££Ì Ò
,££Ò Ú
null££Û ˜
}££¯ ˘
}
§§ 
)
§§ 
;
§§ 
}
•• 	
}
¶¶ 
}ßß ±ÿ
ìD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240719015945_AddStripeAccountIdIntoTableInstructor.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class 1
%AddStripeAccountIdIntoTableInstructor >
:? @
	MigrationA J
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table 
: 
$str '
,' (
	keyColumn 
: 
$str 
,  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder 
. 

DeleteData '
(' (
table   
:   
$str   '
,  ' (
	keyColumn!! 
:!! 
$str!! 
,!!  
keyValue"" 
:"" 
new"" 
Guid"" "
(""" #
$str""# I
)""I J
)""J K
;""K L
migrationBuilder$$ 
.$$ 

DeleteData$$ '
($$' (
table%% 
:%% 
$str%% '
,%%' (
	keyColumn&& 
:&& 
$str&& 
,&&  
keyValue'' 
:'' 
new'' 
Guid'' "
(''" #
$str''# I
)''I J
)''J K
;''K L
migrationBuilder)) 
.)) 

DeleteData)) '
())' (
table** 
:** 
$str** '
,**' (
	keyColumn++ 
:++ 
$str++ 
,++  
keyValue,, 
:,, 
new,, 
Guid,, "
(,," #
$str,,# I
),,I J
),,J K
;,,K L
migrationBuilder.. 
... 

DeleteData.. '
(..' (
table// 
:// 
$str// '
,//' (
	keyColumn00 
:00 
$str00 
,00  
keyValue11 
:11 
new11 
Guid11 "
(11" #
$str11# I
)11I J
)11J K
;11K L
migrationBuilder33 
.33 

DeleteData33 '
(33' (
table44 
:44 
$str44 '
,44' (
	keyColumn55 
:55 
$str55 
,55  
keyValue66 
:66 
new66 
Guid66 "
(66" #
$str66# I
)66I J
)66J K
;66K L
migrationBuilder88 
.88 

DeleteData88 '
(88' (
table99 
:99 
$str99 '
,99' (
	keyColumn:: 
::: 
$str:: 
,::  
keyValue;; 
:;; 
new;; 
Guid;; "
(;;" #
$str;;# I
);;I J
);;J K
;;;K L
migrationBuilder== 
.== 
	AddColumn== &
<==& '
string==' -
>==- .
(==. /
name>> 
:>> 
$str>> '
,>>' (
table?? 
:?? 
$str?? $
,??$ %
type@@ 
:@@ 
$str@@ %
,@@% &
nullableAA 
:AA 
trueAA 
)AA 
;AA  
migrationBuilderCC 
.CC 

UpdateDataCC '
(CC' (
tableDD 
:DD 
$strDD $
,DD$ %
	keyColumnEE 
:EE 
$strEE 
,EE  
keyValueFF 
:FF 
$strFF +
,FF+ ,
columnsGG 
:GG 
newGG 
[GG 
]GG 
{GG  
$strGG! 3
,GG3 4
$strGG5 A
,GGA B
$strGGC Q
,GGQ R
$strGGS b
}GGc d
,GGd e
valuesHH 
:HH 
newHH 
objectHH "
[HH" #
]HH# $
{HH% &
$strHH' M
,HHM N
newHHO R
DateTimeHHS [
(HH[ \
$numHH\ `
,HH` a
$numHHb c
,HHc d
$numHHe g
,HHg h
$numHHi j
,HHj k
$numHHl n
,HHn o
$numHHp r
,HHr s
$numHHt u
,HHu v
DateTimeKind	HHw É
.
HHÉ Ñ
Utc
HHÑ á
)
HHá à
.
HHà â
AddTicks
HHâ ë
(
HHë í
$num
HHí ñ
)
HHñ ó
,
HHó ò
$str
HHô Ô
,
HHÔ 
$str
HHÒ ó
}
HHò ô
)
HHô ö
;
HHö õ
migrationBuilderJJ 
.JJ 

InsertDataJJ '
(JJ' (
tableKK 
:KK 
$strKK '
,KK' (
columnsLL 
:LL 
newLL 
[LL 
]LL 
{LL  
$strLL! %
,LL% &
$strLL' 4
,LL4 5
$strLL6 D
,LLD E
$strLLF P
,LLP Q
$strLLR ]
,LL] ^
$strLL_ l
,LLl m
$strLLn }
,LL} ~
$str	LL â
,
LLâ ä
$str
LLã †
,
LL† °
$str
LL¢ ±
,
LL± ≤
$str
LL≥ ¬
,
LL¬ √
$str
LLƒ —
,
LL— “
$str
LL” ﬂ
,
LLﬂ ‡
$str
LL· È
,
LLÈ Í
$str
LLÎ ¯
,
LL¯ ˘
$str
LL˙ à
,
LLà â
$str
LLä ï
,
LLï ñ
$str
LLó §
}
LL• ¶
,
LL¶ ß
valuesMM 
:MM 
newMM 
objectMM "
[MM" #
,MM# $
]MM$ %
{NN 
{OO 
newOO 
GuidOO 
(OO 
$strOO E
)OOE F
,OOF G
$str	OOH ë
,
OOë í
$str
OOì Õ
,
OOÕ Œ
$str
OOœ ·
,
OO· ‚
null
OO„ Á
,
OOÁ Ë
null
OOÈ Ì
,
OOÌ Ó
$str
OOÔ †
,
OO† °
$str
OO¢ ´
,
OO´ ¨
$str
OO≠ ∆
,
OO∆ «
$str
OO» Ê
,
OOÊ Á
$str
OOË Ô
,
OOÔ 
$str
OOÒ ç
,
OOç é
$str
OOè ú
,
OOú ù
$num
OOû ü
,
OOü †
$str
OO° ø
,
OOø ¿
$str
OO¡ Â
,
OOÂ Ê
null
OOÁ Î
,
OOÎ Ï
null
OOÌ Ò
}
OOÚ Û
,
OOÛ Ù
{PP 
newPP 
GuidPP 
(PP 
$strPP E
)PPE F
,PPF G
$str	PPH è
,
PPè ê
$str
PPë ∫
,
PP∫ ª
$str
PPº  
,
PP  À
null
PPÃ –
,
PP– —
null
PP“ ÷
,
PP÷ ◊
$str
PPÿ â
,
PPâ ä
$str
PPã î
,
PPî ï
$str
PPñ ¢
,
PP¢ £
$str
PP§ ¥
,
PP¥ µ
$str
PP∂ ¿
,
PP¿ ¡
$str
PP¬ ÿ
,
PPÿ Ÿ
$str
PP⁄ Ê
,
PPÊ Á
$num
PPË È
,
PPÈ Í
$str
PPÎ ¸
,
PP¸ ˝
$str
PP˛ ì
,
PPì î
null
PPï ô
,
PPô ö
null
PPõ ü
}
PP† °
,
PP° ¢
{QQ 
newQQ 
GuidQQ 
(QQ 
$strQQ E
)QQE F
,QQF G
$str	QQH æ
,
QQæ ø
$str
QQ¿ ù
,
QQù û
$str
QQü ©
,
QQ© ™
null
QQ´ Ø
,
QQØ ∞
null
QQ± µ
,
QQµ ∂
$str
QQ∑ ˚
,
QQ˚ ¸
$str
QQ˝ Ü
,
QQÜ á
$str
QQà ≠
,
QQ≠ Æ
$str
QQØ ’
,
QQ’ ÷
$str
QQ◊ ·
,
QQ· ‚
$str
QQ„ ˇ
,
QQˇ Ä
$str
QQÅ é
,
QQé è
$num
QQê ë
,
QQë í
$str
QQì ®
,
QQ® ©
$str
QQ™ ø
,
QQø ¿
null
QQ¡ ≈
,
QQ≈ ∆
null
QQ« À
}
QQÃ Õ
,
QQÕ Œ
{RR 
newRR 
GuidRR 
(RR 
$strRR E
)RRE F
,RRF G
$str	RRH û
,
RRû ü
$str
RR† ≈
,
RR≈ ∆
$str
RR« œ
,
RRœ –
null
RR— ’
,
RR’ ÷
null
RR◊ €
,
RR€ ‹
$str
RR› é
,
RRé è
$str
RRê ô
,
RRô ö
$str
RRõ µ
,
RRµ ∂
$str
RR∑ œ
,
RRœ –
$str
RR— €
,
RR€ ‹
$str
RR› ˘
,
RR˘ ˙
$str
RR˚ à
,
RRà â
$num
RRä ã
,
RRã å
$str
RRç ¢
,
RR¢ £
$str
RR§ µ
,
RRµ ∂
null
RR∑ ª
,
RRª º
null
RRΩ ¡
}
RR¬ √
,
RR√ ƒ
{SS 
newSS 
GuidSS 
(SS 
$strSS E
)SSE F
,SSF G
$strSSH s
,SSs t
$str	SSu ô
,
SSô ö
$str
SSõ •
,
SS• ¶
null
SSß ´
,
SS´ ¨
null
SS≠ ±
,
SS± ≤
$str
SS≥ ˘
,
SS˘ ˙
$str
SS˚ Ñ
,
SSÑ Ö
$str
SSÜ ü
,
SSü †
$str
SS° Œ
,
SSŒ œ
$str
SS– ‹
,
SS‹ ›
$str
SSﬁ ˙
,
SS˙ ˚
$str
SS¸ â
,
SSâ ä
$num
SSã å
,
SSå ç
$str
SSé ª
,
SSª º
$str
SSΩ ›
,
SS› ﬁ
null
SSﬂ „
,
SS„ ‰
null
SSÂ È
}
SSÍ Î
,
SSÎ Ï
{TT 
newTT 
GuidTT 
(TT 
$strTT E
)TTE F
,TTF G
$str	TTH ®
,
TT® ©
$str
TT™ ÿ
,
TTÿ Ÿ
$str
TT⁄ ‰
,
TT‰ Â
null
TTÊ Í
,
TTÍ Î
null
TTÏ 
,
TT Ò
$str
TTÚ £
,
TT£ §
$str
TT• Æ
,
TTÆ Ø
$str
TT∞  
,
TT  À
$str
TTÃ Û
,
TTÛ Ù
$str
TTı ˇ
,
TTˇ Ä
$str
TTÅ ù
,
TTù û
$str
TTü ¨
,
TT¨ ≠
$num
TTÆ Ø
,
TTØ ∞
$str
TT± ∆
,
TT∆ «
$str
TT» ÿ
,
TTÿ Ÿ
null
TT⁄ ﬁ
,
TTﬁ ﬂ
null
TT‡ ‰
}
TTÂ Ê
,
TTÊ Á
{UU 
newUU 
GuidUU 
(UU 
$strUU E
)UUE F
,UUF G
$str	UUH è
,
UUè ê
$str
UUë À
,
UUÀ Ã
$str
UUÕ ‰
,
UU‰ Â
null
UUÊ Í
,
UUÍ Î
null
UUÏ 
,
UU Ò
$str
UUÚ £
,
UU£ §
$str
UU• Æ
,
UUÆ Ø
$str
UU∞ …
,
UU…  
$str
UUÀ Ì
,
UUÌ Ó
$str
UUÔ ˚
,
UU˚ ¸
$str
UU˝ ô
,
UUô ö
$str
UUõ ®
,
UU® ©
$num
UU™ ´
,
UU´ ¨
$str
UU≠ Õ
,
UUÕ Œ
$str
UUœ Ë
,
UUË È
null
UUÍ Ó
,
UUÓ Ô
null
UU Ù
}
UUı ˆ
,
UUˆ ˜
{VV 
newVV 
GuidVV 
(VV 
$strVV E
)VVE F
,VVF G
$str	VVH ∞
,
VV∞ ±
$str
VV≤ Ï
,
VVÏ Ì
$str
VVÓ ˜
,
VV˜ ¯
null
VV˘ ˝
,
VV˝ ˛
null
VVˇ É
,
VVÉ Ñ
$str
VVÖ ∂
,
VV∂ ∑
$str
VV∏ ¡
,
VV¡ ¬
$str
VV√ ‹
,
VV‹ ›
$str
VVﬁ ˘
,
VV˘ ˙
$str
VV˚ Ö
,
VVÖ Ü
$str
VVá £
,
VV£ §
$str
VV• ≤
,
VV≤ ≥
$num
VV¥ µ
,
VVµ ∂
$str
VV∑ À
,
VVÀ Ã
$str
VVÕ €
,
VV€ ‹
null
VV› ·
,
VV· ‚
null
VV„ Á
}
VVË È
,
VVÈ Í
{WW 
newWW 
GuidWW 
(WW 
$strWW E
)WWE F
,WWF G
$str	WWH è
,
WWè ê
$str
WWë À
,
WWÀ Ã
$str
WWÕ ‰
,
WW‰ Â
null
WWÊ Í
,
WWÍ Î
null
WWÏ 
,
WW Ò
$str
WWÚ £
,
WW£ §
$str
WW• Æ
,
WWÆ Ø
$str
WW∞ …
,
WW…  
$str
WWÀ Ò
,
WWÒ Ú
$str
WWÛ ˇ
,
WWˇ Ä
$str
WWÅ ù
,
WWù û
$str
WWü ¨
,
WW¨ ≠
$num
WWÆ Ø
,
WWØ ∞
$str
WW± —
,
WW— “
$str
WW” Î
,
WWÎ Ï
null
WWÌ Ò
,
WWÒ Ú
null
WWÛ ˜
}
WW¯ ˘
}XX 
)XX 
;XX 
}YY 	
	protected\\ 
override\\ 
void\\ 
Down\\  $
(\\$ %
MigrationBuilder\\% 5
migrationBuilder\\6 F
)\\F G
{]] 	
migrationBuilder^^ 
.^^ 

DeleteData^^ '
(^^' (
table__ 
:__ 
$str__ '
,__' (
	keyColumn`` 
:`` 
$str`` 
,``  
keyValueaa 
:aa 
newaa 
Guidaa "
(aa" #
$straa# I
)aaI J
)aaJ K
;aaK L
migrationBuildercc 
.cc 

DeleteDatacc '
(cc' (
tabledd 
:dd 
$strdd '
,dd' (
	keyColumnee 
:ee 
$stree 
,ee  
keyValueff 
:ff 
newff 
Guidff "
(ff" #
$strff# I
)ffI J
)ffJ K
;ffK L
migrationBuilderhh 
.hh 

DeleteDatahh '
(hh' (
tableii 
:ii 
$strii '
,ii' (
	keyColumnjj 
:jj 
$strjj 
,jj  
keyValuekk 
:kk 
newkk 
Guidkk "
(kk" #
$strkk# I
)kkI J
)kkJ K
;kkK L
migrationBuildermm 
.mm 

DeleteDatamm '
(mm' (
tablenn 
:nn 
$strnn '
,nn' (
	keyColumnoo 
:oo 
$stroo 
,oo  
keyValuepp 
:pp 
newpp 
Guidpp "
(pp" #
$strpp# I
)ppI J
)ppJ K
;ppK L
migrationBuilderrr 
.rr 

DeleteDatarr '
(rr' (
tabless 
:ss 
$strss '
,ss' (
	keyColumntt 
:tt 
$strtt 
,tt  
keyValueuu 
:uu 
newuu 
Guiduu "
(uu" #
$struu# I
)uuI J
)uuJ K
;uuK L
migrationBuilderww 
.ww 

DeleteDataww '
(ww' (
tablexx 
:xx 
$strxx '
,xx' (
	keyColumnyy 
:yy 
$stryy 
,yy  
keyValuezz 
:zz 
newzz 
Guidzz "
(zz" #
$strzz# I
)zzI J
)zzJ K
;zzK L
migrationBuilder|| 
.|| 

DeleteData|| '
(||' (
table}} 
:}} 
$str}} '
,}}' (
	keyColumn~~ 
:~~ 
$str~~ 
,~~  
keyValue 
: 
new 
Guid "
(" #
$str# I
)I J
)J K
;K L
migrationBuilder
ÅÅ 
.
ÅÅ 

DeleteData
ÅÅ '
(
ÅÅ' (
table
ÇÇ 
:
ÇÇ 
$str
ÇÇ '
,
ÇÇ' (
	keyColumn
ÉÉ 
:
ÉÉ 
$str
ÉÉ 
,
ÉÉ  
keyValue
ÑÑ 
:
ÑÑ 
new
ÑÑ 
Guid
ÑÑ "
(
ÑÑ" #
$str
ÑÑ# I
)
ÑÑI J
)
ÑÑJ K
;
ÑÑK L
migrationBuilder
ÜÜ 
.
ÜÜ 

DeleteData
ÜÜ '
(
ÜÜ' (
table
áá 
:
áá 
$str
áá '
,
áá' (
	keyColumn
àà 
:
àà 
$str
àà 
,
àà  
keyValue
ââ 
:
ââ 
new
ââ 
Guid
ââ "
(
ââ" #
$str
ââ# I
)
ââI J
)
ââJ K
;
ââK L
migrationBuilder
ãã 
.
ãã 

DropColumn
ãã '
(
ãã' (
name
åå 
:
åå 
$str
åå '
,
åå' (
table
çç 
:
çç 
$str
çç $
)
çç$ %
;
çç% &
migrationBuilder
èè 
.
èè 

UpdateData
èè '
(
èè' (
table
êê 
:
êê 
$str
êê $
,
êê$ %
	keyColumn
ëë 
:
ëë 
$str
ëë 
,
ëë  
keyValue
íí 
:
íí 
$str
íí +
,
íí+ ,
columns
ìì 
:
ìì 
new
ìì 
[
ìì 
]
ìì 
{
ìì  
$str
ìì! 3
,
ìì3 4
$str
ìì5 A
,
ììA B
$str
ììC Q
,
ììQ R
$str
ììS b
}
ììc d
,
ììd e
values
îî 
:
îî 
new
îî 
object
îî "
[
îî" #
]
îî# $
{
îî% &
$str
îî' M
,
îîM N
new
îîO R
DateTime
îîS [
(
îî[ \
$num
îî\ `
,
îî` a
$num
îîb c
,
îîc d
$num
îîe g
,
îîg h
$num
îîi j
,
îîj k
$num
îîl n
,
îîn o
$num
îîp r
,
îîr s
$num
îît v
,
îîv w
DateTimeKindîîx Ñ
.îîÑ Ö
UtcîîÖ à
)îîà â
.îîâ ä
AddTicksîîä í
(îîí ì
$numîîì ó
)îîó ò
,îîò ô
$strîîö 
,îî Ò
$strîîÚ ò
}îîô ö
)îîö õ
;îîõ ú
migrationBuilder
ññ 
.
ññ 

InsertData
ññ '
(
ññ' (
table
óó 
:
óó 
$str
óó '
,
óó' (
columns
òò 
:
òò 
new
òò 
[
òò 
]
òò 
{
òò  
$str
òò! %
,
òò% &
$str
òò' 4
,
òò4 5
$str
òò6 D
,
òòD E
$str
òòF P
,
òòP Q
$str
òòR ]
,
òò] ^
$str
òò_ l
,
òòl m
$str
òòn }
,
òò} ~
$stròò â
,òòâ ä
$stròòã †
,òò† °
$stròò¢ ±
,òò± ≤
$stròò≥ ¬
,òò¬ √
$stròòƒ —
,òò— “
$stròò” ﬂ
,òòﬂ ‡
$stròò· È
,òòÈ Í
$stròòÎ ¯
,òò¯ ˘
$stròò˙ à
,òòà â
$stròòä ï
,òòï ñ
$stròòó §
}òò• ¶
,òò¶ ß
values
ôô 
:
ôô 
new
ôô 
object
ôô "
[
ôô" #
,
ôô# $
]
ôô$ %
{
öö 
{
õõ 
new
õõ 
Guid
õõ 
(
õõ 
$str
õõ E
)
õõE F
,
õõF G
$strõõH æ
,õõæ ø
$strõõ¿ û
,õõû ü
$strõõ† ™
,õõ™ ´
nullõõ¨ ∞
,õõ∞ ±
nullõõ≤ ∂
,õõ∂ ∑
$strõõ∏ ¸
,õõ¸ ˝
$strõõ˛ á
,õõá à
$strõõâ Æ
,õõÆ Ø
$strõõ∞ ÷
,õõ÷ ◊
$strõõÿ ‚
,õõ‚ „
$strõõ‰ Ä
,õõÄ Å
$strõõÇ è
,õõè ê
$numõõë í
,õõí ì
$strõõî ©
,õõ© ™
$strõõ´ ¿
,õõ¿ ¡
nullõõ¬ ∆
,õõ∆ «
nullõõ» Ã
}õõÕ Œ
,õõŒ œ
{
úú 
new
úú 
Guid
úú 
(
úú 
$str
úú E
)
úúE F
,
úúF G
$strúúH ®
,úú® ©
$strúú™ ÿ
,úúÿ Ÿ
$strúú⁄ ‰
,úú‰ Â
nullúúÊ Í
,úúÍ Î
nullúúÏ 
,úú Ò
$strúúÚ £
,úú£ §
$strúú• Æ
,úúÆ Ø
$strúú∞  
,úú  À
$strúúÃ Û
,úúÛ Ù
$strúúı ˇ
,úúˇ Ä
$strúúÅ ù
,úúù û
$strúúü ¨
,úú¨ ≠
$numúúÆ Ø
,úúØ ∞
$strúú± ∆
,úú∆ «
$strúú» ÿ
,úúÿ Ÿ
nullúú⁄ ﬁ
,úúﬁ ﬂ
nullúú‡ ‰
}úúÂ Ê
,úúÊ Á
{
ùù 
new
ùù 
Guid
ùù 
(
ùù 
$str
ùù E
)
ùùE F
,
ùùF G
$strùùH ∞
,ùù∞ ±
$strùù≤ ‚
,ùù‚ „
$strùù‰ Ì
,ùùÌ Ó
nullùùÔ Û
,ùùÛ Ù
nullùùı ˘
,ùù˘ ˙
$strùù˚ ¨
,ùù¨ ≠
$strùùÆ ∑
,ùù∑ ∏
$strùùπ “
,ùù“ ”
$strùù‘ Ô
,ùùÔ 
$strùùÒ ˚
,ùù˚ ¸
$strùù˝ ô
,ùùô ö
$strùùõ ®
,ùù® ©
$numùù™ ´
,ùù´ ¨
$strùù≠ ¡
,ùù¡ ¬
$strùù√ —
,ùù— “
nullùù” ◊
,ùù◊ ÿ
nullùùŸ ›
}ùùﬁ ﬂ
,ùùﬂ ‡
{
ûû 
new
ûû 
Guid
ûû 
(
ûû 
$str
ûû E
)
ûûE F
,
ûûF G
$strûûH ë
,ûûë í
$strûûì √
,ûû√ ƒ
$strûû≈ ◊
,ûû◊ ÿ
nullûûŸ ›
,ûû› ﬁ
nullûûﬂ „
,ûû„ ‰
$strûûÂ ñ
,ûûñ ó
$strûûò °
,ûû° ¢
$strûû£ º
,ûûº Ω
$strûûæ ‹
,ûû‹ ›
$strûûﬁ Â
,ûûÂ Ê
$strûûÁ É
,ûûÉ Ñ
$strûûÖ í
,ûûí ì
$numûûî ï
,ûûï ñ
$strûûó µ
,ûûµ ∂
$strûû∑ €
,ûû€ ‹
nullûû› ·
,ûû· ‚
nullûû„ Á
}ûûË È
,ûûÈ Í
{
üü 
new
üü 
Guid
üü 
(
üü 
$str
üü E
)
üüE F
,
üüF G
$strüüH û
,üüû ü
$strüü† ≈
,üü≈ ∆
$strüü« œ
,üüœ –
nullüü— ’
,üü’ ÷
nullüü◊ €
,üü€ ‹
$strüü› é
,üüé è
$strüüê ô
,üüô ö
$strüüõ µ
,üüµ ∂
$strüü∑ œ
,üüœ –
$strüü— €
,üü€ ‹
$strüü› ˘
,üü˘ ˙
$strüü˚ à
,üüà â
$numüüä ã
,üüã å
$strüüç ¢
,üü¢ £
$strüü§ µ
,üüµ ∂
nullüü∑ ª
,üüª º
nullüüΩ ¡
}üü¬ √
,üü√ ƒ
{
†† 
new
†† 
Guid
†† 
(
†† 
$str
†† E
)
††E F
,
††F G
$str††H è
,††è ê
$str††ë ∫
,††∫ ª
$str††º  
,††  À
null††Ã –
,††– —
null††“ ÷
,††÷ ◊
$str††ÿ â
,††â ä
$str††ã î
,††î ï
$str††ñ ¢
,††¢ £
$str††§ ¥
,††¥ µ
$str††∂ ¿
,††¿ ¡
$str††¬ ÿ
,††ÿ Ÿ
$str††⁄ Ê
,††Ê Á
$num††Ë È
,††È Í
$str††Î ¸
,††¸ ˝
$str††˛ ì
,††ì î
null††ï ô
,††ô ö
null††õ ü
}††† °
,††° ¢
{
°° 
new
°° 
Guid
°° 
(
°° 
$str
°° E
)
°°E F
,
°°F G
$str°°H è
,°°è ê
$str°°ë ¡
,°°¡ ¬
$str°°√ ⁄
,°°⁄ €
null°°‹ ‡
,°°‡ ·
null°°‚ Ê
,°°Ê Á
$str°°Ë ô
,°°ô ö
$str°°õ §
,°°§ •
$str°°¶ ø
,°°ø ¿
$str°°¡ „
,°°„ ‰
$str°°Â Ò
,°°Ò Ú
$str°°Û è
,°°è ê
$str°°ë û
,°°û ü
$num°°† °
,°°° ¢
$str°°£ √
,°°√ ƒ
$str°°≈ ﬁ
,°°ﬁ ﬂ
null°°‡ ‰
,°°‰ Â
null°°Ê Í
}°°Î Ï
,°°Ï Ì
{
¢¢ 
new
¢¢ 
Guid
¢¢ 
(
¢¢ 
$str
¢¢ E
)
¢¢E F
,
¢¢F G
$str¢¢H è
,¢¢è ê
$str¢¢ë ¡
,¢¢¡ ¬
$str¢¢√ ⁄
,¢¢⁄ €
null¢¢‹ ‡
,¢¢‡ ·
null¢¢‚ Ê
,¢¢Ê Á
$str¢¢Ë ô
,¢¢ô ö
$str¢¢õ §
,¢¢§ •
$str¢¢¶ ø
,¢¢ø ¿
$str¢¢¡ Á
,¢¢Á Ë
$str¢¢È ı
,¢¢ı ˆ
$str¢¢˜ ì
,¢¢ì î
$str¢¢ï ¢
,¢¢¢ £
$num¢¢§ •
,¢¢• ¶
$str¢¢ß «
,¢¢« »
$str¢¢… ·
,¢¢· ‚
null¢¢„ Á
,¢¢Á Ë
null¢¢È Ì
}¢¢Ó Ô
,¢¢Ô 
{
££ 
new
££ 
Guid
££ 
(
££ 
$str
££ E
)
££E F
,
££F G
$str
££H s
,
££s t
$str££u ô
,££ô ö
$str££õ •
,££• ¶
null££ß ´
,££´ ¨
null££≠ ±
,££± ≤
$str££≥ ˘
,££˘ ˙
$str££˚ Ñ
,££Ñ Ö
$str££Ü ü
,££ü †
$str££° Œ
,££Œ œ
$str££– ‹
,££‹ ›
$str££ﬁ ˙
,££˙ ˚
$str££¸ â
,££â ä
$num££ã å
,££å ç
$str££é ª
,££ª º
$str££Ω ›
,££› ﬁ
null££ﬂ „
,££„ ‰
null££Â È
}££Í Î
}
§§ 
)
§§ 
;
§§ 
}
•• 	
}
¶¶ 
}ßß »€	
uD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Migrations\20240717051850_Initial.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  

Migrations  *
{		 
public 

partial 
class 
Initial  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
string& ,
>, -
(- .
type. 2
:2 3
$str4 C
,C D
nullableE M
:M N
falseO T
)T U
,U V
Name 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
	maxLengthG P
:P Q
$numR U
,U V
nullableW _
:_ `
truea e
)e f
,f g
NormalizedName "
=# $
table% *
.* +
Column+ 1
<1 2
string2 8
>8 9
(9 :
type: >
:> ?
$str@ O
,O P
	maxLengthQ Z
:Z [
$num\ _
,_ `
nullablea i
:i j
truek o
)o p
,p q
ConcurrencyStamp $
=% &
table' ,
., -
Column- 3
<3 4
string4 :
>: ;
(; <
type< @
:@ A
$strB Q
,Q R
nullableS [
:[ \
true] a
)a b
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% 5
,5 6
x7 8
=>9 ;
x< =
.= >
Id> @
)@ A
;A B
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str #
,# $
columns   
:   
table   
=>   !
new  " %
{!! 
Id"" 
="" 
table"" 
."" 
Column"" %
<""% &
string""& ,
>"", -
(""- .
type"". 2
:""2 3
$str""4 C
,""C D
nullable""E M
:""M N
false""O T
)""T U
,""U V
Gender## 
=## 
table## "
.##" #
Column### )
<##) *
string##* 0
>##0 1
(##1 2
type##2 6
:##6 7
$str##8 G
,##G H
nullable##I Q
:##Q R
true##S W
)##W X
,##X Y
FullName$$ 
=$$ 
table$$ $
.$$$ %
Column$$% +
<$$+ ,
string$$, 2
>$$2 3
($$3 4
type$$4 8
:$$8 9
$str$$: I
,$$I J
nullable$$K S
:$$S T
true$$U Y
)$$Y Z
,$$Z [
	BirthDate%% 
=%% 
table%%  %
.%%% &
Column%%& ,
<%%, -
DateTime%%- 5
>%%5 6
(%%6 7
type%%7 ;
:%%; <
$str%%= H
,%%H I
nullable%%J R
:%%R S
true%%T X
)%%X Y
,%%Y Z
	AvatarUrl&& 
=&& 
table&&  %
.&&% &
Column&&& ,
<&&, -
string&&- 3
>&&3 4
(&&4 5
type&&5 9
:&&9 :
$str&&; J
,&&J K
nullable&&L T
:&&T U
true&&V Z
)&&Z [
,&&[ \
Country'' 
='' 
table'' #
.''# $
Column''$ *
<''* +
string''+ 1
>''1 2
(''2 3
type''3 7
:''7 8
$str''9 H
,''H I
nullable''J R
:''R S
true''T X
)''X Y
,''Y Z
Address(( 
=(( 
table(( #
.((# $
Column(($ *
<((* +
string((+ 1
>((1 2
(((2 3
type((3 7
:((7 8
$str((9 H
,((H I
nullable((J R
:((R S
true((T X
)((X Y
,((Y Z
	TaxNumber)) 
=)) 
table))  %
.))% &
Column))& ,
<)), -
string))- 3
>))3 4
())4 5
type))5 9
:))9 :
$str)); J
,))J K
nullable))L T
:))T U
true))V Z
)))Z [
,))[ \

UpdateTime** 
=**  
table**! &
.**& '
Column**' -
<**- .
DateTime**. 6
>**6 7
(**7 8
type**8 <
:**< =
$str**> I
,**I J
nullable**K S
:**S T
true**U Y
)**Y Z
,**Z [

CreateTime++ 
=++  
table++! &
.++& '
Column++' -
<++- .
DateTime++. 6
>++6 7
(++7 8
type++8 <
:++< =
$str++> I
,++I J
nullable++K S
:++S T
true++U Y
)++Y Z
,++Z [
UserName,, 
=,, 
table,, $
.,,$ %
Column,,% +
<,,+ ,
string,,, 2
>,,2 3
(,,3 4
type,,4 8
:,,8 9
$str,,: I
,,,I J
	maxLength,,K T
:,,T U
$num,,V Y
,,,Y Z
nullable,,[ c
:,,c d
true,,e i
),,i j
,,,j k
NormalizedUserName-- &
=--' (
table--) .
.--. /
Column--/ 5
<--5 6
string--6 <
>--< =
(--= >
type--> B
:--B C
$str--D S
,--S T
	maxLength--U ^
:--^ _
$num--` c
,--c d
nullable--e m
:--m n
true--o s
)--s t
,--t u
Email.. 
=.. 
table.. !
...! "
Column.." (
<..( )
string..) /
>../ 0
(..0 1
type..1 5
:..5 6
$str..7 F
,..F G
	maxLength..H Q
:..Q R
$num..S V
,..V W
nullable..X `
:..` a
true..b f
)..f g
,..g h
NormalizedEmail// #
=//$ %
table//& +
.//+ ,
Column//, 2
<//2 3
string//3 9
>//9 :
(//: ;
type//; ?
://? @
$str//A P
,//P Q
	maxLength//R [
://[ \
$num//] `
,//` a
nullable//b j
://j k
true//l p
)//p q
,//q r
EmailConfirmed00 "
=00# $
table00% *
.00* +
Column00+ 1
<001 2
bool002 6
>006 7
(007 8
type008 <
:00< =
$str00> C
,00C D
nullable00E M
:00M N
false00O T
)00T U
,00U V
PasswordHash11  
=11! "
table11# (
.11( )
Column11) /
<11/ 0
string110 6
>116 7
(117 8
type118 <
:11< =
$str11> M
,11M N
nullable11O W
:11W X
true11Y ]
)11] ^
,11^ _
SecurityStamp22 !
=22" #
table22$ )
.22) *
Column22* 0
<220 1
string221 7
>227 8
(228 9
type229 =
:22= >
$str22? N
,22N O
nullable22P X
:22X Y
true22Z ^
)22^ _
,22_ `
ConcurrencyStamp33 $
=33% &
table33' ,
.33, -
Column33- 3
<333 4
string334 :
>33: ;
(33; <
type33< @
:33@ A
$str33B Q
,33Q R
nullable33S [
:33[ \
true33] a
)33a b
,33b c
PhoneNumber44 
=44  !
table44" '
.44' (
Column44( .
<44. /
string44/ 5
>445 6
(446 7
type447 ;
:44; <
$str44= L
,44L M
nullable44N V
:44V W
true44X \
)44\ ]
,44] ^ 
PhoneNumberConfirmed55 (
=55) *
table55+ 0
.550 1
Column551 7
<557 8
bool558 <
>55< =
(55= >
type55> B
:55B C
$str55D I
,55I J
nullable55K S
:55S T
false55U Z
)55Z [
,55[ \
TwoFactorEnabled66 $
=66% &
table66' ,
.66, -
Column66- 3
<663 4
bool664 8
>668 9
(669 :
type66: >
:66> ?
$str66@ E
,66E F
nullable66G O
:66O P
false66Q V
)66V W
,66W X

LockoutEnd77 
=77  
table77! &
.77& '
Column77' -
<77- .
DateTimeOffset77. <
>77< =
(77= >
type77> B
:77B C
$str77D T
,77T U
nullable77V ^
:77^ _
true77` d
)77d e
,77e f
LockoutEnabled88 "
=88# $
table88% *
.88* +
Column88+ 1
<881 2
bool882 6
>886 7
(887 8
type888 <
:88< =
$str88> C
,88C D
nullable88E M
:88M N
false88O T
)88T U
,88U V
AccessFailedCount99 %
=99& '
table99( -
.99- .
Column99. 4
<994 5
int995 8
>998 9
(999 :
type99: >
:99> ?
$str99@ E
,99E F
nullable99G O
:99O P
false99Q V
)99V W
}:: 
,:: 
constraints;; 
:;; 
table;; "
=>;;# %
{<< 
table== 
.== 

PrimaryKey== $
(==$ %
$str==% 5
,==5 6
x==7 8
=>==9 ;
x==< =
.=== >
Id==> @
)==@ A
;==A B
}>> 
)>> 
;>> 
migrationBuilder@@ 
.@@ 
CreateTable@@ (
(@@( )
nameAA 
:AA 
$strAA "
,AA" #
columnsBB 
:BB 
tableBB 
=>BB !
newBB" %
{CC 
IdDD 
=DD 
tableDD 
.DD 
ColumnDD %
<DD% &
GuidDD& *
>DD* +
(DD+ ,
typeDD, 0
:DD0 1
$strDD2 D
,DDD E
nullableDDF N
:DDN O
falseDDP U
)DDU V
,DDV W
NameEE 
=EE 
tableEE  
.EE  !
ColumnEE! '
<EE' (
stringEE( .
>EE. /
(EE/ 0
typeEE0 4
:EE4 5
$strEE6 E
,EEE F
nullableEEG O
:EEO P
falseEEQ V
)EEV W
,EEW X
DescriptionFF 
=FF  !
tableFF" '
.FF' (
ColumnFF( .
<FF. /
stringFF/ 5
>FF5 6
(FF6 7
typeFF7 ;
:FF; <
$strFF= L
,FFL M
nullableFFN V
:FFV W
trueFFX \
)FF\ ]
,FF] ^
ParentIdGG 
=GG 
tableGG $
.GG$ %
ColumnGG% +
<GG+ ,
GuidGG, 0
>GG0 1
(GG1 2
typeGG2 6
:GG6 7
$strGG8 J
,GGJ K
nullableGGL T
:GGT U
trueGGV Z
)GGZ [
,GG[ \
	CreatedByHH 
=HH 
tableHH  %
.HH% &
ColumnHH& ,
<HH, -
stringHH- 3
>HH3 4
(HH4 5
typeHH5 9
:HH9 :
$strHH; J
,HHJ K
nullableHHL T
:HHT U
trueHHV Z
)HHZ [
,HH[ \
CreatedTimeII 
=II  !
tableII" '
.II' (
ColumnII( .
<II. /
DateTimeII/ 7
>II7 8
(II8 9
typeII9 =
:II= >
$strII? J
,IIJ K
nullableIIL T
:IIT U
trueIIV Z
)IIZ [
,II[ \
	UpdatedByJJ 
=JJ 
tableJJ  %
.JJ% &
ColumnJJ& ,
<JJ, -
stringJJ- 3
>JJ3 4
(JJ4 5
typeJJ5 9
:JJ9 :
$strJJ; J
,JJJ K
nullableJJL T
:JJT U
trueJJV Z
)JJZ [
,JJ[ \
UpdatedTimeKK 
=KK  !
tableKK" '
.KK' (
ColumnKK( .
<KK. /
DateTimeKK/ 7
>KK7 8
(KK8 9
typeKK9 =
:KK= >
$strKK? J
,KKJ K
nullableKKL T
:KKT U
trueKKV Z
)KKZ [
,KK[ \
StatusLL 
=LL 
tableLL "
.LL" #
ColumnLL# )
<LL) *
intLL* -
>LL- .
(LL. /
typeLL/ 3
:LL3 4
$strLL5 :
,LL: ;
nullableLL< D
:LLD E
falseLLF K
)LLK L
}MM 
,MM 
constraintsNN 
:NN 
tableNN "
=>NN# %
{OO 
tablePP 
.PP 

PrimaryKeyPP $
(PP$ %
$strPP% 4
,PP4 5
xPP6 7
=>PP8 :
xPP; <
.PP< =
IdPP= ?
)PP? @
;PP@ A
tableQQ 
.QQ 

ForeignKeyQQ $
(QQ$ %
nameRR 
:RR 
$strRR A
,RRA B
columnSS 
:SS 
xSS  !
=>SS" $
xSS% &
.SS& '
ParentIdSS' /
,SS/ 0
principalTableTT &
:TT& '
$strTT( 4
,TT4 5
principalColumnUU '
:UU' (
$strUU) -
)UU- .
;UU. /
}VV 
)VV 
;VV 
migrationBuilderXX 
.XX 
CreateTableXX (
(XX( )
nameYY 
:YY 
$strYY &
,YY& '
columnsZZ 
:ZZ 
tableZZ 
=>ZZ !
newZZ" %
{[[ 
Id\\ 
=\\ 
table\\ 
.\\ 
Column\\ %
<\\% &
Guid\\& *
>\\* +
(\\+ ,
type\\, 0
:\\0 1
$str\\2 D
,\\D E
nullable\\F N
:\\N O
false\\P U
)\\U V
,\\V W
TemplateName]]  
=]]! "
table]]# (
.]]( )
Column]]) /
<]]/ 0
string]]0 6
>]]6 7
(]]7 8
type]]8 <
:]]< =
$str]]> M
,]]M N
nullable]]O W
:]]W X
false]]Y ^
)]]^ _
,]]_ `

SenderName^^ 
=^^  
table^^! &
.^^& '
Column^^' -
<^^- .
string^^. 4
>^^4 5
(^^5 6
type^^6 :
:^^: ;
$str^^< K
,^^K L
nullable^^M U
:^^U V
true^^W [
)^^[ \
,^^\ ]
SenderEmail__ 
=__  !
table__" '
.__' (
Column__( .
<__. /
string__/ 5
>__5 6
(__6 7
type__7 ;
:__; <
$str__= L
,__L M
nullable__N V
:__V W
true__X \
)__\ ]
,__] ^
Category`` 
=`` 
table`` $
.``$ %
Column``% +
<``+ ,
string``, 2
>``2 3
(``3 4
type``4 8
:``8 9
$str``: I
,``I J
nullable``K S
:``S T
false``U Z
)``Z [
,``[ \
SubjectLineaa 
=aa  !
tableaa" '
.aa' (
Columnaa( .
<aa. /
stringaa/ 5
>aa5 6
(aa6 7
typeaa7 ;
:aa; <
$straa= L
,aaL M
nullableaaN V
:aaV W
falseaaX ]
)aa] ^
,aa^ _
PreHeaderTextbb !
=bb" #
tablebb$ )
.bb) *
Columnbb* 0
<bb0 1
stringbb1 7
>bb7 8
(bb8 9
typebb9 =
:bb= >
$strbb? N
,bbN O
nullablebbP X
:bbX Y
truebbZ ^
)bb^ _
,bb_ `
PersonalizationTagscc '
=cc( )
tablecc* /
.cc/ 0
Columncc0 6
<cc6 7
stringcc7 =
>cc= >
(cc> ?
typecc? C
:ccC D
$strccE T
,ccT U
nullableccV ^
:cc^ _
truecc` d
)ccd e
,cce f
BodyContentdd 
=dd  !
tabledd" '
.dd' (
Columndd( .
<dd. /
stringdd/ 5
>dd5 6
(dd6 7
typedd7 ;
:dd; <
$strdd= L
,ddL M
nullableddN V
:ddV W
falseddX ]
)dd] ^
,dd^ _
FooterContentee !
=ee" #
tableee$ )
.ee) *
Columnee* 0
<ee0 1
stringee1 7
>ee7 8
(ee8 9
typeee9 =
:ee= >
$stree? N
,eeN O
nullableeeP X
:eeX Y
trueeeZ ^
)ee^ _
,ee_ `
CallToActionff  
=ff! "
tableff# (
.ff( )
Columnff) /
<ff/ 0
stringff0 6
>ff6 7
(ff7 8
typeff8 <
:ff< =
$strff> M
,ffM N
nullableffO W
:ffW X
trueffY ]
)ff] ^
,ff^ _
Languagegg 
=gg 
tablegg $
.gg$ %
Columngg% +
<gg+ ,
stringgg, 2
>gg2 3
(gg3 4
typegg4 8
:gg8 9
$strgg: I
,ggI J
nullableggK S
:ggS T
trueggU Y
)ggY Z
,ggZ [
RecipientTypehh !
=hh" #
tablehh$ )
.hh) *
Columnhh* 0
<hh0 1
stringhh1 7
>hh7 8
(hh8 9
typehh9 =
:hh= >
$strhh? N
,hhN O
nullablehhP X
:hhX Y
falsehhZ _
)hh_ `
,hh` a
	CreatedByii 
=ii 
tableii  %
.ii% &
Columnii& ,
<ii, -
stringii- 3
>ii3 4
(ii4 5
typeii5 9
:ii9 :
$strii; J
,iiJ K
nullableiiL T
:iiT U
trueiiV Z
)iiZ [
,ii[ \
CreatedTimejj 
=jj  !
tablejj" '
.jj' (
Columnjj( .
<jj. /
DateTimejj/ 7
>jj7 8
(jj8 9
typejj9 =
:jj= >
$strjj? J
,jjJ K
nullablejjL T
:jjT U
truejjV Z
)jjZ [
,jj[ \
	UpdatedBykk 
=kk 
tablekk  %
.kk% &
Columnkk& ,
<kk, -
stringkk- 3
>kk3 4
(kk4 5
typekk5 9
:kk9 :
$strkk; J
,kkJ K
nullablekkL T
:kkT U
truekkV Z
)kkZ [
,kk[ \
UpdatedTimell 
=ll  !
tablell" '
.ll' (
Columnll( .
<ll. /
DateTimell/ 7
>ll7 8
(ll8 9
typell9 =
:ll= >
$strll? J
,llJ K
nullablellL T
:llT U
truellV Z
)llZ [
,ll[ \
Statusmm 
=mm 
tablemm "
.mm" #
Columnmm# )
<mm) *
intmm* -
>mm- .
(mm. /
typemm/ 3
:mm3 4
$strmm5 :
,mm: ;
nullablemm< D
:mmD E
falsemmF K
)mmK L
}nn 
,nn 
constraintsoo 
:oo 
tableoo "
=>oo# %
{pp 
tableqq 
.qq 

PrimaryKeyqq $
(qq$ %
$strqq% 8
,qq8 9
xqq: ;
=>qq< >
xqq? @
.qq@ A
IdqqA C
)qqC D
;qqD E
}rr 
)rr 
;rr 
migrationBuildertt 
.tt 
CreateTablett (
(tt( )
nameuu 
:uu 
$struu 
,uu 
columnsvv 
:vv 
tablevv 
=>vv !
newvv" %
{ww 
Idxx 
=xx 
tablexx 
.xx 
Columnxx %
<xx% &
Guidxx& *
>xx* +
(xx+ ,
typexx, 0
:xx0 1
$strxx2 D
,xxD E
nullablexxF N
:xxN O
falsexxP U
)xxU V
,xxV W
Nameyy 
=yy 
tableyy  
.yy  !
Columnyy! '
<yy' (
stringyy( .
>yy. /
(yy/ 0
typeyy0 4
:yy4 5
$stryy6 E
,yyE F
nullableyyG O
:yyO P
falseyyQ V
)yyV W
,yyW X
	CreatedByzz 
=zz 
tablezz  %
.zz% &
Columnzz& ,
<zz, -
stringzz- 3
>zz3 4
(zz4 5
typezz5 9
:zz9 :
$strzz; J
,zzJ K
nullablezzL T
:zzT U
truezzV Z
)zzZ [
,zz[ \
CreatedTime{{ 
={{  !
table{{" '
.{{' (
Column{{( .
<{{. /
DateTime{{/ 7
>{{7 8
({{8 9
type{{9 =
:{{= >
$str{{? J
,{{J K
nullable{{L T
:{{T U
true{{V Z
){{Z [
,{{[ \
	UpdatedBy|| 
=|| 
table||  %
.||% &
Column||& ,
<||, -
string||- 3
>||3 4
(||4 5
type||5 9
:||9 :
$str||; J
,||J K
nullable||L T
:||T U
true||V Z
)||Z [
,||[ \
UpdatedTime}} 
=}}  !
table}}" '
.}}' (
Column}}( .
<}}. /
DateTime}}/ 7
>}}7 8
(}}8 9
type}}9 =
:}}= >
$str}}? J
,}}J K
nullable}}L T
:}}T U
true}}V Z
)}}Z [
,}}[ \
Status~~ 
=~~ 
table~~ "
.~~" #
Column~~# )
<~~) *
int~~* -
>~~- .
(~~. /
type~~/ 3
:~~3 4
$str~~5 :
,~~: ;
nullable~~< D
:~~D E
false~~F K
)~~K L
} 
, 
constraints
ÄÄ 
:
ÄÄ 
table
ÄÄ "
=>
ÄÄ# %
{
ÅÅ 
table
ÇÇ 
.
ÇÇ 

PrimaryKey
ÇÇ $
(
ÇÇ$ %
$str
ÇÇ% 0
,
ÇÇ0 1
x
ÇÇ2 3
=>
ÇÇ4 6
x
ÇÇ7 8
.
ÇÇ8 9
Id
ÇÇ9 ;
)
ÇÇ; <
;
ÇÇ< =
}
ÉÉ 
)
ÉÉ 
;
ÉÉ 
migrationBuilder
ÖÖ 
.
ÖÖ 
CreateTable
ÖÖ (
(
ÖÖ( )
name
ÜÜ 
:
ÜÜ 
$str
ÜÜ (
,
ÜÜ( )
columns
áá 
:
áá 
table
áá 
=>
áá !
new
áá" %
{
àà 
Id
ââ 
=
ââ 
table
ââ 
.
ââ 
Column
ââ %
<
ââ% &
int
ââ& )
>
ââ) *
(
ââ* +
type
ââ+ /
:
ââ/ 0
$str
ââ1 6
,
ââ6 7
nullable
ââ8 @
:
ââ@ A
false
ââB G
)
ââG H
.
ää 

Annotation
ää #
(
ää# $
$str
ää$ 8
,
ää8 9
$str
ää: @
)
ää@ A
,
ääA B
RoleId
ãã 
=
ãã 
table
ãã "
.
ãã" #
Column
ãã# )
<
ãã) *
string
ãã* 0
>
ãã0 1
(
ãã1 2
type
ãã2 6
:
ãã6 7
$str
ãã8 G
,
ããG H
nullable
ããI Q
:
ããQ R
false
ããS X
)
ããX Y
,
ããY Z
	ClaimType
åå 
=
åå 
table
åå  %
.
åå% &
Column
åå& ,
<
åå, -
string
åå- 3
>
åå3 4
(
åå4 5
type
åå5 9
:
åå9 :
$str
åå; J
,
ååJ K
nullable
ååL T
:
ååT U
true
ååV Z
)
ååZ [
,
åå[ \

ClaimValue
çç 
=
çç  
table
çç! &
.
çç& '
Column
çç' -
<
çç- .
string
çç. 4
>
çç4 5
(
çç5 6
type
çç6 :
:
çç: ;
$str
çç< K
,
ççK L
nullable
ççM U
:
ççU V
true
ççW [
)
çç[ \
}
éé 
,
éé 
constraints
èè 
:
èè 
table
èè "
=>
èè# %
{
êê 
table
ëë 
.
ëë 

PrimaryKey
ëë $
(
ëë$ %
$str
ëë% :
,
ëë: ;
x
ëë< =
=>
ëë> @
x
ëëA B
.
ëëB C
Id
ëëC E
)
ëëE F
;
ëëF G
table
íí 
.
íí 

ForeignKey
íí $
(
íí$ %
name
ìì 
:
ìì 
$str
ìì F
,
ììF G
column
îî 
:
îî 
x
îî  !
=>
îî" $
x
îî% &
.
îî& '
RoleId
îî' -
,
îî- .
principalTable
ïï &
:
ïï& '
$str
ïï( 5
,
ïï5 6
principalColumn
ññ '
:
ññ' (
$str
ññ) -
,
ññ- .
onDelete
óó  
:
óó  !
ReferentialAction
óó" 3
.
óó3 4
Cascade
óó4 ;
)
óó; <
;
óó< =
}
òò 
)
òò 
;
òò 
migrationBuilder
öö 
.
öö 
CreateTable
öö (
(
öö( )
name
õõ 
:
õõ 
$str
õõ (
,
õõ( )
columns
úú 
:
úú 
table
úú 
=>
úú !
new
úú" %
{
ùù 
Id
ûû 
=
ûû 
table
ûû 
.
ûû 
Column
ûû %
<
ûû% &
int
ûû& )
>
ûû) *
(
ûû* +
type
ûû+ /
:
ûû/ 0
$str
ûû1 6
,
ûû6 7
nullable
ûû8 @
:
ûû@ A
false
ûûB G
)
ûûG H
.
üü 

Annotation
üü #
(
üü# $
$str
üü$ 8
,
üü8 9
$str
üü: @
)
üü@ A
,
üüA B
UserId
†† 
=
†† 
table
†† "
.
††" #
Column
††# )
<
††) *
string
††* 0
>
††0 1
(
††1 2
type
††2 6
:
††6 7
$str
††8 G
,
††G H
nullable
††I Q
:
††Q R
false
††S X
)
††X Y
,
††Y Z
	ClaimType
°° 
=
°° 
table
°°  %
.
°°% &
Column
°°& ,
<
°°, -
string
°°- 3
>
°°3 4
(
°°4 5
type
°°5 9
:
°°9 :
$str
°°; J
,
°°J K
nullable
°°L T
:
°°T U
true
°°V Z
)
°°Z [
,
°°[ \

ClaimValue
¢¢ 
=
¢¢  
table
¢¢! &
.
¢¢& '
Column
¢¢' -
<
¢¢- .
string
¢¢. 4
>
¢¢4 5
(
¢¢5 6
type
¢¢6 :
:
¢¢: ;
$str
¢¢< K
,
¢¢K L
nullable
¢¢M U
:
¢¢U V
true
¢¢W [
)
¢¢[ \
}
££ 
,
££ 
constraints
§§ 
:
§§ 
table
§§ "
=>
§§# %
{
•• 
table
¶¶ 
.
¶¶ 

PrimaryKey
¶¶ $
(
¶¶$ %
$str
¶¶% :
,
¶¶: ;
x
¶¶< =
=>
¶¶> @
x
¶¶A B
.
¶¶B C
Id
¶¶C E
)
¶¶E F
;
¶¶F G
table
ßß 
.
ßß 

ForeignKey
ßß $
(
ßß$ %
name
®® 
:
®® 
$str
®® F
,
®®F G
column
©© 
:
©© 
x
©©  !
=>
©©" $
x
©©% &
.
©©& '
UserId
©©' -
,
©©- .
principalTable
™™ &
:
™™& '
$str
™™( 5
,
™™5 6
principalColumn
´´ '
:
´´' (
$str
´´) -
,
´´- .
onDelete
¨¨  
:
¨¨  !
ReferentialAction
¨¨" 3
.
¨¨3 4
Cascade
¨¨4 ;
)
¨¨; <
;
¨¨< =
}
≠≠ 
)
≠≠ 
;
≠≠ 
migrationBuilder
ØØ 
.
ØØ 
CreateTable
ØØ (
(
ØØ( )
name
∞∞ 
:
∞∞ 
$str
∞∞ (
,
∞∞( )
columns
±± 
:
±± 
table
±± 
=>
±± !
new
±±" %
{
≤≤ 
LoginProvider
≥≥ !
=
≥≥" #
table
≥≥$ )
.
≥≥) *
Column
≥≥* 0
<
≥≥0 1
string
≥≥1 7
>
≥≥7 8
(
≥≥8 9
type
≥≥9 =
:
≥≥= >
$str
≥≥? N
,
≥≥N O
nullable
≥≥P X
:
≥≥X Y
false
≥≥Z _
)
≥≥_ `
,
≥≥` a
ProviderKey
¥¥ 
=
¥¥  !
table
¥¥" '
.
¥¥' (
Column
¥¥( .
<
¥¥. /
string
¥¥/ 5
>
¥¥5 6
(
¥¥6 7
type
¥¥7 ;
:
¥¥; <
$str
¥¥= L
,
¥¥L M
nullable
¥¥N V
:
¥¥V W
false
¥¥X ]
)
¥¥] ^
,
¥¥^ _!
ProviderDisplayName
µµ '
=
µµ( )
table
µµ* /
.
µµ/ 0
Column
µµ0 6
<
µµ6 7
string
µµ7 =
>
µµ= >
(
µµ> ?
type
µµ? C
:
µµC D
$str
µµE T
,
µµT U
nullable
µµV ^
:
µµ^ _
true
µµ` d
)
µµd e
,
µµe f
UserId
∂∂ 
=
∂∂ 
table
∂∂ "
.
∂∂" #
Column
∂∂# )
<
∂∂) *
string
∂∂* 0
>
∂∂0 1
(
∂∂1 2
type
∂∂2 6
:
∂∂6 7
$str
∂∂8 G
,
∂∂G H
nullable
∂∂I Q
:
∂∂Q R
false
∂∂S X
)
∂∂X Y
}
∑∑ 
,
∑∑ 
constraints
∏∏ 
:
∏∏ 
table
∏∏ "
=>
∏∏# %
{
ππ 
table
∫∫ 
.
∫∫ 

PrimaryKey
∫∫ $
(
∫∫$ %
$str
∫∫% :
,
∫∫: ;
x
∫∫< =
=>
∫∫> @
new
∫∫A D
{
∫∫E F
x
∫∫G H
.
∫∫H I
LoginProvider
∫∫I V
,
∫∫V W
x
∫∫X Y
.
∫∫Y Z
ProviderKey
∫∫Z e
}
∫∫f g
)
∫∫g h
;
∫∫h i
table
ªª 
.
ªª 

ForeignKey
ªª $
(
ªª$ %
name
ºº 
:
ºº 
$str
ºº F
,
ººF G
column
ΩΩ 
:
ΩΩ 
x
ΩΩ  !
=>
ΩΩ" $
x
ΩΩ% &
.
ΩΩ& '
UserId
ΩΩ' -
,
ΩΩ- .
principalTable
ææ &
:
ææ& '
$str
ææ( 5
,
ææ5 6
principalColumn
øø '
:
øø' (
$str
øø) -
,
øø- .
onDelete
¿¿  
:
¿¿  !
ReferentialAction
¿¿" 3
.
¿¿3 4
Cascade
¿¿4 ;
)
¿¿; <
;
¿¿< =
}
¡¡ 
)
¡¡ 
;
¡¡ 
migrationBuilder
√√ 
.
√√ 
CreateTable
√√ (
(
√√( )
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ '
,
ƒƒ' (
columns
≈≈ 
:
≈≈ 
table
≈≈ 
=>
≈≈ !
new
≈≈" %
{
∆∆ 
UserId
«« 
=
«« 
table
«« "
.
««" #
Column
««# )
<
««) *
string
««* 0
>
««0 1
(
««1 2
type
««2 6
:
««6 7
$str
««8 G
,
««G H
nullable
««I Q
:
««Q R
false
««S X
)
««X Y
,
««Y Z
RoleId
»» 
=
»» 
table
»» "
.
»»" #
Column
»»# )
<
»») *
string
»»* 0
>
»»0 1
(
»»1 2
type
»»2 6
:
»»6 7
$str
»»8 G
,
»»G H
nullable
»»I Q
:
»»Q R
false
»»S X
)
»»X Y
}
…… 
,
…… 
constraints
   
:
   
table
   "
=>
  # %
{
ÀÀ 
table
ÃÃ 
.
ÃÃ 

PrimaryKey
ÃÃ $
(
ÃÃ$ %
$str
ÃÃ% 9
,
ÃÃ9 :
x
ÃÃ; <
=>
ÃÃ= ?
new
ÃÃ@ C
{
ÃÃD E
x
ÃÃF G
.
ÃÃG H
UserId
ÃÃH N
,
ÃÃN O
x
ÃÃP Q
.
ÃÃQ R
RoleId
ÃÃR X
}
ÃÃY Z
)
ÃÃZ [
;
ÃÃ[ \
table
ÕÕ 
.
ÕÕ 

ForeignKey
ÕÕ $
(
ÕÕ$ %
name
ŒŒ 
:
ŒŒ 
$str
ŒŒ E
,
ŒŒE F
column
œœ 
:
œœ 
x
œœ  !
=>
œœ" $
x
œœ% &
.
œœ& '
RoleId
œœ' -
,
œœ- .
principalTable
–– &
:
––& '
$str
––( 5
,
––5 6
principalColumn
—— '
:
——' (
$str
——) -
,
——- .
onDelete
““  
:
““  !
ReferentialAction
““" 3
.
““3 4
Cascade
““4 ;
)
““; <
;
““< =
table
”” 
.
”” 

ForeignKey
”” $
(
””$ %
name
‘‘ 
:
‘‘ 
$str
‘‘ E
,
‘‘E F
column
’’ 
:
’’ 
x
’’  !
=>
’’" $
x
’’% &
.
’’& '
UserId
’’' -
,
’’- .
principalTable
÷÷ &
:
÷÷& '
$str
÷÷( 5
,
÷÷5 6
principalColumn
◊◊ '
:
◊◊' (
$str
◊◊) -
,
◊◊- .
onDelete
ÿÿ  
:
ÿÿ  !
ReferentialAction
ÿÿ" 3
.
ÿÿ3 4
Cascade
ÿÿ4 ;
)
ÿÿ; <
;
ÿÿ< =
}
ŸŸ 
)
ŸŸ 
;
ŸŸ 
migrationBuilder
€€ 
.
€€ 
CreateTable
€€ (
(
€€( )
name
‹‹ 
:
‹‹ 
$str
‹‹ (
,
‹‹( )
columns
›› 
:
›› 
table
›› 
=>
›› !
new
››" %
{
ﬁﬁ 
UserId
ﬂﬂ 
=
ﬂﬂ 
table
ﬂﬂ "
.
ﬂﬂ" #
Column
ﬂﬂ# )
<
ﬂﬂ) *
string
ﬂﬂ* 0
>
ﬂﬂ0 1
(
ﬂﬂ1 2
type
ﬂﬂ2 6
:
ﬂﬂ6 7
$str
ﬂﬂ8 G
,
ﬂﬂG H
nullable
ﬂﬂI Q
:
ﬂﬂQ R
false
ﬂﬂS X
)
ﬂﬂX Y
,
ﬂﬂY Z
LoginProvider
‡‡ !
=
‡‡" #
table
‡‡$ )
.
‡‡) *
Column
‡‡* 0
<
‡‡0 1
string
‡‡1 7
>
‡‡7 8
(
‡‡8 9
type
‡‡9 =
:
‡‡= >
$str
‡‡? N
,
‡‡N O
nullable
‡‡P X
:
‡‡X Y
false
‡‡Z _
)
‡‡_ `
,
‡‡` a
Name
·· 
=
·· 
table
··  
.
··  !
Column
··! '
<
··' (
string
··( .
>
··. /
(
··/ 0
type
··0 4
:
··4 5
$str
··6 E
,
··E F
nullable
··G O
:
··O P
false
··Q V
)
··V W
,
··W X
Value
‚‚ 
=
‚‚ 
table
‚‚ !
.
‚‚! "
Column
‚‚" (
<
‚‚( )
string
‚‚) /
>
‚‚/ 0
(
‚‚0 1
type
‚‚1 5
:
‚‚5 6
$str
‚‚7 F
,
‚‚F G
nullable
‚‚H P
:
‚‚P Q
true
‚‚R V
)
‚‚V W
}
„„ 
,
„„ 
constraints
‰‰ 
:
‰‰ 
table
‰‰ "
=>
‰‰# %
{
ÂÂ 
table
ÊÊ 
.
ÊÊ 

PrimaryKey
ÊÊ $
(
ÊÊ$ %
$str
ÊÊ% :
,
ÊÊ: ;
x
ÊÊ< =
=>
ÊÊ> @
new
ÊÊA D
{
ÊÊE F
x
ÊÊG H
.
ÊÊH I
UserId
ÊÊI O
,
ÊÊO P
x
ÊÊQ R
.
ÊÊR S
LoginProvider
ÊÊS `
,
ÊÊ` a
x
ÊÊb c
.
ÊÊc d
Name
ÊÊd h
}
ÊÊi j
)
ÊÊj k
;
ÊÊk l
table
ÁÁ 
.
ÁÁ 

ForeignKey
ÁÁ $
(
ÁÁ$ %
name
ËË 
:
ËË 
$str
ËË F
,
ËËF G
column
ÈÈ 
:
ÈÈ 
x
ÈÈ  !
=>
ÈÈ" $
x
ÈÈ% &
.
ÈÈ& '
UserId
ÈÈ' -
,
ÈÈ- .
principalTable
ÍÍ &
:
ÍÍ& '
$str
ÍÍ( 5
,
ÍÍ5 6
principalColumn
ÎÎ '
:
ÎÎ' (
$str
ÎÎ) -
,
ÎÎ- .
onDelete
ÏÏ  
:
ÏÏ  !
ReferentialAction
ÏÏ" 3
.
ÏÏ3 4
Cascade
ÏÏ4 ;
)
ÏÏ; <
;
ÏÏ< =
}
ÌÌ 
)
ÌÌ 
;
ÌÌ 
migrationBuilder
ÔÔ 
.
ÔÔ 
CreateTable
ÔÔ (
(
ÔÔ( )
name
 
:
 
$str
  
,
  !
columns
ÒÒ 
:
ÒÒ 
table
ÒÒ 
=>
ÒÒ !
new
ÒÒ" %
{
ÚÚ 
UserId
ÛÛ 
=
ÛÛ 
table
ÛÛ "
.
ÛÛ" #
Column
ÛÛ# )
<
ÛÛ) *
string
ÛÛ* 0
>
ÛÛ0 1
(
ÛÛ1 2
type
ÛÛ2 6
:
ÛÛ6 7
$str
ÛÛ8 G
,
ÛÛG H
nullable
ÛÛI Q
:
ÛÛQ R
false
ÛÛS X
)
ÛÛX Y
,
ÛÛY Z
AvailableBalance
ÙÙ $
=
ÙÙ% &
table
ÙÙ' ,
.
ÙÙ, -
Column
ÙÙ- 3
<
ÙÙ3 4
double
ÙÙ4 :
>
ÙÙ: ;
(
ÙÙ; <
type
ÙÙ< @
:
ÙÙ@ A
$str
ÙÙB I
,
ÙÙI J
nullable
ÙÙK S
:
ÙÙS T
false
ÙÙU Z
)
ÙÙZ [
,
ÙÙ[ \
PendingBalance
ıı "
=
ıı# $
table
ıı% *
.
ıı* +
Column
ıı+ 1
<
ıı1 2
double
ıı2 8
>
ıı8 9
(
ıı9 :
type
ıı: >
:
ıı> ?
$str
ıı@ G
,
ııG H
nullable
ııI Q
:
ııQ R
false
ııS X
)
ııX Y
,
ııY Z
Currency
ˆˆ 
=
ˆˆ 
table
ˆˆ $
.
ˆˆ$ %
Column
ˆˆ% +
<
ˆˆ+ ,
string
ˆˆ, 2
>
ˆˆ2 3
(
ˆˆ3 4
type
ˆˆ4 8
:
ˆˆ8 9
$str
ˆˆ: I
,
ˆˆI J
nullable
ˆˆK S
:
ˆˆS T
false
ˆˆU Z
)
ˆˆZ [
,
ˆˆ[ \
UpdatedTime
˜˜ 
=
˜˜  !
table
˜˜" '
.
˜˜' (
Column
˜˜( .
<
˜˜. /
DateTime
˜˜/ 7
>
˜˜7 8
(
˜˜8 9
type
˜˜9 =
:
˜˜= >
$str
˜˜? J
,
˜˜J K
nullable
˜˜L T
:
˜˜T U
false
˜˜V [
)
˜˜[ \
}
¯¯ 
,
¯¯ 
constraints
˘˘ 
:
˘˘ 
table
˘˘ "
=>
˘˘# %
{
˙˙ 
table
˚˚ 
.
˚˚ 

PrimaryKey
˚˚ $
(
˚˚$ %
$str
˚˚% 2
,
˚˚2 3
x
˚˚4 5
=>
˚˚6 8
x
˚˚9 :
.
˚˚: ;
UserId
˚˚; A
)
˚˚A B
;
˚˚B C
table
¸¸ 
.
¸¸ 

ForeignKey
¸¸ $
(
¸¸$ %
name
˝˝ 
:
˝˝ 
$str
˝˝ >
,
˝˝> ?
column
˛˛ 
:
˛˛ 
x
˛˛  !
=>
˛˛" $
x
˛˛% &
.
˛˛& '
UserId
˛˛' -
,
˛˛- .
principalTable
ˇˇ &
:
ˇˇ& '
$str
ˇˇ( 5
,
ˇˇ5 6
principalColumn
ÄÄ '
:
ÄÄ' (
$str
ÄÄ) -
,
ÄÄ- .
onDelete
ÅÅ  
:
ÅÅ  !
ReferentialAction
ÅÅ" 3
.
ÅÅ3 4
Cascade
ÅÅ4 ;
)
ÅÅ; <
;
ÅÅ< =
}
ÇÇ 
)
ÇÇ 
;
ÇÇ 
migrationBuilder
ÑÑ 
.
ÑÑ 
CreateTable
ÑÑ (
(
ÑÑ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ #
,
ÖÖ# $
columns
ÜÜ 
:
ÜÜ 
table
ÜÜ 
=>
ÜÜ !
new
ÜÜ" %
{
áá 
InstructorId
àà  
=
àà! "
table
àà# (
.
àà( )
Column
àà) /
<
àà/ 0
Guid
àà0 4
>
àà4 5
(
àà5 6
type
àà6 :
:
àà: ;
$str
àà< N
,
ààN O
nullable
ààP X
:
ààX Y
false
ààZ _
)
àà_ `
,
àà` a
UserId
ââ 
=
ââ 
table
ââ "
.
ââ" #
Column
ââ# )
<
ââ) *
string
ââ* 0
>
ââ0 1
(
ââ1 2
type
ââ2 6
:
ââ6 7
$str
ââ8 G
,
ââG H
nullable
ââI Q
:
ââQ R
false
ââS X
)
ââX Y
,
ââY Z
Degree
ää 
=
ää 
table
ää "
.
ää" #
Column
ää# )
<
ää) *
string
ää* 0
>
ää0 1
(
ää1 2
type
ää2 6
:
ää6 7
$str
ää8 G
,
ääG H
nullable
ääI Q
:
ääQ R
false
ääS X
)
ääX Y
,
ääY Z
DegreeImageUrl
ãã "
=
ãã# $
table
ãã% *
.
ãã* +
Column
ãã+ 1
<
ãã1 2
string
ãã2 8
>
ãã8 9
(
ãã9 :
type
ãã: >
:
ãã> ?
$str
ãã@ O
,
ããO P
nullable
ããQ Y
:
ããY Z
true
ãã[ _
)
ãã_ `
,
ãã` a
Industry
åå 
=
åå 
table
åå $
.
åå$ %
Column
åå% +
<
åå+ ,
string
åå, 2
>
åå2 3
(
åå3 4
type
åå4 8
:
åå8 9
$str
åå: I
,
ååI J
nullable
ååK S
:
ååS T
false
ååU Z
)
ååZ [
,
åå[ \
Introduction
çç  
=
çç! "
table
çç# (
.
çç( )
Column
çç) /
<
çç/ 0
string
çç0 6
>
çç6 7
(
çç7 8
type
çç8 <
:
çç< =
$str
çç> M
,
ççM N
nullable
ççO W
:
ççW X
false
ççY ^
)
çç^ _
,
çç_ `

IsAccepted
éé 
=
éé  
table
éé! &
.
éé& '
Column
éé' -
<
éé- .
bool
éé. 2
>
éé2 3
(
éé3 4
type
éé4 8
:
éé8 9
$str
éé: ?
,
éé? @
nullable
ééA I
:
ééI J
true
ééK O
)
ééO P
,
ééP Q
AcceptedTime
èè  
=
èè! "
table
èè# (
.
èè( )
Column
èè) /
<
èè/ 0
DateTime
èè0 8
>
èè8 9
(
èè9 :
type
èè: >
:
èè> ?
$str
èè@ K
,
èèK L
nullable
èèM U
:
èèU V
true
èèW [
)
èè[ \
,
èè\ ]

AcceptedBy
êê 
=
êê  
table
êê! &
.
êê& '
Column
êê' -
<
êê- .
string
êê. 4
>
êê4 5
(
êê5 6
type
êê6 :
:
êê: ;
$str
êê< K
,
êêK L
nullable
êêM U
:
êêU V
true
êêW [
)
êê[ \
,
êê\ ]
RejectedTime
ëë  
=
ëë! "
table
ëë# (
.
ëë( )
Column
ëë) /
<
ëë/ 0
DateTime
ëë0 8
>
ëë8 9
(
ëë9 :
type
ëë: >
:
ëë> ?
$str
ëë@ K
,
ëëK L
nullable
ëëM U
:
ëëU V
true
ëëW [
)
ëë[ \
,
ëë\ ]

RejectedBy
íí 
=
íí  
table
íí! &
.
íí& '
Column
íí' -
<
íí- .
string
íí. 4
>
íí4 5
(
íí5 6
type
íí6 :
:
íí: ;
$str
íí< K
,
ííK L
nullable
ííM U
:
ííU V
true
ííW [
)
íí[ \
}
ìì 
,
ìì 
constraints
îî 
:
îî 
table
îî "
=>
îî# %
{
ïï 
table
ññ 
.
ññ 

PrimaryKey
ññ $
(
ññ$ %
$str
ññ% 5
,
ññ5 6
x
ññ7 8
=>
ññ9 ;
x
ññ< =
.
ññ= >
InstructorId
ññ> J
)
ññJ K
;
ññK L
table
óó 
.
óó 

ForeignKey
óó $
(
óó$ %
name
òò 
:
òò 
$str
òò A
,
òòA B
column
ôô 
:
ôô 
x
ôô  !
=>
ôô" $
x
ôô% &
.
ôô& '
UserId
ôô' -
,
ôô- .
principalTable
öö &
:
öö& '
$str
öö( 5
,
öö5 6
principalColumn
õõ '
:
õõ' (
$str
õõ) -
,
õõ- .
onDelete
úú  
:
úú  !
ReferentialAction
úú" 3
.
úú3 4
Cascade
úú4 ;
)
úú; <
;
úú< =
}
ùù 
)
ùù 
;
ùù 
migrationBuilder
üü 
.
üü 
CreateTable
üü (
(
üü( )
name
†† 
:
†† 
$str
†† $
,
††$ %
columns
°° 
:
°° 
table
°° 
=>
°° !
new
°°" %
{
¢¢ 

CardNumber
££ 
=
££  
table
££! &
.
££& '
Column
££' -
<
££- .
string
££. 4
>
££4 5
(
££5 6
type
££6 :
:
££: ;
$str
££< K
,
££K L
nullable
££M U
:
££U V
false
££W \
)
££\ ]
,
££] ^
CardName
§§ 
=
§§ 
table
§§ $
.
§§$ %
Column
§§% +
<
§§+ ,
string
§§, 2
>
§§2 3
(
§§3 4
type
§§4 8
:
§§8 9
$str
§§: I
,
§§I J
nullable
§§K S
:
§§S T
false
§§U Z
)
§§Z [
,
§§[ \
CardProvider
••  
=
••! "
table
••# (
.
••( )
Column
••) /
<
••/ 0
string
••0 6
>
••6 7
(
••7 8
type
••8 <
:
••< =
$str
••> M
,
••M N
nullable
••O W
:
••W X
false
••Y ^
)
••^ _
,
••_ `
UserId
¶¶ 
=
¶¶ 
table
¶¶ "
.
¶¶" #
Column
¶¶# )
<
¶¶) *
string
¶¶* 0
>
¶¶0 1
(
¶¶1 2
type
¶¶2 6
:
¶¶6 7
$str
¶¶8 G
,
¶¶G H
nullable
¶¶I Q
:
¶¶Q R
false
¶¶S X
)
¶¶X Y
}
ßß 
,
ßß 
constraints
®® 
:
®® 
table
®® "
=>
®®# %
{
©© 
table
™™ 
.
™™ 

PrimaryKey
™™ $
(
™™$ %
$str
™™% 6
,
™™6 7
x
™™8 9
=>
™™: <
x
™™= >
.
™™> ?

CardNumber
™™? I
)
™™I J
;
™™J K
table
´´ 
.
´´ 

ForeignKey
´´ $
(
´´$ %
name
¨¨ 
:
¨¨ 
$str
¨¨ B
,
¨¨B C
column
≠≠ 
:
≠≠ 
x
≠≠  !
=>
≠≠" $
x
≠≠% &
.
≠≠& '
UserId
≠≠' -
,
≠≠- .
principalTable
ÆÆ &
:
ÆÆ& '
$str
ÆÆ( 5
,
ÆÆ5 6
principalColumn
ØØ '
:
ØØ' (
$str
ØØ) -
,
ØØ- .
onDelete
∞∞  
:
∞∞  !
ReferentialAction
∞∞" 3
.
∞∞3 4
Cascade
∞∞4 ;
)
∞∞; <
;
∞∞< =
}
±± 
)
±± 
;
±± 
migrationBuilder
≥≥ 
.
≥≥ 
CreateTable
≥≥ (
(
≥≥( )
name
¥¥ 
:
¥¥ 
$str
¥¥  
,
¥¥  !
columns
µµ 
:
µµ 
table
µµ 
=>
µµ !
new
µµ" %
{
∂∂ 
	StudentId
∑∑ 
=
∑∑ 
table
∑∑  %
.
∑∑% &
Column
∑∑& ,
<
∑∑, -
Guid
∑∑- 1
>
∑∑1 2
(
∑∑2 3
type
∑∑3 7
:
∑∑7 8
$str
∑∑9 K
,
∑∑K L
nullable
∑∑M U
:
∑∑U V
false
∑∑W \
)
∑∑\ ]
,
∑∑] ^
UserId
∏∏ 
=
∏∏ 
table
∏∏ "
.
∏∏" #
Column
∏∏# )
<
∏∏) *
string
∏∏* 0
>
∏∏0 1
(
∏∏1 2
type
∏∏2 6
:
∏∏6 7
$str
∏∏8 G
,
∏∏G H
nullable
∏∏I Q
:
∏∏Q R
false
∏∏S X
)
∏∏X Y
,
∏∏Y Z

University
ππ 
=
ππ  
table
ππ! &
.
ππ& '
Column
ππ' -
<
ππ- .
string
ππ. 4
>
ππ4 5
(
ππ5 6
type
ππ6 :
:
ππ: ;
$str
ππ< K
,
ππK L
nullable
ππM U
:
ππU V
false
ππW \
)
ππ\ ]
}
∫∫ 
,
∫∫ 
constraints
ªª 
:
ªª 
table
ªª "
=>
ªª# %
{
ºº 
table
ΩΩ 
.
ΩΩ 

PrimaryKey
ΩΩ $
(
ΩΩ$ %
$str
ΩΩ% 2
,
ΩΩ2 3
x
ΩΩ4 5
=>
ΩΩ6 8
x
ΩΩ9 :
.
ΩΩ: ;
	StudentId
ΩΩ; D
)
ΩΩD E
;
ΩΩE F
table
ææ 
.
ææ 

ForeignKey
ææ $
(
ææ$ %
name
øø 
:
øø 
$str
øø >
,
øø> ?
column
¿¿ 
:
¿¿ 
x
¿¿  !
=>
¿¿" $
x
¿¿% &
.
¿¿& '
UserId
¿¿' -
,
¿¿- .
principalTable
¡¡ &
:
¡¡& '
$str
¡¡( 5
,
¡¡5 6
principalColumn
¬¬ '
:
¬¬' (
$str
¬¬) -
,
¬¬- .
onDelete
√√  
:
√√  !
ReferentialAction
√√" 3
.
√√3 4
Cascade
√√4 ;
)
√√; <
;
√√< =
}
ƒƒ 
)
ƒƒ 
;
ƒƒ 
migrationBuilder
∆∆ 
.
∆∆ 
CreateTable
∆∆ (
(
∆∆( )
name
«« 
:
«« 
$str
«« $
,
««$ %
columns
»» 
:
»» 
table
»» 
=>
»» !
new
»»" %
{
…… 
Id
   
=
   
table
   
.
   
Column
   %
<
  % &
Guid
  & *
>
  * +
(
  + ,
type
  , 0
:
  0 1
$str
  2 D
,
  D E
nullable
  F N
:
  N O
false
  P U
)
  U V
,
  V W
UserId
ÀÀ 
=
ÀÀ 
table
ÀÀ "
.
ÀÀ" #
Column
ÀÀ# )
<
ÀÀ) *
string
ÀÀ* 0
>
ÀÀ0 1
(
ÀÀ1 2
type
ÀÀ2 6
:
ÀÀ6 7
$str
ÀÀ8 G
,
ÀÀG H
nullable
ÀÀI Q
:
ÀÀQ R
false
ÀÀS X
)
ÀÀX Y
,
ÀÀY Z
Type
ÃÃ 
=
ÃÃ 
table
ÃÃ  
.
ÃÃ  !
Column
ÃÃ! '
<
ÃÃ' (
int
ÃÃ( +
>
ÃÃ+ ,
(
ÃÃ, -
type
ÃÃ- 1
:
ÃÃ1 2
$str
ÃÃ3 8
,
ÃÃ8 9
nullable
ÃÃ: B
:
ÃÃB C
false
ÃÃD I
)
ÃÃI J
,
ÃÃJ K
Amount
ÕÕ 
=
ÕÕ 
table
ÕÕ "
.
ÕÕ" #
Column
ÕÕ# )
<
ÕÕ) *
double
ÕÕ* 0
>
ÕÕ0 1
(
ÕÕ1 2
type
ÕÕ2 6
:
ÕÕ6 7
$str
ÕÕ8 ?
,
ÕÕ? @
nullable
ÕÕA I
:
ÕÕI J
false
ÕÕK P
)
ÕÕP Q
,
ÕÕQ R
Currency
ŒŒ 
=
ŒŒ 
table
ŒŒ $
.
ŒŒ$ %
Column
ŒŒ% +
<
ŒŒ+ ,
string
ŒŒ, 2
>
ŒŒ2 3
(
ŒŒ3 4
type
ŒŒ4 8
:
ŒŒ8 9
$str
ŒŒ: I
,
ŒŒI J
nullable
ŒŒK S
:
ŒŒS T
false
ŒŒU Z
)
ŒŒZ [
,
ŒŒ[ \
CreatedTime
œœ 
=
œœ  !
table
œœ" '
.
œœ' (
Column
œœ( .
<
œœ. /
DateTime
œœ/ 7
>
œœ7 8
(
œœ8 9
type
œœ9 =
:
œœ= >
$str
œœ? J
,
œœJ K
nullable
œœL T
:
œœT U
false
œœV [
)
œœ[ \
}
–– 
,
–– 
constraints
—— 
:
—— 
table
—— "
=>
——# %
{
““ 
table
”” 
.
”” 

PrimaryKey
”” $
(
””$ %
$str
””% 6
,
””6 7
x
””8 9
=>
””: <
x
””= >
.
””> ?
Id
””? A
)
””A B
;
””B C
table
‘‘ 
.
‘‘ 

ForeignKey
‘‘ $
(
‘‘$ %
name
’’ 
:
’’ 
$str
’’ B
,
’’B C
column
÷÷ 
:
÷÷ 
x
÷÷  !
=>
÷÷" $
x
÷÷% &
.
÷÷& '
UserId
÷÷' -
,
÷÷- .
principalTable
◊◊ &
:
◊◊& '
$str
◊◊( 5
,
◊◊5 6
principalColumn
ÿÿ '
:
ÿÿ' (
$str
ÿÿ) -
,
ÿÿ- .
onDelete
ŸŸ  
:
ŸŸ  !
ReferentialAction
ŸŸ" 3
.
ŸŸ3 4
Cascade
ŸŸ4 ;
)
ŸŸ; <
;
ŸŸ< =
}
⁄⁄ 
)
⁄⁄ 
;
⁄⁄ 
migrationBuilder
‹‹ 
.
‹‹ 
CreateTable
‹‹ (
(
‹‹( )
name
›› 
:
›› 
$str
›› 
,
››  
columns
ﬁﬁ 
:
ﬁﬁ 
table
ﬁﬁ 
=>
ﬁﬁ !
new
ﬁﬁ" %
{
ﬂﬂ 
Id
‡‡ 
=
‡‡ 
table
‡‡ 
.
‡‡ 
Column
‡‡ %
<
‡‡% &
Guid
‡‡& *
>
‡‡* +
(
‡‡+ ,
type
‡‡, 0
:
‡‡0 1
$str
‡‡2 D
,
‡‡D E
nullable
‡‡F N
:
‡‡N O
false
‡‡P U
)
‡‡U V
,
‡‡V W
InstructorId
··  
=
··! "
table
··# (
.
··( )
Column
··) /
<
··/ 0
Guid
··0 4
>
··4 5
(
··5 6
type
··6 :
:
··: ;
$str
··< N
,
··N O
nullable
··P X
:
··X Y
true
··Z ^
)
··^ _
,
··_ `
Code
‚‚ 
=
‚‚ 
table
‚‚  
.
‚‚  !
Column
‚‚! '
<
‚‚' (
string
‚‚( .
>
‚‚. /
(
‚‚/ 0
type
‚‚0 4
:
‚‚4 5
$str
‚‚6 E
,
‚‚E F
nullable
‚‚G O
:
‚‚O P
true
‚‚Q U
)
‚‚U V
,
‚‚V W
StudentSlots
„„  
=
„„! "
table
„„# (
.
„„( )
Column
„„) /
<
„„/ 0
int
„„0 3
>
„„3 4
(
„„4 5
type
„„5 9
:
„„9 :
$str
„„; @
,
„„@ A
nullable
„„B J
:
„„J K
true
„„L P
)
„„P Q
,
„„Q R
	TotalRate
‰‰ 
=
‰‰ 
table
‰‰  %
.
‰‰% &
Column
‰‰& ,
<
‰‰, -
float
‰‰- 2
>
‰‰2 3
(
‰‰3 4
type
‰‰4 8
:
‰‰8 9
$str
‰‰: @
,
‰‰@ A
nullable
‰‰B J
:
‰‰J K
true
‰‰L P
)
‰‰P Q
,
‰‰Q R
Version
ÂÂ 
=
ÂÂ 
table
ÂÂ #
.
ÂÂ# $
Column
ÂÂ$ *
<
ÂÂ* +
int
ÂÂ+ .
>
ÂÂ. /
(
ÂÂ/ 0
type
ÂÂ0 4
:
ÂÂ4 5
$str
ÂÂ6 ;
,
ÂÂ; <
nullable
ÂÂ= E
:
ÂÂE F
true
ÂÂG K
)
ÂÂK L
,
ÂÂL M
CourseVersionId
ÊÊ #
=
ÊÊ$ %
table
ÊÊ& +
.
ÊÊ+ ,
Column
ÊÊ, 2
<
ÊÊ2 3
Guid
ÊÊ3 7
>
ÊÊ7 8
(
ÊÊ8 9
type
ÊÊ9 =
:
ÊÊ= >
$str
ÊÊ? Q
,
ÊÊQ R
nullable
ÊÊS [
:
ÊÊ[ \
true
ÊÊ] a
)
ÊÊa b
,
ÊÊb c
DeactivatedBy
ÁÁ !
=
ÁÁ" #
table
ÁÁ$ )
.
ÁÁ) *
Column
ÁÁ* 0
<
ÁÁ0 1
string
ÁÁ1 7
>
ÁÁ7 8
(
ÁÁ8 9
type
ÁÁ9 =
:
ÁÁ= >
$str
ÁÁ? N
,
ÁÁN O
nullable
ÁÁP X
:
ÁÁX Y
true
ÁÁZ ^
)
ÁÁ^ _
,
ÁÁ_ `
DeactivatedTime
ËË #
=
ËË$ %
table
ËË& +
.
ËË+ ,
Column
ËË, 2
<
ËË2 3
DateTime
ËË3 ;
>
ËË; <
(
ËË< =
type
ËË= A
:
ËËA B
$str
ËËC N
,
ËËN O
nullable
ËËP X
:
ËËX Y
true
ËËZ ^
)
ËË^ _
,
ËË_ `
ActivatedBy
ÈÈ 
=
ÈÈ  !
table
ÈÈ" '
.
ÈÈ' (
Column
ÈÈ( .
<
ÈÈ. /
string
ÈÈ/ 5
>
ÈÈ5 6
(
ÈÈ6 7
type
ÈÈ7 ;
:
ÈÈ; <
$str
ÈÈ= L
,
ÈÈL M
nullable
ÈÈN V
:
ÈÈV W
true
ÈÈX \
)
ÈÈ\ ]
,
ÈÈ] ^
ActivatedTime
ÍÍ !
=
ÍÍ" #
table
ÍÍ$ )
.
ÍÍ) *
Column
ÍÍ* 0
<
ÍÍ0 1
DateTime
ÍÍ1 9
>
ÍÍ9 :
(
ÍÍ: ;
type
ÍÍ; ?
:
ÍÍ? @
$str
ÍÍA L
,
ÍÍL M
nullable
ÍÍN V
:
ÍÍV W
true
ÍÍX \
)
ÍÍ\ ]
,
ÍÍ] ^
	CreatedBy
ÎÎ 
=
ÎÎ 
table
ÎÎ  %
.
ÎÎ% &
Column
ÎÎ& ,
<
ÎÎ, -
string
ÎÎ- 3
>
ÎÎ3 4
(
ÎÎ4 5
type
ÎÎ5 9
:
ÎÎ9 :
$str
ÎÎ; J
,
ÎÎJ K
nullable
ÎÎL T
:
ÎÎT U
true
ÎÎV Z
)
ÎÎZ [
,
ÎÎ[ \
CreatedTime
ÏÏ 
=
ÏÏ  !
table
ÏÏ" '
.
ÏÏ' (
Column
ÏÏ( .
<
ÏÏ. /
DateTime
ÏÏ/ 7
>
ÏÏ7 8
(
ÏÏ8 9
type
ÏÏ9 =
:
ÏÏ= >
$str
ÏÏ? J
,
ÏÏJ K
nullable
ÏÏL T
:
ÏÏT U
true
ÏÏV Z
)
ÏÏZ [
,
ÏÏ[ \
MergedBy
ÌÌ 
=
ÌÌ 
table
ÌÌ $
.
ÌÌ$ %
Column
ÌÌ% +
<
ÌÌ+ ,
string
ÌÌ, 2
>
ÌÌ2 3
(
ÌÌ3 4
type
ÌÌ4 8
:
ÌÌ8 9
$str
ÌÌ: I
,
ÌÌI J
nullable
ÌÌK S
:
ÌÌS T
true
ÌÌU Y
)
ÌÌY Z
,
ÌÌZ [

MergedTime
ÓÓ 
=
ÓÓ  
table
ÓÓ! &
.
ÓÓ& '
Column
ÓÓ' -
<
ÓÓ- .
DateTime
ÓÓ. 6
>
ÓÓ6 7
(
ÓÓ7 8
type
ÓÓ8 <
:
ÓÓ< =
$str
ÓÓ> I
,
ÓÓI J
nullable
ÓÓK S
:
ÓÓS T
true
ÓÓU Y
)
ÓÓY Z
,
ÓÓZ [
Status
ÔÔ 
=
ÔÔ 
table
ÔÔ "
.
ÔÔ" #
Column
ÔÔ# )
<
ÔÔ) *
int
ÔÔ* -
>
ÔÔ- .
(
ÔÔ. /
type
ÔÔ/ 3
:
ÔÔ3 4
$str
ÔÔ5 :
,
ÔÔ: ;
nullable
ÔÔ< D
:
ÔÔD E
false
ÔÔF K
)
ÔÔK L
}
 
,
 
constraints
ÒÒ 
:
ÒÒ 
table
ÒÒ "
=>
ÒÒ# %
{
ÚÚ 
table
ÛÛ 
.
ÛÛ 

PrimaryKey
ÛÛ $
(
ÛÛ$ %
$str
ÛÛ% 1
,
ÛÛ1 2
x
ÛÛ3 4
=>
ÛÛ5 7
x
ÛÛ8 9
.
ÛÛ9 :
Id
ÛÛ: <
)
ÛÛ< =
;
ÛÛ= >
table
ÙÙ 
.
ÙÙ 

ForeignKey
ÙÙ $
(
ÙÙ$ %
name
ıı 
:
ıı 
$str
ıı C
,
ııC D
column
ˆˆ 
:
ˆˆ 
x
ˆˆ  !
=>
ˆˆ" $
x
ˆˆ% &
.
ˆˆ& '
InstructorId
ˆˆ' 3
,
ˆˆ3 4
principalTable
˜˜ &
:
˜˜& '
$str
˜˜( 5
,
˜˜5 6
principalColumn
¯¯ '
:
¯¯' (
$str
¯¯) 7
)
¯¯7 8
;
¯¯8 9
}
˘˘ 
)
˘˘ 
;
˘˘ 
migrationBuilder
˚˚ 
.
˚˚ 
CreateTable
˚˚ (
(
˚˚( )
name
¸¸ 
:
¸¸ 
$str
¸¸ *
,
¸¸* +
columns
˝˝ 
:
˝˝ 
table
˝˝ 
=>
˝˝ !
new
˝˝" %
{
˛˛ 
Id
ˇˇ 
=
ˇˇ 
table
ˇˇ 
.
ˇˇ 
Column
ˇˇ %
<
ˇˇ% &
Guid
ˇˇ& *
>
ˇˇ* +
(
ˇˇ+ ,
type
ˇˇ, 0
:
ˇˇ0 1
$str
ˇˇ2 D
,
ˇˇD E
nullable
ˇˇF N
:
ˇˇN O
false
ˇˇP U
)
ˇˇU V
,
ˇˇV W
InstructorId
ÄÄ  
=
ÄÄ! "
table
ÄÄ# (
.
ÄÄ( )
Column
ÄÄ) /
<
ÄÄ/ 0
Guid
ÄÄ0 4
>
ÄÄ4 5
(
ÄÄ5 6
type
ÄÄ6 :
:
ÄÄ: ;
$str
ÄÄ< N
,
ÄÄN O
nullable
ÄÄP X
:
ÄÄX Y
false
ÄÄZ _
)
ÄÄ_ `
,
ÄÄ` a
Comment
ÅÅ 
=
ÅÅ 
table
ÅÅ #
.
ÅÅ# $
Column
ÅÅ$ *
<
ÅÅ* +
string
ÅÅ+ 1
>
ÅÅ1 2
(
ÅÅ2 3
type
ÅÅ3 7
:
ÅÅ7 8
$str
ÅÅ9 H
,
ÅÅH I
nullable
ÅÅJ R
:
ÅÅR S
false
ÅÅT Y
)
ÅÅY Z
,
ÅÅZ [
	CreatedBy
ÇÇ 
=
ÇÇ 
table
ÇÇ  %
.
ÇÇ% &
Column
ÇÇ& ,
<
ÇÇ, -
string
ÇÇ- 3
>
ÇÇ3 4
(
ÇÇ4 5
type
ÇÇ5 9
:
ÇÇ9 :
$str
ÇÇ; J
,
ÇÇJ K
nullable
ÇÇL T
:
ÇÇT U
true
ÇÇV Z
)
ÇÇZ [
,
ÇÇ[ \
CreatedTime
ÉÉ 
=
ÉÉ  !
table
ÉÉ" '
.
ÉÉ' (
Column
ÉÉ( .
<
ÉÉ. /
DateTime
ÉÉ/ 7
>
ÉÉ7 8
(
ÉÉ8 9
type
ÉÉ9 =
:
ÉÉ= >
$str
ÉÉ? J
,
ÉÉJ K
nullable
ÉÉL T
:
ÉÉT U
true
ÉÉV Z
)
ÉÉZ [
,
ÉÉ[ \
	UpdatedBy
ÑÑ 
=
ÑÑ 
table
ÑÑ  %
.
ÑÑ% &
Column
ÑÑ& ,
<
ÑÑ, -
string
ÑÑ- 3
>
ÑÑ3 4
(
ÑÑ4 5
type
ÑÑ5 9
:
ÑÑ9 :
$str
ÑÑ; J
,
ÑÑJ K
nullable
ÑÑL T
:
ÑÑT U
true
ÑÑV Z
)
ÑÑZ [
,
ÑÑ[ \
UpdatedTime
ÖÖ 
=
ÖÖ  !
table
ÖÖ" '
.
ÖÖ' (
Column
ÖÖ( .
<
ÖÖ. /
DateTime
ÖÖ/ 7
>
ÖÖ7 8
(
ÖÖ8 9
type
ÖÖ9 =
:
ÖÖ= >
$str
ÖÖ? J
,
ÖÖJ K
nullable
ÖÖL T
:
ÖÖT U
true
ÖÖV Z
)
ÖÖZ [
,
ÖÖ[ \
Status
ÜÜ 
=
ÜÜ 
table
ÜÜ "
.
ÜÜ" #
Column
ÜÜ# )
<
ÜÜ) *
int
ÜÜ* -
>
ÜÜ- .
(
ÜÜ. /
type
ÜÜ/ 3
:
ÜÜ3 4
$str
ÜÜ5 :
,
ÜÜ: ;
nullable
ÜÜ< D
:
ÜÜD E
false
ÜÜF K
)
ÜÜK L
}
áá 
,
áá 
constraints
àà 
:
àà 
table
àà "
=>
àà# %
{
ââ 
table
ää 
.
ää 

PrimaryKey
ää $
(
ää$ %
$str
ää% <
,
ää< =
x
ää> ?
=>
ää@ B
x
ääC D
.
ääD E
Id
ääE G
)
ääG H
;
ääH I
table
ãã 
.
ãã 

ForeignKey
ãã $
(
ãã$ %
name
åå 
:
åå 
$str
åå N
,
ååN O
column
çç 
:
çç 
x
çç  !
=>
çç" $
x
çç% &
.
çç& '
InstructorId
çç' 3
,
çç3 4
principalTable
éé &
:
éé& '
$str
éé( 5
,
éé5 6
principalColumn
èè '
:
èè' (
$str
èè) 7
,
èè7 8
onDelete
êê  
:
êê  !
ReferentialAction
êê" 3
.
êê3 4
Cascade
êê4 ;
)
êê; <
;
êê< =
}
ëë 
)
ëë 
;
ëë 
migrationBuilder
ìì 
.
ìì 
CreateTable
ìì (
(
ìì( )
name
îî 
:
îî 
$str
îî )
,
îî) *
columns
ïï 
:
ïï 
table
ïï 
=>
ïï !
new
ïï" %
{
ññ 
Id
óó 
=
óó 
table
óó 
.
óó 
Column
óó %
<
óó% &
Guid
óó& *
>
óó* +
(
óó+ ,
type
óó, 0
:
óó0 1
$str
óó2 D
,
óóD E
nullable
óóF N
:
óóN O
false
óóP U
)
óóU V
,
óóV W
InstructorId
òò  
=
òò! "
table
òò# (
.
òò( )
Column
òò) /
<
òò/ 0
Guid
òò0 4
>
òò4 5
(
òò5 6
type
òò6 :
:
òò: ;
$str
òò< N
,
òòN O
nullable
òòP X
:
òòX Y
false
òòZ _
)
òò_ `
,
òò` a
Rate
ôô 
=
ôô 
table
ôô  
.
ôô  !
Column
ôô! '
<
ôô' (
int
ôô( +
>
ôô+ ,
(
ôô, -
type
ôô- 1
:
ôô1 2
$str
ôô3 8
,
ôô8 9
nullable
ôô: B
:
ôôB C
false
ôôD I
)
ôôI J
,
ôôJ K
	CreatedBy
öö 
=
öö 
table
öö  %
.
öö% &
Column
öö& ,
<
öö, -
string
öö- 3
>
öö3 4
(
öö4 5
type
öö5 9
:
öö9 :
$str
öö; J
,
ööJ K
nullable
ööL T
:
ööT U
true
ööV Z
)
ööZ [
,
öö[ \
CreatedTime
õõ 
=
õõ  !
table
õõ" '
.
õõ' (
Column
õõ( .
<
õõ. /
DateTime
õõ/ 7
>
õõ7 8
(
õõ8 9
type
õõ9 =
:
õõ= >
$str
õõ? J
,
õõJ K
nullable
õõL T
:
õõT U
true
õõV Z
)
õõZ [
,
õõ[ \
	UpdatedBy
úú 
=
úú 
table
úú  %
.
úú% &
Column
úú& ,
<
úú, -
string
úú- 3
>
úú3 4
(
úú4 5
type
úú5 9
:
úú9 :
$str
úú; J
,
úúJ K
nullable
úúL T
:
úúT U
true
úúV Z
)
úúZ [
,
úú[ \
UpdatedTime
ùù 
=
ùù  !
table
ùù" '
.
ùù' (
Column
ùù( .
<
ùù. /
DateTime
ùù/ 7
>
ùù7 8
(
ùù8 9
type
ùù9 =
:
ùù= >
$str
ùù? J
,
ùùJ K
nullable
ùùL T
:
ùùT U
true
ùùV Z
)
ùùZ [
,
ùù[ \
Status
ûû 
=
ûû 
table
ûû "
.
ûû" #
Column
ûû# )
<
ûû) *
int
ûû* -
>
ûû- .
(
ûû. /
type
ûû/ 3
:
ûû3 4
$str
ûû5 :
,
ûû: ;
nullable
ûû< D
:
ûûD E
false
ûûF K
)
ûûK L
}
üü 
,
üü 
constraints
†† 
:
†† 
table
†† "
=>
††# %
{
°° 
table
¢¢ 
.
¢¢ 

PrimaryKey
¢¢ $
(
¢¢$ %
$str
¢¢% ;
,
¢¢; <
x
¢¢= >
=>
¢¢? A
x
¢¢B C
.
¢¢C D
Id
¢¢D F
)
¢¢F G
;
¢¢G H
table
££ 
.
££ 

ForeignKey
££ $
(
££$ %
name
§§ 
:
§§ 
$str
§§ M
,
§§M N
column
•• 
:
•• 
x
••  !
=>
••" $
x
••% &
.
••& '
InstructorId
••' 3
,
••3 4
principalTable
¶¶ &
:
¶¶& '
$str
¶¶( 5
,
¶¶5 6
principalColumn
ßß '
:
ßß' (
$str
ßß) 7
,
ßß7 8
onDelete
®®  
:
®®  !
ReferentialAction
®®" 3
.
®®3 4
Cascade
®®4 ;
)
®®; <
;
®®< =
}
©© 
)
©© 
;
©© 
migrationBuilder
´´ 
.
´´ 
CreateTable
´´ (
(
´´( )
name
¨¨ 
:
¨¨ 
$str
¨¨ #
,
¨¨# $
columns
≠≠ 
:
≠≠ 
table
≠≠ 
=>
≠≠ !
new
≠≠" %
{
ÆÆ 
Id
ØØ 
=
ØØ 
table
ØØ 
.
ØØ 
Column
ØØ %
<
ØØ% &
Guid
ØØ& *
>
ØØ* +
(
ØØ+ ,
type
ØØ, 0
:
ØØ0 1
$str
ØØ2 D
,
ØØD E
nullable
ØØF N
:
ØØN O
false
ØØP U
)
ØØU V
,
ØØV W
	StudentId
∞∞ 
=
∞∞ 
table
∞∞  %
.
∞∞% &
Column
∞∞& ,
<
∞∞, -
Guid
∞∞- 1
>
∞∞1 2
(
∞∞2 3
type
∞∞3 7
:
∞∞7 8
$str
∞∞9 K
,
∞∞K L
nullable
∞∞M U
:
∞∞U V
false
∞∞W \
)
∞∞\ ]
,
∞∞] ^

TotalPrice
±± 
=
±±  
table
±±! &
.
±±& '
Column
±±' -
<
±±- .
double
±±. 4
>
±±4 5
(
±±5 6
type
±±6 :
:
±±: ;
$str
±±< C
,
±±C D
nullable
±±E M
:
±±M N
false
±±O T
)
±±T U
}
≤≤ 
,
≤≤ 
constraints
≥≥ 
:
≥≥ 
table
≥≥ "
=>
≥≥# %
{
¥¥ 
table
µµ 
.
µµ 

PrimaryKey
µµ $
(
µµ$ %
$str
µµ% 5
,
µµ5 6
x
µµ7 8
=>
µµ9 ;
x
µµ< =
.
µµ= >
Id
µµ> @
)
µµ@ A
;
µµA B
table
∂∂ 
.
∂∂ 

ForeignKey
∂∂ $
(
∂∂$ %
name
∑∑ 
:
∑∑ 
$str
∑∑ A
,
∑∑A B
column
∏∏ 
:
∏∏ 
x
∏∏  !
=>
∏∏" $
x
∏∏% &
.
∏∏& '
	StudentId
∏∏' 0
,
∏∏0 1
principalTable
ππ &
:
ππ& '
$str
ππ( 2
,
ππ2 3
principalColumn
∫∫ '
:
∫∫' (
$str
∫∫) 4
,
∫∫4 5
onDelete
ªª  
:
ªª  !
ReferentialAction
ªª" 3
.
ªª3 4
Cascade
ªª4 ;
)
ªª; <
;
ªª< =
}
ºº 
)
ºº 
;
ºº 
migrationBuilder
ææ 
.
ææ 
CreateTable
ææ (
(
ææ( )
name
øø 
:
øø 
$str
øø $
,
øø$ %
columns
¿¿ 
:
¿¿ 
table
¿¿ 
=>
¿¿ !
new
¿¿" %
{
¡¡ 
Id
¬¬ 
=
¬¬ 
table
¬¬ 
.
¬¬ 
Column
¬¬ %
<
¬¬% &
Guid
¬¬& *
>
¬¬* +
(
¬¬+ ,
type
¬¬, 0
:
¬¬0 1
$str
¬¬2 D
,
¬¬D E
nullable
¬¬F N
:
¬¬N O
false
¬¬P U
)
¬¬U V
,
¬¬V W
	StudentId
√√ 
=
√√ 
table
√√  %
.
√√% &
Column
√√& ,
<
√√, -
Guid
√√- 1
>
√√1 2
(
√√2 3
type
√√3 7
:
√√7 8
$str
√√9 K
,
√√K L
nullable
√√M U
:
√√U V
false
√√W \
)
√√\ ]
,
√√] ^

OrderPrice
ƒƒ 
=
ƒƒ  
table
ƒƒ! &
.
ƒƒ& '
Column
ƒƒ' -
<
ƒƒ- .
double
ƒƒ. 4
>
ƒƒ4 5
(
ƒƒ5 6
type
ƒƒ6 :
:
ƒƒ: ;
$str
ƒƒ< C
,
ƒƒC D
nullable
ƒƒE M
:
ƒƒM N
false
ƒƒO T
)
ƒƒT U
,
ƒƒU V
PaymentIntentId
≈≈ #
=
≈≈$ %
table
≈≈& +
.
≈≈+ ,
Column
≈≈, 2
<
≈≈2 3
string
≈≈3 9
>
≈≈9 :
(
≈≈: ;
type
≈≈; ?
:
≈≈? @
$str
≈≈A P
,
≈≈P Q
nullable
≈≈R Z
:
≈≈Z [
true
≈≈\ `
)
≈≈` a
,
≈≈a b
StripeSessionId
∆∆ #
=
∆∆$ %
table
∆∆& +
.
∆∆+ ,
Column
∆∆, 2
<
∆∆2 3
string
∆∆3 9
>
∆∆9 :
(
∆∆: ;
type
∆∆; ?
:
∆∆? @
$str
∆∆A P
,
∆∆P Q
nullable
∆∆R Z
:
∆∆Z [
true
∆∆\ `
)
∆∆` a
,
∆∆a b
	CreatedBy
«« 
=
«« 
table
««  %
.
««% &
Column
««& ,
<
««, -
string
««- 3
>
««3 4
(
««4 5
type
««5 9
:
««9 :
$str
««; J
,
««J K
nullable
««L T
:
««T U
true
««V Z
)
««Z [
,
««[ \
CreatedTime
»» 
=
»»  !
table
»»" '
.
»»' (
Column
»»( .
<
»». /
DateTime
»»/ 7
>
»»7 8
(
»»8 9
type
»»9 =
:
»»= >
$str
»»? J
,
»»J K
nullable
»»L T
:
»»T U
true
»»V Z
)
»»Z [
,
»»[ \
	UpdatedBy
…… 
=
…… 
table
……  %
.
……% &
Column
……& ,
<
……, -
string
……- 3
>
……3 4
(
……4 5
type
……5 9
:
……9 :
$str
……; J
,
……J K
nullable
……L T
:
……T U
true
……V Z
)
……Z [
,
……[ \
UpdatedTime
   
=
    !
table
  " '
.
  ' (
Column
  ( .
<
  . /
DateTime
  / 7
>
  7 8
(
  8 9
type
  9 =
:
  = >
$str
  ? J
,
  J K
nullable
  L T
:
  T U
true
  V Z
)
  Z [
,
  [ \
Status
ÀÀ 
=
ÀÀ 
table
ÀÀ "
.
ÀÀ" #
Column
ÀÀ# )
<
ÀÀ) *
int
ÀÀ* -
>
ÀÀ- .
(
ÀÀ. /
type
ÀÀ/ 3
:
ÀÀ3 4
$str
ÀÀ5 :
,
ÀÀ: ;
nullable
ÀÀ< D
:
ÀÀD E
false
ÀÀF K
)
ÀÀK L
}
ÃÃ 
,
ÃÃ 
constraints
ÕÕ 
:
ÕÕ 
table
ÕÕ "
=>
ÕÕ# %
{
ŒŒ 
table
œœ 
.
œœ 

PrimaryKey
œœ $
(
œœ$ %
$str
œœ% 6
,
œœ6 7
x
œœ8 9
=>
œœ: <
x
œœ= >
.
œœ> ?
Id
œœ? A
)
œœA B
;
œœB C
table
–– 
.
–– 

ForeignKey
–– $
(
––$ %
name
—— 
:
—— 
$str
—— B
,
——B C
column
““ 
:
““ 
x
““  !
=>
““" $
x
““% &
.
““& '
	StudentId
““' 0
,
““0 1
principalTable
”” &
:
””& '
$str
””( 2
,
””2 3
principalColumn
‘‘ '
:
‘‘' (
$str
‘‘) 4
,
‘‘4 5
onDelete
’’  
:
’’  !
ReferentialAction
’’" 3
.
’’3 4
Cascade
’’4 ;
)
’’; <
;
’’< =
}
÷÷ 
)
÷÷ 
;
÷÷ 
migrationBuilder
ÿÿ 
.
ÿÿ 
CreateTable
ÿÿ (
(
ÿÿ( )
name
ŸŸ 
:
ŸŸ 
$str
ŸŸ '
,
ŸŸ' (
columns
⁄⁄ 
:
⁄⁄ 
table
⁄⁄ 
=>
⁄⁄ !
new
⁄⁄" %
{
€€ 
Id
‹‹ 
=
‹‹ 
table
‹‹ 
.
‹‹ 
Column
‹‹ %
<
‹‹% &
Guid
‹‹& *
>
‹‹* +
(
‹‹+ ,
type
‹‹, 0
:
‹‹0 1
$str
‹‹2 D
,
‹‹D E
nullable
‹‹F N
:
‹‹N O
false
‹‹P U
)
‹‹U V
,
‹‹V W
	StudentId
›› 
=
›› 
table
››  %
.
››% &
Column
››& ,
<
››, -
Guid
››- 1
>
››1 2
(
››2 3
type
››3 7
:
››7 8
$str
››9 K
,
››K L
nullable
››M U
:
››U V
false
››W \
)
››\ ]
,
››] ^
Comment
ﬁﬁ 
=
ﬁﬁ 
table
ﬁﬁ #
.
ﬁﬁ# $
Column
ﬁﬁ$ *
<
ﬁﬁ* +
string
ﬁﬁ+ 1
>
ﬁﬁ1 2
(
ﬁﬁ2 3
type
ﬁﬁ3 7
:
ﬁﬁ7 8
$str
ﬁﬁ9 H
,
ﬁﬁH I
nullable
ﬁﬁJ R
:
ﬁﬁR S
false
ﬁﬁT Y
)
ﬁﬁY Z
,
ﬁﬁZ [
	CreatedBy
ﬂﬂ 
=
ﬂﬂ 
table
ﬂﬂ  %
.
ﬂﬂ% &
Column
ﬂﬂ& ,
<
ﬂﬂ, -
string
ﬂﬂ- 3
>
ﬂﬂ3 4
(
ﬂﬂ4 5
type
ﬂﬂ5 9
:
ﬂﬂ9 :
$str
ﬂﬂ; J
,
ﬂﬂJ K
nullable
ﬂﬂL T
:
ﬂﬂT U
true
ﬂﬂV Z
)
ﬂﬂZ [
,
ﬂﬂ[ \
CreatedTime
‡‡ 
=
‡‡  !
table
‡‡" '
.
‡‡' (
Column
‡‡( .
<
‡‡. /
DateTime
‡‡/ 7
>
‡‡7 8
(
‡‡8 9
type
‡‡9 =
:
‡‡= >
$str
‡‡? J
,
‡‡J K
nullable
‡‡L T
:
‡‡T U
true
‡‡V Z
)
‡‡Z [
,
‡‡[ \
	UpdatedBy
·· 
=
·· 
table
··  %
.
··% &
Column
··& ,
<
··, -
string
··- 3
>
··3 4
(
··4 5
type
··5 9
:
··9 :
$str
··; J
,
··J K
nullable
··L T
:
··T U
true
··V Z
)
··Z [
,
··[ \
UpdatedTime
‚‚ 
=
‚‚  !
table
‚‚" '
.
‚‚' (
Column
‚‚( .
<
‚‚. /
DateTime
‚‚/ 7
>
‚‚7 8
(
‚‚8 9
type
‚‚9 =
:
‚‚= >
$str
‚‚? J
,
‚‚J K
nullable
‚‚L T
:
‚‚T U
true
‚‚V Z
)
‚‚Z [
,
‚‚[ \
Status
„„ 
=
„„ 
table
„„ "
.
„„" #
Column
„„# )
<
„„) *
int
„„* -
>
„„- .
(
„„. /
type
„„/ 3
:
„„3 4
$str
„„5 :
,
„„: ;
nullable
„„< D
:
„„D E
false
„„F K
)
„„K L
}
‰‰ 
,
‰‰ 
constraints
ÂÂ 
:
ÂÂ 
table
ÂÂ "
=>
ÂÂ# %
{
ÊÊ 
table
ÁÁ 
.
ÁÁ 

PrimaryKey
ÁÁ $
(
ÁÁ$ %
$str
ÁÁ% 9
,
ÁÁ9 :
x
ÁÁ; <
=>
ÁÁ= ?
x
ÁÁ@ A
.
ÁÁA B
Id
ÁÁB D
)
ÁÁD E
;
ÁÁE F
table
ËË 
.
ËË 

ForeignKey
ËË $
(
ËË$ %
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ E
,
ÈÈE F
column
ÍÍ 
:
ÍÍ 
x
ÍÍ  !
=>
ÍÍ" $
x
ÍÍ% &
.
ÍÍ& '
	StudentId
ÍÍ' 0
,
ÍÍ0 1
principalTable
ÎÎ &
:
ÎÎ& '
$str
ÎÎ( 2
,
ÎÎ2 3
principalColumn
ÏÏ '
:
ÏÏ' (
$str
ÏÏ) 4
,
ÏÏ4 5
onDelete
ÌÌ  
:
ÌÌ  !
ReferentialAction
ÌÌ" 3
.
ÌÌ3 4
Cascade
ÌÌ4 ;
)
ÌÌ; <
;
ÌÌ< =
}
ÓÓ 
)
ÓÓ 
;
ÓÓ 
migrationBuilder
 
.
 
CreateTable
 (
(
( )
name
ÒÒ 
:
ÒÒ 
$str
ÒÒ %
,
ÒÒ% &
columns
ÚÚ 
:
ÚÚ 
table
ÚÚ 
=>
ÚÚ !
new
ÚÚ" %
{
ÛÛ 
Id
ÙÙ 
=
ÙÙ 
table
ÙÙ 
.
ÙÙ 
Column
ÙÙ %
<
ÙÙ% &
Guid
ÙÙ& *
>
ÙÙ* +
(
ÙÙ+ ,
type
ÙÙ, 0
:
ÙÙ0 1
$str
ÙÙ2 D
,
ÙÙD E
nullable
ÙÙF N
:
ÙÙN O
false
ÙÙP U
)
ÙÙU V
,
ÙÙV W
	StudentId
ıı 
=
ıı 
table
ıı  %
.
ıı% &
Column
ıı& ,
<
ıı, -
Guid
ıı- 1
>
ıı1 2
(
ıı2 3
type
ıı3 7
:
ıı7 8
$str
ıı9 K
,
ııK L
nullable
ııM U
:
ııU V
false
ııW \
)
ıı\ ]
,
ıı] ^
CourseId
ˆˆ 
=
ˆˆ 
table
ˆˆ $
.
ˆˆ$ %
Column
ˆˆ% +
<
ˆˆ+ ,
Guid
ˆˆ, 0
>
ˆˆ0 1
(
ˆˆ1 2
type
ˆˆ2 6
:
ˆˆ6 7
$str
ˆˆ8 J
,
ˆˆJ K
nullable
ˆˆL T
:
ˆˆT U
false
ˆˆV [
)
ˆˆ[ \
,
ˆˆ\ ]
Message
˜˜ 
=
˜˜ 
table
˜˜ #
.
˜˜# $
Column
˜˜$ *
<
˜˜* +
string
˜˜+ 1
>
˜˜1 2
(
˜˜2 3
type
˜˜3 7
:
˜˜7 8
$str
˜˜9 H
,
˜˜H I
nullable
˜˜J R
:
˜˜R S
false
˜˜T Y
)
˜˜Y Z
,
˜˜Z [
	CreatedBy
¯¯ 
=
¯¯ 
table
¯¯  %
.
¯¯% &
Column
¯¯& ,
<
¯¯, -
string
¯¯- 3
>
¯¯3 4
(
¯¯4 5
type
¯¯5 9
:
¯¯9 :
$str
¯¯; J
,
¯¯J K
nullable
¯¯L T
:
¯¯T U
true
¯¯V Z
)
¯¯Z [
,
¯¯[ \
CreatedTime
˘˘ 
=
˘˘  !
table
˘˘" '
.
˘˘' (
Column
˘˘( .
<
˘˘. /
DateTime
˘˘/ 7
>
˘˘7 8
(
˘˘8 9
type
˘˘9 =
:
˘˘= >
$str
˘˘? J
,
˘˘J K
nullable
˘˘L T
:
˘˘T U
true
˘˘V Z
)
˘˘Z [
,
˘˘[ \
	UpdatedBy
˙˙ 
=
˙˙ 
table
˙˙  %
.
˙˙% &
Column
˙˙& ,
<
˙˙, -
string
˙˙- 3
>
˙˙3 4
(
˙˙4 5
type
˙˙5 9
:
˙˙9 :
$str
˙˙; J
,
˙˙J K
nullable
˙˙L T
:
˙˙T U
true
˙˙V Z
)
˙˙Z [
,
˙˙[ \
UpdatedTime
˚˚ 
=
˚˚  !
table
˚˚" '
.
˚˚' (
Column
˚˚( .
<
˚˚. /
DateTime
˚˚/ 7
>
˚˚7 8
(
˚˚8 9
type
˚˚9 =
:
˚˚= >
$str
˚˚? J
,
˚˚J K
nullable
˚˚L T
:
˚˚T U
true
˚˚V Z
)
˚˚Z [
,
˚˚[ \
Status
¸¸ 
=
¸¸ 
table
¸¸ "
.
¸¸" #
Column
¸¸# )
<
¸¸) *
int
¸¸* -
>
¸¸- .
(
¸¸. /
type
¸¸/ 3
:
¸¸3 4
$str
¸¸5 :
,
¸¸: ;
nullable
¸¸< D
:
¸¸D E
false
¸¸F K
)
¸¸K L
}
˝˝ 
,
˝˝ 
constraints
˛˛ 
:
˛˛ 
table
˛˛ "
=>
˛˛# %
{
ˇˇ 
table
ÄÄ 
.
ÄÄ 

PrimaryKey
ÄÄ $
(
ÄÄ$ %
$str
ÄÄ% 7
,
ÄÄ7 8
x
ÄÄ9 :
=>
ÄÄ; =
x
ÄÄ> ?
.
ÄÄ? @
Id
ÄÄ@ B
)
ÄÄB C
;
ÄÄC D
table
ÅÅ 
.
ÅÅ 

ForeignKey
ÅÅ $
(
ÅÅ$ %
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ A
,
ÇÇA B
column
ÉÉ 
:
ÉÉ 
x
ÉÉ  !
=>
ÉÉ" $
x
ÉÉ% &
.
ÉÉ& '
CourseId
ÉÉ' /
,
ÉÉ/ 0
principalTable
ÑÑ &
:
ÑÑ& '
$str
ÑÑ( 1
,
ÑÑ1 2
principalColumn
ÖÖ '
:
ÖÖ' (
$str
ÖÖ) -
,
ÖÖ- .
onDelete
ÜÜ  
:
ÜÜ  !
ReferentialAction
ÜÜ" 3
.
ÜÜ3 4
Cascade
ÜÜ4 ;
)
ÜÜ; <
;
ÜÜ< =
}
áá 
)
áá 
;
áá 
migrationBuilder
ââ 
.
ââ 
CreateTable
ââ (
(
ââ( )
name
ää 
:
ää 
$str
ää %
,
ää% &
columns
ãã 
:
ãã 
table
ãã 
=>
ãã !
new
ãã" %
{
åå 
Id
çç 
=
çç 
table
çç 
.
çç 
Column
çç %
<
çç% &
Guid
çç& *
>
çç* +
(
çç+ ,
type
çç, 0
:
çç0 1
$str
çç2 D
,
ççD E
nullable
ççF N
:
ççN O
false
ççP U
)
ççU V
,
ççV W
	StudentId
éé 
=
éé 
table
éé  %
.
éé% &
Column
éé& ,
<
éé, -
Guid
éé- 1
>
éé1 2
(
éé2 3
type
éé3 7
:
éé7 8
$str
éé9 K
,
ééK L
nullable
ééM U
:
ééU V
false
ééW \
)
éé\ ]
,
éé] ^
CourseId
èè 
=
èè 
table
èè $
.
èè$ %
Column
èè% +
<
èè+ ,
Guid
èè, 0
>
èè0 1
(
èè1 2
type
èè2 6
:
èè6 7
$str
èè8 J
,
èèJ K
nullable
èèL T
:
èèT U
false
èèV [
)
èè[ \
,
èè\ ]
Rate
êê 
=
êê 
table
êê  
.
êê  !
Column
êê! '
<
êê' (
float
êê( -
>
êê- .
(
êê. /
type
êê/ 3
:
êê3 4
$str
êê5 ;
,
êê; <
nullable
êê= E
:
êêE F
false
êêG L
)
êêL M
,
êêM N
Message
ëë 
=
ëë 
table
ëë #
.
ëë# $
Column
ëë$ *
<
ëë* +
string
ëë+ 1
>
ëë1 2
(
ëë2 3
type
ëë3 7
:
ëë7 8
$str
ëë9 H
,
ëëH I
nullable
ëëJ R
:
ëëR S
false
ëëT Y
)
ëëY Z
,
ëëZ [
IsMarked
íí 
=
íí 
table
íí $
.
íí$ %
Column
íí% +
<
íí+ ,
bool
íí, 0
>
íí0 1
(
íí1 2
type
íí2 6
:
íí6 7
$str
íí8 =
,
íí= >
nullable
íí? G
:
ííG H
false
ííI N
)
ííN O
,
ííO P
	CreatedBy
ìì 
=
ìì 
table
ìì  %
.
ìì% &
Column
ìì& ,
<
ìì, -
string
ìì- 3
>
ìì3 4
(
ìì4 5
type
ìì5 9
:
ìì9 :
$str
ìì; J
,
ììJ K
nullable
ììL T
:
ììT U
true
ììV Z
)
ììZ [
,
ìì[ \
CreatedTime
îî 
=
îî  !
table
îî" '
.
îî' (
Column
îî( .
<
îî. /
DateTime
îî/ 7
>
îî7 8
(
îî8 9
type
îî9 =
:
îî= >
$str
îî? J
,
îîJ K
nullable
îîL T
:
îîT U
true
îîV Z
)
îîZ [
,
îî[ \
	UpdatedBy
ïï 
=
ïï 
table
ïï  %
.
ïï% &
Column
ïï& ,
<
ïï, -
string
ïï- 3
>
ïï3 4
(
ïï4 5
type
ïï5 9
:
ïï9 :
$str
ïï; J
,
ïïJ K
nullable
ïïL T
:
ïïT U
true
ïïV Z
)
ïïZ [
,
ïï[ \
UpdatedTime
ññ 
=
ññ  !
table
ññ" '
.
ññ' (
Column
ññ( .
<
ññ. /
DateTime
ññ/ 7
>
ññ7 8
(
ññ8 9
type
ññ9 =
:
ññ= >
$str
ññ? J
,
ññJ K
nullable
ññL T
:
ññT U
true
ññV Z
)
ññZ [
,
ññ[ \
Status
óó 
=
óó 
table
óó "
.
óó" #
Column
óó# )
<
óó) *
int
óó* -
>
óó- .
(
óó. /
type
óó/ 3
:
óó3 4
$str
óó5 :
,
óó: ;
nullable
óó< D
:
óóD E
false
óóF K
)
óóK L
}
òò 
,
òò 
constraints
ôô 
:
ôô 
table
ôô "
=>
ôô# %
{
öö 
table
õõ 
.
õõ 

PrimaryKey
õõ $
(
õõ$ %
$str
õõ% 7
,
õõ7 8
x
õõ9 :
=>
õõ; =
x
õõ> ?
.
õõ? @
Id
õõ@ B
)
õõB C
;
õõC D
table
úú 
.
úú 

ForeignKey
úú $
(
úú$ %
name
ùù 
:
ùù 
$str
ùù A
,
ùùA B
column
ûû 
:
ûû 
x
ûû  !
=>
ûû" $
x
ûû% &
.
ûû& '
CourseId
ûû' /
,
ûû/ 0
principalTable
üü &
:
üü& '
$str
üü( 1
,
üü1 2
principalColumn
†† '
:
††' (
$str
††) -
,
††- .
onDelete
°°  
:
°°  !
ReferentialAction
°°" 3
.
°°3 4
Cascade
°°4 ;
)
°°; <
;
°°< =
}
¢¢ 
)
¢¢ 
;
¢¢ 
migrationBuilder
§§ 
.
§§ 
CreateTable
§§ (
(
§§( )
name
•• 
:
•• 
$str
•• &
,
••& '
columns
¶¶ 
:
¶¶ 
table
¶¶ 
=>
¶¶ !
new
¶¶" %
{
ßß 
Id
®® 
=
®® 
table
®® 
.
®® 
Column
®® %
<
®®% &
Guid
®®& *
>
®®* +
(
®®+ ,
type
®®, 0
:
®®0 1
$str
®®2 D
,
®®D E
nullable
®®F N
:
®®N O
false
®®P U
)
®®U V
,
®®V W
CourseId
©© 
=
©© 
table
©© $
.
©©$ %
Column
©©% +
<
©©+ ,
Guid
©©, 0
>
©©0 1
(
©©1 2
type
©©2 6
:
©©6 7
$str
©©8 J
,
©©J K
nullable
©©L T
:
©©T U
true
©©V Z
)
©©Z [
,
©©[ \

CategoryId
™™ 
=
™™  
table
™™! &
.
™™& '
Column
™™' -
<
™™- .
Guid
™™. 2
>
™™2 3
(
™™3 4
type
™™4 8
:
™™8 9
$str
™™: L
,
™™L M
nullable
™™N V
:
™™V W
true
™™X \
)
™™\ ]
,
™™] ^
LevelId
´´ 
=
´´ 
table
´´ #
.
´´# $
Column
´´$ *
<
´´* +
Guid
´´+ /
>
´´/ 0
(
´´0 1
type
´´1 5
:
´´5 6
$str
´´7 I
,
´´I J
nullable
´´K S
:
´´S T
true
´´U Y
)
´´Y Z
,
´´Z [
Title
¨¨ 
=
¨¨ 
table
¨¨ !
.
¨¨! "
Column
¨¨" (
<
¨¨( )
string
¨¨) /
>
¨¨/ 0
(
¨¨0 1
type
¨¨1 5
:
¨¨5 6
$str
¨¨7 F
,
¨¨F G
nullable
¨¨H P
:
¨¨P Q
true
¨¨R V
)
¨¨V W
,
¨¨W X
Code
≠≠ 
=
≠≠ 
table
≠≠  
.
≠≠  !
Column
≠≠! '
<
≠≠' (
string
≠≠( .
>
≠≠. /
(
≠≠/ 0
type
≠≠0 4
:
≠≠4 5
$str
≠≠6 E
,
≠≠E F
nullable
≠≠G O
:
≠≠O P
true
≠≠Q U
)
≠≠U V
,
≠≠V W
Description
ÆÆ 
=
ÆÆ  !
table
ÆÆ" '
.
ÆÆ' (
Column
ÆÆ( .
<
ÆÆ. /
string
ÆÆ/ 5
>
ÆÆ5 6
(
ÆÆ6 7
type
ÆÆ7 ;
:
ÆÆ; <
$str
ÆÆ= L
,
ÆÆL M
nullable
ÆÆN V
:
ÆÆV W
true
ÆÆX \
)
ÆÆ\ ]
,
ÆÆ] ^
LearningTime
ØØ  
=
ØØ! "
table
ØØ# (
.
ØØ( )
Column
ØØ) /
<
ØØ/ 0
int
ØØ0 3
>
ØØ3 4
(
ØØ4 5
type
ØØ5 9
:
ØØ9 :
$str
ØØ; @
,
ØØ@ A
nullable
ØØB J
:
ØØJ K
false
ØØL Q
)
ØØQ R
,
ØØR S
Price
∞∞ 
=
∞∞ 
table
∞∞ !
.
∞∞! "
Column
∞∞" (
<
∞∞( )
double
∞∞) /
>
∞∞/ 0
(
∞∞0 1
type
∞∞1 5
:
∞∞5 6
$str
∞∞7 >
,
∞∞> ?
nullable
∞∞@ H
:
∞∞H I
false
∞∞J O
)
∞∞O P
,
∞∞P Q
OldPrice
±± 
=
±± 
table
±± $
.
±±$ %
Column
±±% +
<
±±+ ,
double
±±, 2
>
±±2 3
(
±±3 4
type
±±4 8
:
±±8 9
$str
±±: A
,
±±A B
nullable
±±C K
:
±±K L
true
±±M Q
)
±±Q R
,
±±R S
CourseImgUrl
≤≤  
=
≤≤! "
table
≤≤# (
.
≤≤( )
Column
≤≤) /
<
≤≤/ 0
string
≤≤0 6
>
≤≤6 7
(
≤≤7 8
type
≤≤8 <
:
≤≤< =
$str
≤≤> M
,
≤≤M N
nullable
≤≤O W
:
≤≤W X
true
≤≤Y ]
)
≤≤] ^
,
≤≤^ _
InstructorId
≥≥  
=
≥≥! "
table
≥≥# (
.
≥≥( )
Column
≥≥) /
<
≥≥/ 0
Guid
≥≥0 4
>
≥≥4 5
(
≥≥5 6
type
≥≥6 :
:
≥≥: ;
$str
≥≥< N
,
≥≥N O
nullable
≥≥P X
:
≥≥X Y
true
≥≥Z ^
)
≥≥^ _
,
≥≥_ `
Version
¥¥ 
=
¥¥ 
table
¥¥ #
.
¥¥# $
Column
¥¥$ *
<
¥¥* +
int
¥¥+ .
>
¥¥. /
(
¥¥/ 0
type
¥¥0 4
:
¥¥4 5
$str
¥¥6 ;
,
¥¥; <
nullable
¥¥= E
:
¥¥E F
true
¥¥G K
)
¥¥K L
,
¥¥L M
CreatedTime
µµ 
=
µµ  !
table
µµ" '
.
µµ' (
Column
µµ( .
<
µµ. /
DateTime
µµ/ 7
>
µµ7 8
(
µµ8 9
type
µµ9 =
:
µµ= >
$str
µµ? J
,
µµJ K
nullable
µµL T
:
µµT U
true
µµV Z
)
µµZ [
,
µµ[ \
CurrentStatus
∂∂ !
=
∂∂" #
table
∂∂$ )
.
∂∂) *
Column
∂∂* 0
<
∂∂0 1
int
∂∂1 4
>
∂∂4 5
(
∂∂5 6
type
∂∂6 :
:
∂∂: ;
$str
∂∂< A
,
∂∂A B
nullable
∂∂C K
:
∂∂K L
true
∂∂M Q
)
∂∂Q R
}
∑∑ 
,
∑∑ 
constraints
∏∏ 
:
∏∏ 
table
∏∏ "
=>
∏∏# %
{
ππ 
table
∫∫ 
.
∫∫ 

PrimaryKey
∫∫ $
(
∫∫$ %
$str
∫∫% 8
,
∫∫8 9
x
∫∫: ;
=>
∫∫< >
x
∫∫? @
.
∫∫@ A
Id
∫∫A C
)
∫∫C D
;
∫∫D E
table
ªª 
.
ªª 

ForeignKey
ªª $
(
ªª$ %
name
ºº 
:
ºº 
$str
ºº G
,
ººG H
column
ΩΩ 
:
ΩΩ 
x
ΩΩ  !
=>
ΩΩ" $
x
ΩΩ% &
.
ΩΩ& '

CategoryId
ΩΩ' 1
,
ΩΩ1 2
principalTable
ææ &
:
ææ& '
$str
ææ( 4
,
ææ4 5
principalColumn
øø '
:
øø' (
$str
øø) -
)
øø- .
;
øø. /
table
¿¿ 
.
¿¿ 

ForeignKey
¿¿ $
(
¿¿$ %
name
¡¡ 
:
¡¡ 
$str
¡¡ B
,
¡¡B C
column
¬¬ 
:
¬¬ 
x
¬¬  !
=>
¬¬" $
x
¬¬% &
.
¬¬& '
CourseId
¬¬' /
,
¬¬/ 0
principalTable
√√ &
:
√√& '
$str
√√( 1
,
√√1 2
principalColumn
ƒƒ '
:
ƒƒ' (
$str
ƒƒ) -
)
ƒƒ- .
;
ƒƒ. /
table
≈≈ 
.
≈≈ 

ForeignKey
≈≈ $
(
≈≈$ %
name
∆∆ 
:
∆∆ 
$str
∆∆ @
,
∆∆@ A
column
«« 
:
«« 
x
««  !
=>
««" $
x
««% &
.
««& '
LevelId
««' .
,
««. /
principalTable
»» &
:
»»& '
$str
»»( 0
,
»»0 1
principalColumn
…… '
:
……' (
$str
……) -
)
……- .
;
……. /
}
   
)
   
;
   
migrationBuilder
ÃÃ 
.
ÃÃ 
CreateTable
ÃÃ (
(
ÃÃ( )
name
ÕÕ 
:
ÕÕ 
$str
ÕÕ &
,
ÕÕ& '
columns
ŒŒ 
:
ŒŒ 
table
ŒŒ 
=>
ŒŒ !
new
ŒŒ" %
{
œœ 
Id
–– 
=
–– 
table
–– 
.
–– 
Column
–– %
<
––% &
Guid
––& *
>
––* +
(
––+ ,
type
––, 0
:
––0 1
$str
––2 D
,
––D E
nullable
––F N
:
––N O
false
––P U
)
––U V
,
––V W
	StudentId
—— 
=
—— 
table
——  %
.
——% &
Column
——& ,
<
——, -
Guid
——- 1
>
——1 2
(
——2 3
type
——3 7
:
——7 8
$str
——9 K
,
——K L
nullable
——M U
:
——U V
true
——W [
)
——[ \
,
——\ ]
CourseId
““ 
=
““ 
table
““ $
.
““$ %
Column
““% +
<
““+ ,
Guid
““, 0
>
““0 1
(
““1 2
type
““2 6
:
““6 7
$str
““8 J
,
““J K
nullable
““L T
:
““T U
true
““V Z
)
““Z [
,
““[ \
CertificateImgUrl
”” %
=
””& '
table
””( -
.
””- .
Column
””. 4
<
””4 5
string
””5 ;
>
””; <
(
””< =
type
””= A
:
””A B
$str
””C R
,
””R S
nullable
””T \
:
””\ ]
true
””^ b
)
””b c
,
””c d
	CreatedBy
‘‘ 
=
‘‘ 
table
‘‘  %
.
‘‘% &
Column
‘‘& ,
<
‘‘, -
string
‘‘- 3
>
‘‘3 4
(
‘‘4 5
type
‘‘5 9
:
‘‘9 :
$str
‘‘; J
,
‘‘J K
nullable
‘‘L T
:
‘‘T U
true
‘‘V Z
)
‘‘Z [
,
‘‘[ \
CreatedTime
’’ 
=
’’  !
table
’’" '
.
’’' (
Column
’’( .
<
’’. /
DateTime
’’/ 7
>
’’7 8
(
’’8 9
type
’’9 =
:
’’= >
$str
’’? J
,
’’J K
nullable
’’L T
:
’’T U
true
’’V Z
)
’’Z [
,
’’[ \
	UpdatedBy
÷÷ 
=
÷÷ 
table
÷÷  %
.
÷÷% &
Column
÷÷& ,
<
÷÷, -
string
÷÷- 3
>
÷÷3 4
(
÷÷4 5
type
÷÷5 9
:
÷÷9 :
$str
÷÷; J
,
÷÷J K
nullable
÷÷L T
:
÷÷T U
true
÷÷V Z
)
÷÷Z [
,
÷÷[ \
UpdatedTime
◊◊ 
=
◊◊  !
table
◊◊" '
.
◊◊' (
Column
◊◊( .
<
◊◊. /
DateTime
◊◊/ 7
>
◊◊7 8
(
◊◊8 9
type
◊◊9 =
:
◊◊= >
$str
◊◊? J
,
◊◊J K
nullable
◊◊L T
:
◊◊T U
true
◊◊V Z
)
◊◊Z [
,
◊◊[ \
Status
ÿÿ 
=
ÿÿ 
table
ÿÿ "
.
ÿÿ" #
Column
ÿÿ# )
<
ÿÿ) *
int
ÿÿ* -
>
ÿÿ- .
(
ÿÿ. /
type
ÿÿ/ 3
:
ÿÿ3 4
$str
ÿÿ5 :
,
ÿÿ: ;
nullable
ÿÿ< D
:
ÿÿD E
false
ÿÿF K
)
ÿÿK L
}
ŸŸ 
,
ŸŸ 
constraints
⁄⁄ 
:
⁄⁄ 
table
⁄⁄ "
=>
⁄⁄# %
{
€€ 
table
‹‹ 
.
‹‹ 

PrimaryKey
‹‹ $
(
‹‹$ %
$str
‹‹% 8
,
‹‹8 9
x
‹‹: ;
=>
‹‹< >
x
‹‹? @
.
‹‹@ A
Id
‹‹A C
)
‹‹C D
;
‹‹D E
table
›› 
.
›› 

ForeignKey
›› $
(
››$ %
name
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ B
,
ﬁﬁB C
column
ﬂﬂ 
:
ﬂﬂ 
x
ﬂﬂ  !
=>
ﬂﬂ" $
x
ﬂﬂ% &
.
ﬂﬂ& '
CourseId
ﬂﬂ' /
,
ﬂﬂ/ 0
principalTable
‡‡ &
:
‡‡& '
$str
‡‡( 1
,
‡‡1 2
principalColumn
·· '
:
··' (
$str
··) -
)
··- .
;
··. /
table
‚‚ 
.
‚‚ 

ForeignKey
‚‚ $
(
‚‚$ %
name
„„ 
:
„„ 
$str
„„ D
,
„„D E
column
‰‰ 
:
‰‰ 
x
‰‰  !
=>
‰‰" $
x
‰‰% &
.
‰‰& '
	StudentId
‰‰' 0
,
‰‰0 1
principalTable
ÂÂ &
:
ÂÂ& '
$str
ÂÂ( 2
,
ÂÂ2 3
principalColumn
ÊÊ '
:
ÊÊ' (
$str
ÊÊ) 4
)
ÊÊ4 5
;
ÊÊ5 6
}
ÁÁ 
)
ÁÁ 
;
ÁÁ 
migrationBuilder
ÈÈ 
.
ÈÈ 
CreateTable
ÈÈ (
(
ÈÈ( )
name
ÍÍ 
:
ÍÍ 
$str
ÍÍ #
,
ÍÍ# $
columns
ÎÎ 
:
ÎÎ 
table
ÎÎ 
=>
ÎÎ !
new
ÎÎ" %
{
ÏÏ 
Id
ÌÌ 
=
ÌÌ 
table
ÌÌ 
.
ÌÌ 
Column
ÌÌ %
<
ÌÌ% &
Guid
ÌÌ& *
>
ÌÌ* +
(
ÌÌ+ ,
type
ÌÌ, 0
:
ÌÌ0 1
$str
ÌÌ2 D
,
ÌÌD E
nullable
ÌÌF N
:
ÌÌN O
false
ÌÌP U
)
ÌÌU V
,
ÌÌV W
CartHeaderId
ÓÓ  
=
ÓÓ! "
table
ÓÓ# (
.
ÓÓ( )
Column
ÓÓ) /
<
ÓÓ/ 0
Guid
ÓÓ0 4
>
ÓÓ4 5
(
ÓÓ5 6
type
ÓÓ6 :
:
ÓÓ: ;
$str
ÓÓ< N
,
ÓÓN O
nullable
ÓÓP X
:
ÓÓX Y
false
ÓÓZ _
)
ÓÓ_ `
,
ÓÓ` a
CourseId
ÔÔ 
=
ÔÔ 
table
ÔÔ $
.
ÔÔ$ %
Column
ÔÔ% +
<
ÔÔ+ ,
Guid
ÔÔ, 0
>
ÔÔ0 1
(
ÔÔ1 2
type
ÔÔ2 6
:
ÔÔ6 7
$str
ÔÔ8 J
,
ÔÔJ K
nullable
ÔÔL T
:
ÔÔT U
false
ÔÔV [
)
ÔÔ[ \
,
ÔÔ\ ]
CourseTitle
 
=
  !
table
" '
.
' (
Column
( .
<
. /
string
/ 5
>
5 6
(
6 7
type
7 ;
:
; <
$str
= L
,
L M
nullable
N V
:
V W
true
X \
)
\ ]
,
] ^
CoursePrice
ÒÒ 
=
ÒÒ  !
table
ÒÒ" '
.
ÒÒ' (
Column
ÒÒ( .
<
ÒÒ. /
double
ÒÒ/ 5
>
ÒÒ5 6
(
ÒÒ6 7
type
ÒÒ7 ;
:
ÒÒ; <
$str
ÒÒ= D
,
ÒÒD E
nullable
ÒÒF N
:
ÒÒN O
false
ÒÒP U
)
ÒÒU V
}
ÚÚ 
,
ÚÚ 
constraints
ÛÛ 
:
ÛÛ 
table
ÛÛ "
=>
ÛÛ# %
{
ÙÙ 
table
ıı 
.
ıı 

PrimaryKey
ıı $
(
ıı$ %
$str
ıı% 5
,
ıı5 6
x
ıı7 8
=>
ıı9 ;
x
ıı< =
.
ıı= >
Id
ıı> @
)
ıı@ A
;
ııA B
table
ˆˆ 
.
ˆˆ 

ForeignKey
ˆˆ $
(
ˆˆ$ %
name
˜˜ 
:
˜˜ 
$str
˜˜ G
,
˜˜G H
column
¯¯ 
:
¯¯ 
x
¯¯  !
=>
¯¯" $
x
¯¯% &
.
¯¯& '
CartHeaderId
¯¯' 3
,
¯¯3 4
principalTable
˘˘ &
:
˘˘& '
$str
˘˘( 5
,
˘˘5 6
principalColumn
˙˙ '
:
˙˙' (
$str
˙˙) -
,
˙˙- .
onDelete
˚˚  
:
˚˚  !
ReferentialAction
˚˚" 3
.
˚˚3 4
Cascade
˚˚4 ;
)
˚˚; <
;
˚˚< =
}
¸¸ 
)
¸¸ 
;
¸¸ 
migrationBuilder
˛˛ 
.
˛˛ 
CreateTable
˛˛ (
(
˛˛( )
name
ˇˇ 
:
ˇˇ 
$str
ˇˇ $
,
ˇˇ$ %
columns
ÄÄ 
:
ÄÄ 
table
ÄÄ 
=>
ÄÄ !
new
ÄÄ" %
{
ÅÅ 
Id
ÇÇ 
=
ÇÇ 
table
ÇÇ 
.
ÇÇ 
Column
ÇÇ %
<
ÇÇ% &
Guid
ÇÇ& *
>
ÇÇ* +
(
ÇÇ+ ,
type
ÇÇ, 0
:
ÇÇ0 1
$str
ÇÇ2 D
,
ÇÇD E
nullable
ÇÇF N
:
ÇÇN O
false
ÇÇP U
)
ÇÇU V
,
ÇÇV W
CourseId
ÉÉ 
=
ÉÉ 
table
ÉÉ $
.
ÉÉ$ %
Column
ÉÉ% +
<
ÉÉ+ ,
Guid
ÉÉ, 0
>
ÉÉ0 1
(
ÉÉ1 2
type
ÉÉ2 6
:
ÉÉ6 7
$str
ÉÉ8 J
,
ÉÉJ K
nullable
ÉÉL T
:
ÉÉT U
false
ÉÉV [
)
ÉÉ[ \
,
ÉÉ\ ]
CourseTitle
ÑÑ 
=
ÑÑ  !
table
ÑÑ" '
.
ÑÑ' (
Column
ÑÑ( .
<
ÑÑ. /
string
ÑÑ/ 5
>
ÑÑ5 6
(
ÑÑ6 7
type
ÑÑ7 ;
:
ÑÑ; <
$str
ÑÑ= L
,
ÑÑL M
nullable
ÑÑN V
:
ÑÑV W
true
ÑÑX \
)
ÑÑ\ ]
,
ÑÑ] ^
CoursePrice
ÖÖ 
=
ÖÖ  !
table
ÖÖ" '
.
ÖÖ' (
Column
ÖÖ( .
<
ÖÖ. /
double
ÖÖ/ 5
>
ÖÖ5 6
(
ÖÖ6 7
type
ÖÖ7 ;
:
ÖÖ; <
$str
ÖÖ= D
,
ÖÖD E
nullable
ÖÖF N
:
ÖÖN O
false
ÖÖP U
)
ÖÖU V
,
ÖÖV W
OrderHeaderId
ÜÜ !
=
ÜÜ" #
table
ÜÜ$ )
.
ÜÜ) *
Column
ÜÜ* 0
<
ÜÜ0 1
Guid
ÜÜ1 5
>
ÜÜ5 6
(
ÜÜ6 7
type
ÜÜ7 ;
:
ÜÜ; <
$str
ÜÜ= O
,
ÜÜO P
nullable
ÜÜQ Y
:
ÜÜY Z
false
ÜÜ[ `
)
ÜÜ` a
}
áá 
,
áá 
constraints
àà 
:
àà 
table
àà "
=>
àà# %
{
ââ 
table
ää 
.
ää 

PrimaryKey
ää $
(
ää$ %
$str
ää% 6
,
ää6 7
x
ää8 9
=>
ää: <
x
ää= >
.
ää> ?
Id
ää? A
)
ääA B
;
ääB C
table
ãã 
.
ãã 

ForeignKey
ãã $
(
ãã$ %
name
åå 
:
åå 
$str
åå J
,
ååJ K
column
çç 
:
çç 
x
çç  !
=>
çç" $
x
çç% &
.
çç& '
OrderHeaderId
çç' 4
,
çç4 5
principalTable
éé &
:
éé& '
$str
éé( 6
,
éé6 7
principalColumn
èè '
:
èè' (
$str
èè) -
,
èè- .
onDelete
êê  
:
êê  !
ReferentialAction
êê" 3
.
êê3 4
Cascade
êê4 ;
)
êê; <
;
êê< =
}
ëë 
)
ëë 
;
ëë 
migrationBuilder
ìì 
.
ìì 
CreateTable
ìì (
(
ìì( )
name
îî 
:
îî 
$str
îî $
,
îî$ %
columns
ïï 
:
ïï 
table
ïï 
=>
ïï !
new
ïï" %
{
ññ 
Id
óó 
=
óó 
table
óó 
.
óó 
Column
óó %
<
óó% &
Guid
óó& *
>
óó* +
(
óó+ ,
type
óó, 0
:
óó0 1
$str
óó2 D
,
óóD E
nullable
óóF N
:
óóN O
false
óóP U
)
óóU V
,
óóV W
OrderHeaderId
òò !
=
òò" #
table
òò$ )
.
òò) *
Column
òò* 0
<
òò0 1
Guid
òò1 5
>
òò5 6
(
òò6 7
type
òò7 ;
:
òò; <
$str
òò= O
,
òòO P
nullable
òòQ Y
:
òòY Z
true
òò[ _
)
òò_ `
,
òò` a
Status
ôô 
=
ôô 
table
ôô "
.
ôô" #
Column
ôô# )
<
ôô) *
int
ôô* -
>
ôô- .
(
ôô. /
type
ôô/ 3
:
ôô3 4
$str
ôô5 :
,
ôô: ;
nullable
ôô< D
:
ôôD E
false
ôôF K
)
ôôK L
,
ôôL M
CreatedTime
öö 
=
öö  !
table
öö" '
.
öö' (
Column
öö( .
<
öö. /
DateTime
öö/ 7
>
öö7 8
(
öö8 9
type
öö9 =
:
öö= >
$str
öö? J
,
ööJ K
nullable
ööL T
:
ööT U
false
ööV [
)
öö[ \
,
öö\ ]
	CreatedBy
õõ 
=
õõ 
table
õõ  %
.
õõ% &
Column
õõ& ,
<
õõ, -
string
õõ- 3
>
õõ3 4
(
õõ4 5
type
õõ5 9
:
õõ9 :
$str
õõ; J
,
õõJ K
nullable
õõL T
:
õõT U
true
õõV Z
)
õõZ [
}
úú 
,
úú 
constraints
ùù 
:
ùù 
table
ùù "
=>
ùù# %
{
ûû 
table
üü 
.
üü 

PrimaryKey
üü $
(
üü$ %
$str
üü% 6
,
üü6 7
x
üü8 9
=>
üü: <
x
üü= >
.
üü> ?
Id
üü? A
)
üüA B
;
üüB C
table
†† 
.
†† 

ForeignKey
†† $
(
††$ %
name
°° 
:
°° 
$str
°° J
,
°°J K
column
¢¢ 
:
¢¢ 
x
¢¢  !
=>
¢¢" $
x
¢¢% &
.
¢¢& '
OrderHeaderId
¢¢' 4
,
¢¢4 5
principalTable
££ &
:
££& '
$str
££( 6
,
££6 7
principalColumn
§§ '
:
§§' (
$str
§§) -
)
§§- .
;
§§. /
}
•• 
)
•• 
;
•• 
migrationBuilder
ßß 
.
ßß 
CreateTable
ßß (
(
ßß( )
name
®® 
:
®® 
$str
®® -
,
®®- .
columns
©© 
:
©© 
table
©© 
=>
©© !
new
©©" %
{
™™ 
Id
´´ 
=
´´ 
table
´´ 
.
´´ 
Column
´´ %
<
´´% &
Guid
´´& *
>
´´* +
(
´´+ ,
type
´´, 0
:
´´0 1
$str
´´2 D
,
´´D E
nullable
´´F N
:
´´N O
false
´´P U
)
´´U V
,
´´V W
CourseVersionId
¨¨ #
=
¨¨$ %
table
¨¨& +
.
¨¨+ ,
Column
¨¨, 2
<
¨¨2 3
Guid
¨¨3 7
>
¨¨7 8
(
¨¨8 9
type
¨¨9 =
:
¨¨= >
$str
¨¨? Q
,
¨¨Q R
nullable
¨¨S [
:
¨¨[ \
true
¨¨] a
)
¨¨a b
,
¨¨b c
Title
≠≠ 
=
≠≠ 
table
≠≠ !
.
≠≠! "
Column
≠≠" (
<
≠≠( )
string
≠≠) /
>
≠≠/ 0
(
≠≠0 1
type
≠≠1 5
:
≠≠5 6
$str
≠≠7 F
,
≠≠F G
nullable
≠≠H P
:
≠≠P Q
true
≠≠R V
)
≠≠V W
,
≠≠W X
Description
ÆÆ 
=
ÆÆ  !
table
ÆÆ" '
.
ÆÆ' (
Column
ÆÆ( .
<
ÆÆ. /
string
ÆÆ/ 5
>
ÆÆ5 6
(
ÆÆ6 7
type
ÆÆ7 ;
:
ÆÆ; <
$str
ÆÆ= L
,
ÆÆL M
nullable
ÆÆN V
:
ÆÆV W
true
ÆÆX \
)
ÆÆ\ ]
,
ÆÆ] ^
CurrentStatus
ØØ !
=
ØØ" #
table
ØØ$ )
.
ØØ) *
Column
ØØ* 0
<
ØØ0 1
int
ØØ1 4
>
ØØ4 5
(
ØØ5 6
type
ØØ6 :
:
ØØ: ;
$str
ØØ< A
,
ØØA B
nullable
ØØC K
:
ØØK L
true
ØØM Q
)
ØØQ R
}
∞∞ 
,
∞∞ 
constraints
±± 
:
±± 
table
±± "
=>
±±# %
{
≤≤ 
table
≥≥ 
.
≥≥ 

PrimaryKey
≥≥ $
(
≥≥$ %
$str
≥≥% ?
,
≥≥? @
x
≥≥A B
=>
≥≥C E
x
≥≥F G
.
≥≥G H
Id
≥≥H J
)
≥≥J K
;
≥≥K L
table
¥¥ 
.
¥¥ 

ForeignKey
¥¥ $
(
¥¥$ %
name
µµ 
:
µµ 
$str
µµ W
,
µµW X
column
∂∂ 
:
∂∂ 
x
∂∂  !
=>
∂∂" $
x
∂∂% &
.
∂∂& '
CourseVersionId
∂∂' 6
,
∂∂6 7
principalTable
∑∑ &
:
∑∑& '
$str
∑∑( 8
,
∑∑8 9
principalColumn
∏∏ '
:
∏∏' (
$str
∏∏) -
)
∏∏- .
;
∏∏. /
}
ππ 
)
ππ 
;
ππ 
migrationBuilder
ªª 
.
ªª 
CreateTable
ªª (
(
ªª( )
name
ºº 
:
ºº 
$str
ºº -
,
ºº- .
columns
ΩΩ 
:
ΩΩ 
table
ΩΩ 
=>
ΩΩ !
new
ΩΩ" %
{
ææ 
Id
øø 
=
øø 
table
øø 
.
øø 
Column
øø %
<
øø% &
Guid
øø& *
>
øø* +
(
øø+ ,
type
øø, 0
:
øø0 1
$str
øø2 D
,
øøD E
nullable
øøF N
:
øøN O
false
øøP U
)
øøU V
,
øøV W
CourseVersionId
¿¿ #
=
¿¿$ %
table
¿¿& +
.
¿¿+ ,
Column
¿¿, 2
<
¿¿2 3
Guid
¿¿3 7
>
¿¿7 8
(
¿¿8 9
type
¿¿9 =
:
¿¿= >
$str
¿¿? Q
,
¿¿Q R
nullable
¿¿S [
:
¿¿[ \
false
¿¿] b
)
¿¿b c
,
¿¿c d
Comment
¡¡ 
=
¡¡ 
table
¡¡ #
.
¡¡# $
Column
¡¡$ *
<
¡¡* +
string
¡¡+ 1
>
¡¡1 2
(
¡¡2 3
type
¡¡3 7
:
¡¡7 8
$str
¡¡9 H
,
¡¡H I
nullable
¡¡J R
:
¡¡R S
false
¡¡T Y
)
¡¡Y Z
,
¡¡Z [
	CreatedBy
¬¬ 
=
¬¬ 
table
¬¬  %
.
¬¬% &
Column
¬¬& ,
<
¬¬, -
string
¬¬- 3
>
¬¬3 4
(
¬¬4 5
type
¬¬5 9
:
¬¬9 :
$str
¬¬; J
,
¬¬J K
nullable
¬¬L T
:
¬¬T U
true
¬¬V Z
)
¬¬Z [
,
¬¬[ \
CreatedTime
√√ 
=
√√  !
table
√√" '
.
√√' (
Column
√√( .
<
√√. /
DateTime
√√/ 7
>
√√7 8
(
√√8 9
type
√√9 =
:
√√= >
$str
√√? J
,
√√J K
nullable
√√L T
:
√√T U
true
√√V Z
)
√√Z [
,
√√[ \
	UpdatedBy
ƒƒ 
=
ƒƒ 
table
ƒƒ  %
.
ƒƒ% &
Column
ƒƒ& ,
<
ƒƒ, -
string
ƒƒ- 3
>
ƒƒ3 4
(
ƒƒ4 5
type
ƒƒ5 9
:
ƒƒ9 :
$str
ƒƒ; J
,
ƒƒJ K
nullable
ƒƒL T
:
ƒƒT U
true
ƒƒV Z
)
ƒƒZ [
,
ƒƒ[ \
UpdatedTime
≈≈ 
=
≈≈  !
table
≈≈" '
.
≈≈' (
Column
≈≈( .
<
≈≈. /
DateTime
≈≈/ 7
>
≈≈7 8
(
≈≈8 9
type
≈≈9 =
:
≈≈= >
$str
≈≈? J
,
≈≈J K
nullable
≈≈L T
:
≈≈T U
true
≈≈V Z
)
≈≈Z [
,
≈≈[ \
Status
∆∆ 
=
∆∆ 
table
∆∆ "
.
∆∆" #
Column
∆∆# )
<
∆∆) *
int
∆∆* -
>
∆∆- .
(
∆∆. /
type
∆∆/ 3
:
∆∆3 4
$str
∆∆5 :
,
∆∆: ;
nullable
∆∆< D
:
∆∆D E
false
∆∆F K
)
∆∆K L
}
«« 
,
«« 
constraints
»» 
:
»» 
table
»» "
=>
»»# %
{
…… 
table
   
.
   

PrimaryKey
   $
(
  $ %
$str
  % ?
,
  ? @
x
  A B
=>
  C E
x
  F G
.
  G H
Id
  H J
)
  J K
;
  K L
table
ÀÀ 
.
ÀÀ 

ForeignKey
ÀÀ $
(
ÀÀ$ %
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ W
,
ÃÃW X
column
ÕÕ 
:
ÕÕ 
x
ÕÕ  !
=>
ÕÕ" $
x
ÕÕ% &
.
ÕÕ& '
CourseVersionId
ÕÕ' 6
,
ÕÕ6 7
principalTable
ŒŒ &
:
ŒŒ& '
$str
ŒŒ( 8
,
ŒŒ8 9
principalColumn
œœ '
:
œœ' (
$str
œœ) -
,
œœ- .
onDelete
––  
:
––  !
ReferentialAction
––" 3
.
––3 4
Cascade
––4 ;
)
––; <
;
––< =
}
—— 
)
—— 
;
—— 
migrationBuilder
”” 
.
”” 
CreateTable
”” (
(
””( )
name
‘‘ 
:
‘‘ 
$str
‘‘ +
,
‘‘+ ,
columns
’’ 
:
’’ 
table
’’ 
=>
’’ !
new
’’" %
{
÷÷ 
Id
◊◊ 
=
◊◊ 
table
◊◊ 
.
◊◊ 
Column
◊◊ %
<
◊◊% &
Guid
◊◊& *
>
◊◊* +
(
◊◊+ ,
type
◊◊, 0
:
◊◊0 1
$str
◊◊2 D
,
◊◊D E
nullable
◊◊F N
:
◊◊N O
false
◊◊P U
)
◊◊U V
,
◊◊V W
CourseVersionId
ÿÿ #
=
ÿÿ$ %
table
ÿÿ& +
.
ÿÿ+ ,
Column
ÿÿ, 2
<
ÿÿ2 3
Guid
ÿÿ3 7
>
ÿÿ7 8
(
ÿÿ8 9
type
ÿÿ9 =
:
ÿÿ= >
$str
ÿÿ? Q
,
ÿÿQ R
nullable
ÿÿS [
:
ÿÿ[ \
true
ÿÿ] a
)
ÿÿa b
,
ÿÿb c
Status
ŸŸ 
=
ŸŸ 
table
ŸŸ "
.
ŸŸ" #
Column
ŸŸ# )
<
ŸŸ) *
int
ŸŸ* -
>
ŸŸ- .
(
ŸŸ. /
type
ŸŸ/ 3
:
ŸŸ3 4
$str
ŸŸ5 :
,
ŸŸ: ;
nullable
ŸŸ< D
:
ŸŸD E
false
ŸŸF K
)
ŸŸK L
,
ŸŸL M

CreateTime
⁄⁄ 
=
⁄⁄  
table
⁄⁄! &
.
⁄⁄& '
Column
⁄⁄' -
<
⁄⁄- .
DateTime
⁄⁄. 6
>
⁄⁄6 7
(
⁄⁄7 8
type
⁄⁄8 <
:
⁄⁄< =
$str
⁄⁄> I
,
⁄⁄I J
nullable
⁄⁄K S
:
⁄⁄S T
false
⁄⁄U Z
)
⁄⁄Z [
}
€€ 
,
€€ 
constraints
‹‹ 
:
‹‹ 
table
‹‹ "
=>
‹‹# %
{
›› 
table
ﬁﬁ 
.
ﬁﬁ 

PrimaryKey
ﬁﬁ $
(
ﬁﬁ$ %
$str
ﬁﬁ% =
,
ﬁﬁ= >
x
ﬁﬁ? @
=>
ﬁﬁA C
x
ﬁﬁD E
.
ﬁﬁE F
Id
ﬁﬁF H
)
ﬁﬁH I
;
ﬁﬁI J
table
ﬂﬂ 
.
ﬂﬂ 

ForeignKey
ﬂﬂ $
(
ﬂﬂ$ %
name
‡‡ 
:
‡‡ 
$str
‡‡ U
,
‡‡U V
column
·· 
:
·· 
x
··  !
=>
··" $
x
··% &
.
··& '
CourseVersionId
··' 6
,
··6 7
principalTable
‚‚ &
:
‚‚& '
$str
‚‚( 8
,
‚‚8 9
principalColumn
„„ '
:
„„' (
$str
„„) -
)
„„- .
;
„„. /
}
‰‰ 
)
‰‰ 
;
‰‰ 
migrationBuilder
ÊÊ 
.
ÊÊ 
CreateTable
ÊÊ (
(
ÊÊ( )
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ ,
,
ÁÁ, -
columns
ËË 
:
ËË 
table
ËË 
=>
ËË !
new
ËË" %
{
ÈÈ 
Id
ÍÍ 
=
ÍÍ 
table
ÍÍ 
.
ÍÍ 
Column
ÍÍ %
<
ÍÍ% &
Guid
ÍÍ& *
>
ÍÍ* +
(
ÍÍ+ ,
type
ÍÍ, 0
:
ÍÍ0 1
$str
ÍÍ2 D
,
ÍÍD E
nullable
ÍÍF N
:
ÍÍN O
false
ÍÍP U
)
ÍÍU V
,
ÍÍV W
StudentCourseId
ÎÎ #
=
ÎÎ$ %
table
ÎÎ& +
.
ÎÎ+ ,
Column
ÎÎ, 2
<
ÎÎ2 3
Guid
ÎÎ3 7
>
ÎÎ7 8
(
ÎÎ8 9
type
ÎÎ9 =
:
ÎÎ= >
$str
ÎÎ? Q
,
ÎÎQ R
nullable
ÎÎS [
:
ÎÎ[ \
true
ÎÎ] a
)
ÎÎa b
,
ÎÎb c
Status
ÏÏ 
=
ÏÏ 
table
ÏÏ "
.
ÏÏ" #
Column
ÏÏ# )
<
ÏÏ) *
int
ÏÏ* -
>
ÏÏ- .
(
ÏÏ. /
type
ÏÏ/ 3
:
ÏÏ3 4
$str
ÏÏ5 :
,
ÏÏ: ;
nullable
ÏÏ< D
:
ÏÏD E
false
ÏÏF K
)
ÏÏK L
,
ÏÏL M
CreatedTime
ÌÌ 
=
ÌÌ  !
table
ÌÌ" '
.
ÌÌ' (
Column
ÌÌ( .
<
ÌÌ. /
DateTime
ÌÌ/ 7
>
ÌÌ7 8
(
ÌÌ8 9
type
ÌÌ9 =
:
ÌÌ= >
$str
ÌÌ? J
,
ÌÌJ K
nullable
ÌÌL T
:
ÌÌT U
false
ÌÌV [
)
ÌÌ[ \
,
ÌÌ\ ]
	CreatedBy
ÓÓ 
=
ÓÓ 
table
ÓÓ  %
.
ÓÓ% &
Column
ÓÓ& ,
<
ÓÓ, -
string
ÓÓ- 3
>
ÓÓ3 4
(
ÓÓ4 5
type
ÓÓ5 9
:
ÓÓ9 :
$str
ÓÓ; J
,
ÓÓJ K
nullable
ÓÓL T
:
ÓÓT U
true
ÓÓV Z
)
ÓÓZ [
}
ÔÔ 
,
ÔÔ 
constraints
 
:
 
table
 "
=>
# %
{
ÒÒ 
table
ÚÚ 
.
ÚÚ 

PrimaryKey
ÚÚ $
(
ÚÚ$ %
$str
ÚÚ% >
,
ÚÚ> ?
x
ÚÚ@ A
=>
ÚÚB D
x
ÚÚE F
.
ÚÚF G
Id
ÚÚG I
)
ÚÚI J
;
ÚÚJ K
table
ÛÛ 
.
ÛÛ 

ForeignKey
ÛÛ $
(
ÛÛ$ %
name
ÙÙ 
:
ÙÙ 
$str
ÙÙ V
,
ÙÙV W
column
ıı 
:
ıı 
x
ıı  !
=>
ıı" $
x
ıı% &
.
ıı& '
StudentCourseId
ıı' 6
,
ıı6 7
principalTable
ˆˆ &
:
ˆˆ& '
$str
ˆˆ( 8
,
ˆˆ8 9
principalColumn
˜˜ '
:
˜˜' (
$str
˜˜) -
)
˜˜- .
;
˜˜. /
}
¯¯ 
)
¯¯ 
;
¯¯ 
migrationBuilder
˙˙ 
.
˙˙ 
CreateTable
˙˙ (
(
˙˙( )
name
˚˚ 
:
˚˚ 
$str
˚˚ .
,
˚˚. /
columns
¸¸ 
:
¸¸ 
table
¸¸ 
=>
¸¸ !
new
¸¸" %
{
˝˝ 
Id
˛˛ 
=
˛˛ 
table
˛˛ 
.
˛˛ 
Column
˛˛ %
<
˛˛% &
Guid
˛˛& *
>
˛˛* +
(
˛˛+ ,
type
˛˛, 0
:
˛˛0 1
$str
˛˛2 D
,
˛˛D E
nullable
˛˛F N
:
˛˛N O
false
˛˛P U
)
˛˛U V
,
˛˛V W$
CourseSectionVersionId
ˇˇ *
=
ˇˇ+ ,
table
ˇˇ- 2
.
ˇˇ2 3
Column
ˇˇ3 9
<
ˇˇ9 :
Guid
ˇˇ: >
>
ˇˇ> ?
(
ˇˇ? @
type
ˇˇ@ D
:
ˇˇD E
$str
ˇˇF X
,
ˇˇX Y
nullable
ˇˇZ b
:
ˇˇb c
true
ˇˇd h
)
ˇˇh i
,
ˇˇi j
Name
ÄÄ 
=
ÄÄ 
table
ÄÄ  
.
ÄÄ  !
Column
ÄÄ! '
<
ÄÄ' (
string
ÄÄ( .
>
ÄÄ. /
(
ÄÄ/ 0
type
ÄÄ0 4
:
ÄÄ4 5
$str
ÄÄ6 E
,
ÄÄE F
nullable
ÄÄG O
:
ÄÄO P
true
ÄÄQ U
)
ÄÄU V
,
ÄÄV W
VideoUrl
ÅÅ 
=
ÅÅ 
table
ÅÅ $
.
ÅÅ$ %
Column
ÅÅ% +
<
ÅÅ+ ,
string
ÅÅ, 2
>
ÅÅ2 3
(
ÅÅ3 4
type
ÅÅ4 8
:
ÅÅ8 9
$str
ÅÅ: I
,
ÅÅI J
nullable
ÅÅK S
:
ÅÅS T
true
ÅÅU Y
)
ÅÅY Z
,
ÅÅZ [
SlideUrl
ÇÇ 
=
ÇÇ 
table
ÇÇ $
.
ÇÇ$ %
Column
ÇÇ% +
<
ÇÇ+ ,
string
ÇÇ, 2
>
ÇÇ2 3
(
ÇÇ3 4
type
ÇÇ4 8
:
ÇÇ8 9
$str
ÇÇ: I
,
ÇÇI J
nullable
ÇÇK S
:
ÇÇS T
true
ÇÇU Y
)
ÇÇY Z
,
ÇÇZ [
DocsUrl
ÉÉ 
=
ÉÉ 
table
ÉÉ #
.
ÉÉ# $
Column
ÉÉ$ *
<
ÉÉ* +
string
ÉÉ+ 1
>
ÉÉ1 2
(
ÉÉ2 3
type
ÉÉ3 7
:
ÉÉ7 8
$str
ÉÉ9 H
,
ÉÉH I
nullable
ÉÉJ R
:
ÉÉR S
true
ÉÉT X
)
ÉÉX Y
,
ÉÉY Z
CurrentStatus
ÑÑ !
=
ÑÑ" #
table
ÑÑ$ )
.
ÑÑ) *
Column
ÑÑ* 0
<
ÑÑ0 1
int
ÑÑ1 4
>
ÑÑ4 5
(
ÑÑ5 6
type
ÑÑ6 :
:
ÑÑ: ;
$str
ÑÑ< A
,
ÑÑA B
nullable
ÑÑC K
:
ÑÑK L
true
ÑÑM Q
)
ÑÑQ R
,
ÑÑR S
Type
ÖÖ 
=
ÖÖ 
table
ÖÖ  
.
ÖÖ  !
Column
ÖÖ! '
<
ÖÖ' (
int
ÖÖ( +
>
ÖÖ+ ,
(
ÖÖ, -
type
ÖÖ- 1
:
ÖÖ1 2
$str
ÖÖ3 8
,
ÖÖ8 9
nullable
ÖÖ: B
:
ÖÖB C
true
ÖÖD H
)
ÖÖH I
}
ÜÜ 
,
ÜÜ 
constraints
áá 
:
áá 
table
áá "
=>
áá# %
{
àà 
table
ââ 
.
ââ 

PrimaryKey
ââ $
(
ââ$ %
$str
ââ% @
,
ââ@ A
x
ââB C
=>
ââD F
x
ââG H
.
ââH I
Id
ââI K
)
ââK L
;
ââL M
table
ää 
.
ää 

ForeignKey
ää $
(
ää$ %
name
ãã 
:
ãã 
$str
ãã f
,
ããf g
column
åå 
:
åå 
x
åå  !
=>
åå" $
x
åå% &
.
åå& '$
CourseSectionVersionId
åå' =
,
åå= >
principalTable
çç &
:
çç& '
$str
çç( ?
,
çç? @
principalColumn
éé '
:
éé' (
$str
éé) -
)
éé- .
;
éé. /
}
èè 
)
èè 
;
èè 
migrationBuilder
ëë 
.
ëë 

InsertData
ëë '
(
ëë' (
table
íí 
:
íí 
$str
íí $
,
íí$ %
columns
ìì 
:
ìì 
new
ìì 
[
ìì 
]
ìì 
{
ìì  
$str
ìì! %
,
ìì% &
$str
ìì' 9
,
ìì9 :
$str
ìì; A
,
ììA B
$str
ììC S
}
ììT U
,
ììU V
values
îî 
:
îî 
new
îî 
object
îî "
[
îî" #
,
îî# $
]
îî$ %
{
ïï 
{
ññ 
$str
ññ <
,
ññ< =
$str
ññ> J
,
ññJ K
$str
ññL X
,
ññX Y
$str
ññZ f
}
ññg h
,
ññh i
{
óó 
$str
óó <
,
óó< =
$str
óó> G
,
óóG H
$str
óóI R
,
óóR S
$str
óóT ]
}
óó^ _
,
óó_ `
{
òò 
$str
òò <
,
òò< =
$str
òò> E
,
òòE F
$str
òòG N
,
òòN O
$str
òòP W
}
òòX Y
}
ôô 
)
ôô 
;
ôô 
migrationBuilder
õõ 
.
õõ 

InsertData
õõ '
(
õõ' (
table
úú 
:
úú 
$str
úú $
,
úú$ %
columns
ùù 
:
ùù 
new
ùù 
[
ùù 
]
ùù 
{
ùù  
$str
ùù! %
,
ùù% &
$str
ùù' :
,
ùù: ;
$str
ùù< E
,
ùùE F
$str
ùùG R
,
ùùR S
$str
ùùT _
,
ùù_ `
$str
ùùa s
,
ùùs t
$str
ùùu ~
,
ùù~ 
$strùùÄ å
,ùùå ç
$strùùé ï
,ùùï ñ
$strùùó ß
,ùùß ®
$strùù© ≥
,ùù≥ ¥
$strùùµ Ω
,ùùΩ æ
$strùùø œ
,ùùœ –
$strùù— ›
,ùù› ﬁ
$strùùﬂ 
,ùù Ò
$strùùÚ Ü
,ùùÜ á
$strùùà ñ
,ùùñ ó
$strùùò •
,ùù• ¶
$strùùß Ω
,ùùΩ æ
$strùùø Œ
,ùùŒ œ
$strùù– €
,ùù€ ‹
$strùù› Ô
,ùùÔ 
$strùùÒ ˝
,ùù˝ ˛
$strùùˇ â
}ùùä ã
,ùùã å
values
ûû 
:
ûû 
new
ûû 
object
ûû "
[
ûû" #
]
ûû# $
{
ûû% &
$str
ûû' 8
,
ûû8 9
$num
ûû: ;
,
ûû; <
$str
ûû= K
,
ûûK L
$str
ûûM m
,
ûûm n
new
ûûo r
DateTime
ûûs {
(
ûû{ |
$numûû| Ä
,ûûÄ Å
$numûûÇ É
,ûûÉ Ñ
$numûûÖ Ü
,ûûÜ á
$numûûà â
,ûûâ ä
$numûûã å
,ûûå ç
$numûûé è
,ûûè ê
$numûûë í
,ûûí ì
DateTimeKindûûî †
.ûû† °
Unspecifiedûû° ¨
)ûû¨ ≠
,ûû≠ Æ
$strûûØ ’
,ûû’ ÷
$strûû◊ ‡
,ûû‡ ·
newûû‚ Â
DateTimeûûÊ Ó
(ûûÓ Ô
$numûûÔ Û
,ûûÛ Ù
$numûûı ˆ
,ûûˆ ˜
$numûû¯ ˙
,ûû˙ ˚
$numûû¸ ˝
,ûû˝ ˛
$numûûˇ Å
,ûûÅ Ç
$numûûÉ Ö
,ûûÖ Ü
$numûûá â
,ûûâ ä
DateTimeKindûûã ó
.ûûó ò
Utcûûò õ
)ûûõ ú
.ûûú ù
AddTicksûûù •
(ûû• ¶
$numûû¶ ™
)ûû™ ´
,ûû´ ¨
$strûû≠ æ
,ûûæ ø
trueûû¿ ƒ
,ûûƒ ≈
$strûû∆ “
,ûû“ ”
$strûû‘ ⁄
,ûû⁄ €
trueûû‹ ‡
,ûû‡ ·
nullûû‚ Ê
,ûûÊ Á
$strûûË ˘
,ûû˘ ˙
$strûû˚ å
,ûûå ç
$strûûé ‰
,ûû‰ Â
$strûûÊ Ú
,ûûÚ Û
trueûûÙ ¯
,ûû¯ ˘
$strûû˙ †
,ûû† °
$strûû¢ ≠
,ûû≠ Æ
falseûûØ ¥
,ûû¥ µ
newûû∂ π
DateTimeûû∫ ¬
(ûû¬ √
$numûû√ «
,ûû« »
$numûû…  
,ûû  À
$numûûÃ Œ
,ûûŒ œ
$numûû– —
,ûû— “
$numûû” ‘
,ûû‘ ’
$numûû÷ ◊
,ûû◊ ÿ
$numûûŸ ⁄
,ûû⁄ €
DateTimeKindûû‹ Ë
.ûûË È
UnspecifiedûûÈ Ù
)ûûÙ ı
,ûûı ˆ
$strûû˜ à
}ûûâ ä
)ûûä ã
;ûûã å
migrationBuilder
†† 
.
†† 

InsertData
†† '
(
††' (
table
°° 
:
°° 
$str
°° '
,
°°' (
columns
¢¢ 
:
¢¢ 
new
¢¢ 
[
¢¢ 
]
¢¢ 
{
¢¢  
$str
¢¢! %
,
¢¢% &
$str
¢¢' 4
,
¢¢4 5
$str
¢¢6 D
,
¢¢D E
$str
¢¢F P
,
¢¢P Q
$str
¢¢R ]
,
¢¢] ^
$str
¢¢_ l
,
¢¢l m
$str
¢¢n }
,
¢¢} ~
$str¢¢ â
,¢¢â ä
$str¢¢ã †
,¢¢† °
$str¢¢¢ ±
,¢¢± ≤
$str¢¢≥ ¬
,¢¢¬ √
$str¢¢ƒ —
,¢¢— “
$str¢¢” ﬂ
,¢¢ﬂ ‡
$str¢¢· È
,¢¢È Í
$str¢¢Î ¯
,¢¢¯ ˘
$str¢¢˙ à
,¢¢à â
$str¢¢ä ï
,¢¢ï ñ
$str¢¢ó §
}¢¢• ¶
,¢¢¶ ß
values
££ 
:
££ 
new
££ 
object
££ "
[
££" #
,
££# $
]
££$ %
{
§§ 
{
•• 
new
•• 
Guid
•• 
(
•• 
$str
•• E
)
••E F
,
••F G
$str••H æ
,••æ ø
$str••¿ û
,••û ü
$str••† ™
,••™ ´
null••¨ ∞
,••∞ ±
null••≤ ∂
,••∂ ∑
$str••∏ ¸
,••¸ ˝
$str••˛ á
,••á à
$str••â Æ
,••Æ Ø
$str••∞ ÷
,••÷ ◊
$str••ÿ ‚
,••‚ „
$str••‰ Ä
,••Ä Å
$str••Ç è
,••è ê
$num••ë í
,••í ì
$str••î ©
,••© ™
$str••´ ¿
,••¿ ¡
null••¬ ∆
,••∆ «
null••» Ã
}••Õ Œ
,••Œ œ
{
¶¶ 
new
¶¶ 
Guid
¶¶ 
(
¶¶ 
$str
¶¶ E
)
¶¶E F
,
¶¶F G
$str¶¶H ®
,¶¶® ©
$str¶¶™ ÿ
,¶¶ÿ Ÿ
$str¶¶⁄ ‰
,¶¶‰ Â
null¶¶Ê Í
,¶¶Í Î
null¶¶Ï 
,¶¶ Ò
$str¶¶Ú £
,¶¶£ §
$str¶¶• Æ
,¶¶Æ Ø
$str¶¶∞  
,¶¶  À
$str¶¶Ã Û
,¶¶Û Ù
$str¶¶ı ˇ
,¶¶ˇ Ä
$str¶¶Å ù
,¶¶ù û
$str¶¶ü ¨
,¶¶¨ ≠
$num¶¶Æ Ø
,¶¶Ø ∞
$str¶¶± ∆
,¶¶∆ «
$str¶¶» ÿ
,¶¶ÿ Ÿ
null¶¶⁄ ﬁ
,¶¶ﬁ ﬂ
null¶¶‡ ‰
}¶¶Â Ê
,¶¶Ê Á
{
ßß 
new
ßß 
Guid
ßß 
(
ßß 
$str
ßß E
)
ßßE F
,
ßßF G
$strßßH ∞
,ßß∞ ±
$strßß≤ ‚
,ßß‚ „
$strßß‰ Ì
,ßßÌ Ó
nullßßÔ Û
,ßßÛ Ù
nullßßı ˘
,ßß˘ ˙
$strßß˚ ¨
,ßß¨ ≠
$strßßÆ ∑
,ßß∑ ∏
$strßßπ “
,ßß“ ”
$strßß‘ Ô
,ßßÔ 
$strßßÒ ˚
,ßß˚ ¸
$strßß˝ ô
,ßßô ö
$strßßõ ®
,ßß® ©
$numßß™ ´
,ßß´ ¨
$strßß≠ ¡
,ßß¡ ¬
$strßß√ —
,ßß— “
nullßß” ◊
,ßß◊ ÿ
nullßßŸ ›
}ßßﬁ ﬂ
,ßßﬂ ‡
{
®® 
new
®® 
Guid
®® 
(
®® 
$str
®® E
)
®®E F
,
®®F G
$str®®H ë
,®®ë í
$str®®ì √
,®®√ ƒ
$str®®≈ ◊
,®®◊ ÿ
null®®Ÿ ›
,®®› ﬁ
null®®ﬂ „
,®®„ ‰
$str®®Â ñ
,®®ñ ó
$str®®ò °
,®®° ¢
$str®®£ º
,®®º Ω
$str®®æ ‹
,®®‹ ›
$str®®ﬁ Â
,®®Â Ê
$str®®Á É
,®®É Ñ
$str®®Ö í
,®®í ì
$num®®î ï
,®®ï ñ
$str®®ó µ
,®®µ ∂
$str®®∑ €
,®®€ ‹
null®®› ·
,®®· ‚
null®®„ Á
}®®Ë È
,®®È Í
{
©© 
new
©© 
Guid
©© 
(
©© 
$str
©© E
)
©©E F
,
©©F G
$str©©H û
,©©û ü
$str©©† ≈
,©©≈ ∆
$str©©« œ
,©©œ –
null©©— ’
,©©’ ÷
null©©◊ €
,©©€ ‹
$str©©› é
,©©é è
$str©©ê ô
,©©ô ö
$str©©õ µ
,©©µ ∂
$str©©∑ œ
,©©œ –
$str©©— €
,©©€ ‹
$str©©› ˘
,©©˘ ˙
$str©©˚ à
,©©à â
$num©©ä ã
,©©ã å
$str©©ç ¢
,©©¢ £
$str©©§ µ
,©©µ ∂
null©©∑ ª
,©©ª º
null©©Ω ¡
}©©¬ √
,©©√ ƒ
{
™™ 
new
™™ 
Guid
™™ 
(
™™ 
$str
™™ E
)
™™E F
,
™™F G
$str™™H è
,™™è ê
$str™™ë ∫
,™™∫ ª
$str™™º  
,™™  À
null™™Ã –
,™™– —
null™™“ ÷
,™™÷ ◊
$str™™ÿ â
,™™â ä
$str™™ã î
,™™î ï
$str™™ñ ¢
,™™¢ £
$str™™§ ¥
,™™¥ µ
$str™™∂ ¿
,™™¿ ¡
$str™™¬ ÿ
,™™ÿ Ÿ
$str™™⁄ Ê
,™™Ê Á
$num™™Ë È
,™™È Í
$str™™Î ¸
,™™¸ ˝
$str™™˛ ì
,™™ì î
null™™ï ô
,™™ô ö
null™™õ ü
}™™† °
,™™° ¢
{
´´ 
new
´´ 
Guid
´´ 
(
´´ 
$str
´´ E
)
´´E F
,
´´F G
$str´´H è
,´´è ê
$str´´ë ¡
,´´¡ ¬
$str´´√ ⁄
,´´⁄ €
null´´‹ ‡
,´´‡ ·
null´´‚ Ê
,´´Ê Á
$str´´Ë ô
,´´ô ö
$str´´õ §
,´´§ •
$str´´¶ ø
,´´ø ¿
$str´´¡ „
,´´„ ‰
$str´´Â Ò
,´´Ò Ú
$str´´Û è
,´´è ê
$str´´ë û
,´´û ü
$num´´† °
,´´° ¢
$str´´£ √
,´´√ ƒ
$str´´≈ ﬁ
,´´ﬁ ﬂ
null´´‡ ‰
,´´‰ Â
null´´Ê Í
}´´Î Ï
,´´Ï Ì
{
¨¨ 
new
¨¨ 
Guid
¨¨ 
(
¨¨ 
$str
¨¨ E
)
¨¨E F
,
¨¨F G
$str¨¨H è
,¨¨è ê
$str¨¨ë ¡
,¨¨¡ ¬
$str¨¨√ ⁄
,¨¨⁄ €
null¨¨‹ ‡
,¨¨‡ ·
null¨¨‚ Ê
,¨¨Ê Á
$str¨¨Ë ô
,¨¨ô ö
$str¨¨õ §
,¨¨§ •
$str¨¨¶ ø
,¨¨ø ¿
$str¨¨¡ Á
,¨¨Á Ë
$str¨¨È ı
,¨¨ı ˆ
$str¨¨˜ ì
,¨¨ì î
$str¨¨ï ¢
,¨¨¢ £
$num¨¨§ •
,¨¨• ¶
$str¨¨ß «
,¨¨« »
$str¨¨… ·
,¨¨· ‚
null¨¨„ Á
,¨¨Á Ë
null¨¨È Ì
}¨¨Ó Ô
,¨¨Ô 
{
≠≠ 
new
≠≠ 
Guid
≠≠ 
(
≠≠ 
$str
≠≠ E
)
≠≠E F
,
≠≠F G
$str
≠≠H s
,
≠≠s t
$str≠≠u ô
,≠≠ô ö
$str≠≠õ •
,≠≠• ¶
null≠≠ß ´
,≠≠´ ¨
null≠≠≠ ±
,≠≠± ≤
$str≠≠≥ ˘
,≠≠˘ ˙
$str≠≠˚ Ñ
,≠≠Ñ Ö
$str≠≠Ü ü
,≠≠ü †
$str≠≠° Œ
,≠≠Œ œ
$str≠≠– ‹
,≠≠‹ ›
$str≠≠ﬁ ˙
,≠≠˙ ˚
$str≠≠¸ â
,≠≠â ä
$num≠≠ã å
,≠≠å ç
$str≠≠é ª
,≠≠ª º
$str≠≠Ω ›
,≠≠› ﬁ
null≠≠ﬂ „
,≠≠„ ‰
null≠≠Â È
}≠≠Í Î
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
migrationBuilder
∞∞ 
.
∞∞ 

InsertData
∞∞ '
(
∞∞' (
table
±± 
:
±± 
$str
±± (
,
±±( )
columns
≤≤ 
:
≤≤ 
new
≤≤ 
[
≤≤ 
]
≤≤ 
{
≤≤  
$str
≤≤! )
,
≤≤) *
$str
≤≤+ 3
}
≤≤4 5
,
≤≤5 6
values
≥≥ 
:
≥≥ 
new
≥≥ 
object
≥≥ "
[
≥≥" #
]
≥≥# $
{
≥≥% &
$str
≥≥' M
,
≥≥M N
$str
≥≥O `
}
≥≥a b
)
≥≥b c
;
≥≥c d
migrationBuilder
µµ 
.
µµ 
CreateIndex
µµ (
(
µµ( )
name
∂∂ 
:
∂∂ 
$str
∂∂ 2
,
∂∂2 3
table
∑∑ 
:
∑∑ 
$str
∑∑ )
,
∑∑) *
column
∏∏ 
:
∏∏ 
$str
∏∏  
)
∏∏  !
;
∏∏! "
migrationBuilder
∫∫ 
.
∫∫ 
CreateIndex
∫∫ (
(
∫∫( )
name
ªª 
:
ªª 
$str
ªª %
,
ªª% &
table
ºº 
:
ºº 
$str
ºº $
,
ºº$ %
column
ΩΩ 
:
ΩΩ 
$str
ΩΩ (
,
ΩΩ( )
unique
ææ 
:
ææ 
true
ææ 
,
ææ 
filter
øø 
:
øø 
$str
øø 6
)
øø6 7
;
øø7 8
migrationBuilder
¡¡ 
.
¡¡ 
CreateIndex
¡¡ (
(
¡¡( )
name
¬¬ 
:
¬¬ 
$str
¬¬ 2
,
¬¬2 3
table
√√ 
:
√√ 
$str
√√ )
,
√√) *
column
ƒƒ 
:
ƒƒ 
$str
ƒƒ  
)
ƒƒ  !
;
ƒƒ! "
migrationBuilder
∆∆ 
.
∆∆ 
CreateIndex
∆∆ (
(
∆∆( )
name
«« 
:
«« 
$str
«« 2
,
««2 3
table
»» 
:
»» 
$str
»» )
,
»») *
column
…… 
:
…… 
$str
……  
)
……  !
;
……! "
migrationBuilder
ÀÀ 
.
ÀÀ 
CreateIndex
ÀÀ (
(
ÀÀ( )
name
ÃÃ 
:
ÃÃ 
$str
ÃÃ 1
,
ÃÃ1 2
table
ÕÕ 
:
ÕÕ 
$str
ÕÕ (
,
ÕÕ( )
column
ŒŒ 
:
ŒŒ 
$str
ŒŒ  
)
ŒŒ  !
;
ŒŒ! "
migrationBuilder
–– 
.
–– 
CreateIndex
–– (
(
––( )
name
—— 
:
—— 
$str
—— "
,
——" #
table
““ 
:
““ 
$str
““ $
,
““$ %
column
”” 
:
”” 
$str
”” )
)
””) *
;
””* +
migrationBuilder
’’ 
.
’’ 
CreateIndex
’’ (
(
’’( )
name
÷÷ 
:
÷÷ 
$str
÷÷ %
,
÷÷% &
table
◊◊ 
:
◊◊ 
$str
◊◊ $
,
◊◊$ %
column
ÿÿ 
:
ÿÿ 
$str
ÿÿ ,
,
ÿÿ, -
unique
ŸŸ 
:
ŸŸ 
true
ŸŸ 
,
ŸŸ 
filter
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ :
)
⁄⁄: ;
;
⁄⁄; <
migrationBuilder
‹‹ 
.
‹‹ 
CreateIndex
‹‹ (
(
‹‹( )
name
›› 
:
›› 
$str
›› 3
,
››3 4
table
ﬁﬁ 
:
ﬁﬁ 
$str
ﬁﬁ $
,
ﬁﬁ$ %
column
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ &
)
ﬂﬂ& '
;
ﬂﬂ' (
migrationBuilder
·· 
.
·· 
CreateIndex
·· (
(
··( )
name
‚‚ 
:
‚‚ 
$str
‚‚ 0
,
‚‚0 1
table
„„ 
:
„„ 
$str
„„ $
,
„„$ %
column
‰‰ 
:
‰‰ 
$str
‰‰ #
)
‰‰# $
;
‰‰$ %
migrationBuilder
ÊÊ 
.
ÊÊ 
CreateIndex
ÊÊ (
(
ÊÊ( )
name
ÁÁ 
:
ÁÁ 
$str
ÁÁ .
,
ÁÁ. /
table
ËË 
:
ËË 
$str
ËË #
,
ËË# $
column
ÈÈ 
:
ÈÈ 
$str
ÈÈ "
)
ÈÈ" #
;
ÈÈ# $
migrationBuilder
ÎÎ 
.
ÎÎ 
CreateIndex
ÎÎ (
(
ÎÎ( )
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ 1
,
ÏÏ1 2
table
ÌÌ 
:
ÌÌ 
$str
ÌÌ &
,
ÌÌ& '
column
ÓÓ 
:
ÓÓ 
$str
ÓÓ "
)
ÓÓ" #
;
ÓÓ# $
migrationBuilder
 
.
 
CreateIndex
 (
(
( )
name
ÒÒ 
:
ÒÒ 
$str
ÒÒ 1
,
ÒÒ1 2
table
ÚÚ 
:
ÚÚ 
$str
ÚÚ &
,
ÚÚ& '
column
ÛÛ 
:
ÛÛ 
$str
ÛÛ "
)
ÛÛ" #
;
ÛÛ# $
migrationBuilder
ıı 
.
ıı 
CreateIndex
ıı (
(
ıı( )
name
ˆˆ 
:
ˆˆ 
$str
ˆˆ /
,
ˆˆ/ 0
table
˜˜ 
:
˜˜ 
$str
˜˜  
,
˜˜  !
column
¯¯ 
:
¯¯ 
$str
¯¯ &
)
¯¯& '
;
¯¯' (
migrationBuilder
˙˙ 
.
˙˙ 
CreateIndex
˙˙ (
(
˙˙( )
name
˚˚ 
:
˚˚ 
$str
˚˚ @
,
˚˚@ A
table
¸¸ 
:
¸¸ 
$str
¸¸ .
,
¸¸. /
column
˝˝ 
:
˝˝ 
$str
˝˝ )
)
˝˝) *
;
˝˝* +
migrationBuilder
ˇˇ 
.
ˇˇ 
CreateIndex
ˇˇ (
(
ˇˇ( )
name
ÄÄ 
:
ÄÄ 
$str
ÄÄ @
,
ÄÄ@ A
table
ÅÅ 
:
ÅÅ 
$str
ÅÅ .
,
ÅÅ. /
column
ÇÇ 
:
ÇÇ 
$str
ÇÇ )
)
ÇÇ) *
;
ÇÇ* +
migrationBuilder
ÑÑ 
.
ÑÑ 
CreateIndex
ÑÑ (
(
ÑÑ( )
name
ÖÖ 
:
ÖÖ 
$str
ÖÖ 4
,
ÖÖ4 5
table
ÜÜ 
:
ÜÜ 
$str
ÜÜ '
,
ÜÜ' (
column
áá 
:
áá 
$str
áá $
)
áá$ %
;
áá% &
migrationBuilder
ââ 
.
ââ 
CreateIndex
ââ (
(
ââ( )
name
ää 
:
ää 
$str
ää 2
,
ää2 3
table
ãã 
:
ãã 
$str
ãã '
,
ãã' (
column
åå 
:
åå 
$str
åå "
)
åå" #
;
åå# $
migrationBuilder
éé 
.
éé 
CreateIndex
éé (
(
éé( )
name
èè 
:
èè 
$str
èè 1
,
èè1 2
table
êê 
:
êê 
$str
êê '
,
êê' (
column
ëë 
:
ëë 
$str
ëë !
)
ëë! "
;
ëë" #
migrationBuilder
ìì 
.
ìì 
CreateIndex
ìì (
(
ìì( )
name
îî 
:
îî 
$str
îî >
,
îî> ?
table
ïï 
:
ïï 
$str
ïï ,
,
ïï, -
column
ññ 
:
ññ 
$str
ññ )
)
ññ) *
;
ññ* +
migrationBuilder
òò 
.
òò 
CreateIndex
òò (
(
òò( )
name
ôô 
:
ôô 
$str
ôô :
,
ôô: ;
table
öö 
:
öö 
$str
öö +
,
öö+ ,
column
õõ 
:
õõ 
$str
õõ &
)
õõ& '
;
õõ' (
migrationBuilder
ùù 
.
ùù 
CreateIndex
ùù (
(
ùù( )
name
ûû 
:
ûû 
$str
ûû 9
,
ûû9 :
table
üü 
:
üü 
$str
üü *
,
üü* +
column
†† 
:
†† 
$str
†† &
)
††& '
;
††' (
migrationBuilder
¢¢ 
.
¢¢ 
CreateIndex
¢¢ (
(
¢¢( )
name
££ 
:
££ 
$str
££ -
,
££- .
table
§§ 
:
§§ 
$str
§§ $
,
§§$ %
column
•• 
:
•• 
$str
••  
)
••  !
;
••! "
migrationBuilder
ßß 
.
ßß 
CreateIndex
ßß (
(
ßß( )
name
®® 
:
®® 
$str
®® 5
,
®®5 6
table
©© 
:
©© 
$str
©© %
,
©©% &
column
™™ 
:
™™ 
$str
™™ '
)
™™' (
;
™™( )
migrationBuilder
¨¨ 
.
¨¨ 
CreateIndex
¨¨ (
(
¨¨( )
name
≠≠ 
:
≠≠ 
$str
≠≠ 1
,
≠≠1 2
table
ÆÆ 
:
ÆÆ 
$str
ÆÆ %
,
ÆÆ% &
column
ØØ 
:
ØØ 
$str
ØØ #
)
ØØ# $
;
ØØ$ %
migrationBuilder
±± 
.
±± 
CreateIndex
±± (
(
±±( )
name
≤≤ 
:
≤≤ 
$str
≤≤ 5
,
≤≤5 6
table
≥≥ 
:
≥≥ 
$str
≥≥ %
,
≥≥% &
column
¥¥ 
:
¥¥ 
$str
¥¥ '
)
¥¥' (
;
¥¥( )
migrationBuilder
∂∂ 
.
∂∂ 
CreateIndex
∂∂ (
(
∂∂( )
name
∑∑ 
:
∑∑ 
$str
∑∑ .
,
∑∑. /
table
∏∏ 
:
∏∏ 
$str
∏∏ %
,
∏∏% &
column
ππ 
:
ππ 
$str
ππ  
)
ππ  !
;
ππ! "
migrationBuilder
ªª 
.
ªª 
CreateIndex
ªª (
(
ªª( )
name
ºº 
:
ºº 
$str
ºº H
,
ººH I
table
ΩΩ 
:
ΩΩ 
$str
ΩΩ /
,
ΩΩ/ 0
column
ææ 
:
ææ 
$str
ææ 0
)
ææ0 1
;
ææ1 2
migrationBuilder
¿¿ 
.
¿¿ 
CreateIndex
¿¿ (
(
¿¿( )
name
¡¡ 
:
¡¡ 
$str
¡¡ 4
,
¡¡4 5
table
¬¬ 
:
¬¬ 
$str
¬¬ (
,
¬¬( )
column
√√ 
:
√√ 
$str
√√ #
)
√√# $
;
√√$ %
migrationBuilder
≈≈ 
.
≈≈ 
CreateIndex
≈≈ (
(
≈≈( )
name
∆∆ 
:
∆∆ 
$str
∆∆ 2
,
∆∆2 3
table
«« 
:
«« 
$str
«« '
,
««' (
column
»» 
:
»» 
$str
»» "
)
»»" #
;
»»# $
migrationBuilder
   
.
   
CreateIndex
   (
(
  ( )
name
ÀÀ 
:
ÀÀ 
$str
ÀÀ 3
,
ÀÀ3 4
table
ÃÃ 
:
ÃÃ 
$str
ÃÃ '
,
ÃÃ' (
column
ÕÕ 
:
ÕÕ 
$str
ÕÕ #
)
ÕÕ# $
;
ÕÕ$ %
migrationBuilder
œœ 
.
œœ 
CreateIndex
œœ (
(
œœ( )
name
–– 
:
–– 
$str
–– ?
,
––? @
table
—— 
:
—— 
$str
—— -
,
——- .
column
““ 
:
““ 
$str
““ )
)
““) *
;
““* +
migrationBuilder
‘‘ 
.
‘‘ 
CreateIndex
‘‘ (
(
‘‘( )
name
’’ 
:
’’ 
$str
’’ *
,
’’* +
table
÷÷ 
:
÷÷ 
$str
÷÷ !
,
÷÷! "
column
◊◊ 
:
◊◊ 
$str
◊◊  
)
◊◊  !
;
◊◊! "
migrationBuilder
ŸŸ 
.
ŸŸ 
CreateIndex
ŸŸ (
(
ŸŸ( )
name
⁄⁄ 
:
⁄⁄ 
$str
⁄⁄ .
,
⁄⁄. /
table
€€ 
:
€€ 
$str
€€ %
,
€€% &
column
‹‹ 
:
‹‹ 
$str
‹‹  
)
‹‹  !
;
‹‹! "
}
›› 	
	protected
‡‡ 
override
‡‡ 
void
‡‡ 
Down
‡‡  $
(
‡‡$ %
MigrationBuilder
‡‡% 5
migrationBuilder
‡‡6 F
)
‡‡F G
{
·· 	
migrationBuilder
‚‚ 
.
‚‚ 
	DropTable
‚‚ &
(
‚‚& '
name
„„ 
:
„„ 
$str
„„ (
)
„„( )
;
„„) *
migrationBuilder
ÂÂ 
.
ÂÂ 
	DropTable
ÂÂ &
(
ÂÂ& '
name
ÊÊ 
:
ÊÊ 
$str
ÊÊ (
)
ÊÊ( )
;
ÊÊ) *
migrationBuilder
ËË 
.
ËË 
	DropTable
ËË &
(
ËË& '
name
ÈÈ 
:
ÈÈ 
$str
ÈÈ (
)
ÈÈ( )
;
ÈÈ) *
migrationBuilder
ÎÎ 
.
ÎÎ 
	DropTable
ÎÎ &
(
ÎÎ& '
name
ÏÏ 
:
ÏÏ 
$str
ÏÏ '
)
ÏÏ' (
;
ÏÏ( )
migrationBuilder
ÓÓ 
.
ÓÓ 
	DropTable
ÓÓ &
(
ÓÓ& '
name
ÔÔ 
:
ÔÔ 
$str
ÔÔ (
)
ÔÔ( )
;
ÔÔ) *
migrationBuilder
ÒÒ 
.
ÒÒ 
	DropTable
ÒÒ &
(
ÒÒ& '
name
ÚÚ 
:
ÚÚ 
$str
ÚÚ  
)
ÚÚ  !
;
ÚÚ! "
migrationBuilder
ÙÙ 
.
ÙÙ 
	DropTable
ÙÙ &
(
ÙÙ& '
name
ıı 
:
ıı 
$str
ıı #
)
ıı# $
;
ıı$ %
migrationBuilder
˜˜ 
.
˜˜ 
	DropTable
˜˜ &
(
˜˜& '
name
¯¯ 
:
¯¯ 
$str
¯¯ %
)
¯¯% &
;
¯¯& '
migrationBuilder
˙˙ 
.
˙˙ 
	DropTable
˙˙ &
(
˙˙& '
name
˚˚ 
:
˚˚ 
$str
˚˚ %
)
˚˚% &
;
˚˚& '
migrationBuilder
˝˝ 
.
˝˝ 
	DropTable
˝˝ &
(
˝˝& '
name
˛˛ 
:
˛˛ 
$str
˛˛ -
)
˛˛- .
;
˛˛. /
migrationBuilder
ÄÄ 
.
ÄÄ 
	DropTable
ÄÄ &
(
ÄÄ& '
name
ÅÅ 
:
ÅÅ 
$str
ÅÅ +
)
ÅÅ+ ,
;
ÅÅ, -
migrationBuilder
ÉÉ 
.
ÉÉ 
	DropTable
ÉÉ &
(
ÉÉ& '
name
ÑÑ 
:
ÑÑ 
$str
ÑÑ &
)
ÑÑ& '
;
ÑÑ' (
migrationBuilder
ÜÜ 
.
ÜÜ 
	DropTable
ÜÜ &
(
ÜÜ& '
name
áá 
:
áá 
$str
áá *
)
áá* +
;
áá+ ,
migrationBuilder
ââ 
.
ââ 
	DropTable
ââ &
(
ââ& '
name
ää 
:
ää 
$str
ää )
)
ää) *
;
ää* +
migrationBuilder
åå 
.
åå 
	DropTable
åå &
(
åå& '
name
çç 
:
çç 
$str
çç $
)
çç$ %
;
çç% &
migrationBuilder
èè 
.
èè 
	DropTable
èè &
(
èè& '
name
êê 
:
êê 
$str
êê $
)
êê$ %
;
êê% &
migrationBuilder
íí 
.
íí 
	DropTable
íí &
(
íí& '
name
ìì 
:
ìì 
$str
ìì $
)
ìì$ %
;
ìì% &
migrationBuilder
ïï 
.
ïï 
	DropTable
ïï &
(
ïï& '
name
ññ 
:
ññ 
$str
ññ .
)
ññ. /
;
ññ/ 0
migrationBuilder
òò 
.
òò 
	DropTable
òò &
(
òò& '
name
ôô 
:
ôô 
$str
ôô '
)
ôô' (
;
ôô( )
migrationBuilder
õõ 
.
õõ 
	DropTable
õõ &
(
õõ& '
name
úú 
:
úú 
$str
úú ,
)
úú, -
;
úú- .
migrationBuilder
ûû 
.
ûû 
	DropTable
ûû &
(
ûû& '
name
üü 
:
üü 
$str
üü $
)
üü$ %
;
üü% &
migrationBuilder
°° 
.
°° 
	DropTable
°° &
(
°°& '
name
¢¢ 
:
¢¢ 
$str
¢¢ #
)
¢¢# $
;
¢¢$ %
migrationBuilder
§§ 
.
§§ 
	DropTable
§§ &
(
§§& '
name
•• 
:
•• 
$str
•• #
)
••# $
;
••$ %
migrationBuilder
ßß 
.
ßß 
	DropTable
ßß &
(
ßß& '
name
®® 
:
®® 
$str
®® $
)
®®$ %
;
®®% &
migrationBuilder
™™ 
.
™™ 
	DropTable
™™ &
(
™™& '
name
´´ 
:
´´ 
$str
´´ -
)
´´- .
;
´´. /
migrationBuilder
≠≠ 
.
≠≠ 
	DropTable
≠≠ &
(
≠≠& '
name
ÆÆ 
:
ÆÆ 
$str
ÆÆ &
)
ÆÆ& '
;
ÆÆ' (
migrationBuilder
∞∞ 
.
∞∞ 
	DropTable
∞∞ &
(
∞∞& '
name
±± 
:
±± 
$str
±± &
)
±±& '
;
±±' (
migrationBuilder
≥≥ 
.
≥≥ 
	DropTable
≥≥ &
(
≥≥& '
name
¥¥ 
:
¥¥ 
$str
¥¥  
)
¥¥  !
;
¥¥! "
migrationBuilder
∂∂ 
.
∂∂ 
	DropTable
∂∂ &
(
∂∂& '
name
∑∑ 
:
∑∑ 
$str
∑∑ "
)
∑∑" #
;
∑∑# $
migrationBuilder
ππ 
.
ππ 
	DropTable
ππ &
(
ππ& '
name
∫∫ 
:
∫∫ 
$str
∫∫ 
)
∫∫  
;
∫∫  !
migrationBuilder
ºº 
.
ºº 
	DropTable
ºº &
(
ºº& '
name
ΩΩ 
:
ΩΩ 
$str
ΩΩ 
)
ΩΩ 
;
ΩΩ  
migrationBuilder
øø 
.
øø 
	DropTable
øø &
(
øø& '
name
¿¿ 
:
¿¿ 
$str
¿¿ #
)
¿¿# $
;
¿¿$ %
migrationBuilder
¬¬ 
.
¬¬ 
	DropTable
¬¬ &
(
¬¬& '
name
√√ 
:
√√ 
$str
√√ #
)
√√# $
;
√√$ %
}
ƒƒ 	
}
≈≈ 
}∆∆ ô
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IUserManagerRepository.cs
	namespace		 	
Cursus		
 
.		 
LMS		 
.		 

DataAccess		 
.		  
IRepository		  +
{

 
public 

	interface "
IUserManagerRepository +
{ 
Task 
< 
ApplicationUser 
> 
FindByEmailAsync .
(. /
string/ 5
email6 ;
); <
;< =
Task 
< 
bool 
> )
CheckIfPhoneNumberExistsAsync 0
(0 1
string1 7
phoneNumber8 C
)C D
;D E
Task 
< 
IdentityResult 
> 
CreateAsync (
(( )
ApplicationUser) 8
user9 =
,= >
string? E
passwordF N
)N O
;O P
Task 
< 
IdentityResult 
> 
AddToRoleAsync +
(+ ,
ApplicationUser, ;
user< @
,@ A
stringB H
roleI M
)M N
;N O
Task 
< 
ApplicationUser 
> 
FindByIdAsync +
(+ ,
string, 2
userId3 9
)9 :
;: ;
Task 
< 
ApplicationUser 
> 
FindByPhoneAsync .
(. /
string/ 5
phoneNumber6 A
)A B
;B C
Task 
< 
List 
< 
ApplicationUser !
>! "
>" #
GetInstructorUser$ 5
(5 6
)6 7
;7 8
Task 
< 
List 
< 
ApplicationUser !
>! "
>" #
GetStudentUser$ 2
(2 3
)3 4
;4 5
Task 
< 
IEnumerable 
< 
ApplicationUser (
>( )
>) *
GetUsersInRoleAsync+ >
(> ?
string? E
roleF J
)J K
;K L
} 
} ﬁ$
kD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IUnitOfWork.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
IUnitOfWork 
{ 
IStudentRepository 
StudentRepository (
{) *
get+ .
;. /
}0 1!
IInstructorRepository  
InstructorRepository .
{/ 0
get1 4
;4 5
}6 7
ICategoryRepository		 
CategoryRepository		 *
{		+ ,
get		- 0
;		0 1
}		2 3$
IEmailTemplateRepository

 #
EmailTemplateRepository

 4
{

5 6
get

7 :
;

: ;
}

< ="
IUserManagerRepository !
UserManagerRepository 0
{1 2
get3 6
;6 7
}8 9(
IInstructorCommentRepository  '
InstructorCommentRepository! <
{= >
get? B
;B C
}D E
ICourseRepository 
CourseRepository &
{' (
get) ,
;, -
}. /'
IInstructorRatingRepository &
InstructorRatingRepository  :
{; <
get= @
;@ A
}B C$
ICourseVersionRepository #
CourseVersionRepository 4
{5 6
get7 :
;: ;
}< =+
ICourseSectionVersionRepository #*
CourseSectionVersionRepository$ B
{C D
getE H
;H I
}J K,
 ISectionDetailsVersionRepository $+
SectionDetailsVersionRepository% D
{E F
getG J
;J K
}L M*
ICourseVersionStatusRepository ")
CourseVersionStatusRepository# @
{A B
getC F
;F G
}H I+
ICourseVersionCommentRepository #*
CourseVersionCommentRepository$ B
{C D
getE H
;H I
}J K$
IStudentCourseRepository #
StudentCourseRepository 4
{5 6
get7 :
;: ;
}< =
ILevelRepository 
LevelRepository $
{% &
get' *
;* +
}, -!
ICartHeaderRepository  
CartHeaderRepository .
{/ 0
get1 4
;4 5
}6 7"
ICartDetailsRepository !
CartDetailsRepository 0
{1 2
get3 6
;6 7
}8 9#
ICourseReviewRepository "
CourseReviewRepository 2
{3 4
get5 8
;8 9
}: ;#
ICourseReportRepository "
CourseReportRepository 2
{3 4
get5 8
;8 9
}: ;"
IOrderHeaderRepository !
OrderHeaderRepository 0
{1 2
get3 6
;6 7
}8 9#
IOrderDetailsRepository "
OrderDetailsRepository 2
{3 4
get5 8
;8 9
}: ;"
IOrderStatusRepository !
OrderStatusRepository 0
{1 2
get3 6
;6 7
}8 9%
IStudentCommentRepository $
StudentCommentRepository 6
{7 8
get9 <
;< =
}> ?*
IStudentCourseStatusRepository ")
StudentCourseStatusRepository# @
{A B
getC F
;F G
}H I
IBalanceRepository 
BalanceRepository (
{) *
get+ .
;. /
}0 1"
ITransactionRepository   !
TransactionRepository   0
{  1 2
get  3 6
;  6 7
}  8 9%
ICourseBookmarkRepository!! $
CourseBookmarkRepository!! 6
{!!7 8
get!!9 <
;!!< =
}!!> ?%
ICourseProgressRepository"" $
CourseProgressRepository"" 6
{""7 8
get""9 <
;""< =
}""> ? 
ITermOfUseRepository## 
TermOfUseRepository## ,
{##- .
get##/ 2
;##2 3
}##4 5
ICompanyRepository$$ 
CompanyRepository$$ (
{$$) *
get$$+ .
;$$. /
}$$0 1
IPrivacyRepository%% 
PrivacyRepository%% (
{%%) *
get%%+ .
;%%. /
}%%0 1
Task'' 
<'' 	
int''	 
>'' 
	SaveAsync'' 
('' 
)'' 
;'' 
}(( ¨
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ITransactionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface "
ITransactionRepository '
:( )
IRepository* 5
<5 6
Transaction6 A
>A B
{ 
void 
Update	 
( 
Transaction 
transaction '
)' (
;( )
void 
UpdateRange	 
( 
IEnumerable  
<  !
Transaction! ,
>, -
transactions. :
): ;
;; <
}		 û
tD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ITermOfUseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface  
ITermOfUseRepository %
:& '
IRepository( 3
<3 4
	TermOfUse4 =
>= >
{ 
void 
Update	 
( 
	TermOfUse 
	termOfUse #
)# $
;$ %
void 
UpdateRange	 
( 
IEnumerable  
<  !
	TermOfUse! *
>* +

termOfUses, 6
)6 7
;7 8
}		 ∏

rD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IStudentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
IStudentRepository #
:$ %
IRepository& 1
<1 2
Student2 9
>9 :
{ 
void 
Update	 
( 
Student 
student 
)  
;  !
void 
UpdateRange	 
( 
IEnumerable  
<  !
Student! (
>( )
students* 2
)2 3
;3 4
Task		 
<		 	
Student			 
?		 
>		 
GetById		 
(		 
Guid		 
id		  "
)		" #
;		# $
Task

 
<

 	
Student

	 
>

 
AddAsync

 
(

 
Student

 "
student

# *
)

* +
;

+ ,
Task 
< 	
Student	 
? 
> 
GetByUserId 
( 
string %
id& (
)( )
;) *
} ‰
~D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IStudentCourseStatusRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface *
IStudentCourseStatusRepository /
:0 1
IRepository2 =
<= >
StudentCourseStatus> Q
>Q R
{ 
void 
Update	 
( 
StudentCourseStatus #
studentCourseStatus$ 7
)7 8
;8 9
void 
UpdateRange	 
( 
IEnumerable  
<  !
StudentCourseStatus! 4
>4 5 
studentCoursesStatus6 J
)J K
;K L
}		 ∫
xD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IStudentCourseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface $
IStudentCourseRepository )
:* +
IRepository, 7
<7 8
StudentCourse8 E
>E F
{ 
void 
Update	 
( 
StudentCourse 
studentCourse +
)+ ,
;, -
void 
UpdateRange	 
( 
IEnumerable  
<  !
StudentCourse! .
>. /
studentCourses0 >
)> ?
;? @
}		 ¡
yD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IStudentCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface %
IStudentCommentRepository *
:+ ,
IRepository- 8
<8 9
StudentComment9 G
>G H
{ 
void 
Update	 
( 
StudentComment 
studentComment -
)- .
;. /
void 
UpdateRange	 
( 
IEnumerable  
<  !
StudentComment! /
>/ 0
studentComments1 @
)@ A
;A B
}		 ÷
ÄD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ISectionDetailsVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface ,
 ISectionDetailsVersionRepository 1
:2 3
IRepository4 ?
<? @!
SectionDetailsVersion@ U
>U V
{ 
void 
Update	 
( !
SectionDetailsVersion %!
sectionDetailsVersion& ;
); <
;< =
void 
UpdateRange	 
( 
IEnumerable  
<  !!
SectionDetailsVersion! 6
>6 7"
sectionDetailsVersions8 N
)N O
;O P
Task

 
<

 	
List

	 
<

 !
SectionDetailsVersion

 #
>

# $
?

$ %
>

% &@
4GetSectionDetailsVersionsOfCourseSectionVersionAsync

' [
( 
Guid "
courseSectionVersionId #
,# $
bool 
? 
asNoTracking 
) 
; 
Task 
< 	!
SectionDetailsVersion	 
? 
>  (
GetSectionDetailsVersionById! =
(= >
Guid> B
	detailsIdC L
)L M
;M N
} Ó
kD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
IRepository 
< 
T 
> 
where  %
T& '
:( )
class* /
{ 
Task 
< 	
IEnumerable	 
< 
T 
> 
> 
GetAllAsync $
($ %

Expression% /
</ 0
Func0 4
<4 5
T5 6
,6 7
bool8 <
>< =
>= >
?> ?
filter@ F
=G H
nullI M
,M N
stringO U
?U V
includePropertiesW h
=i j
nullk o
)o p
;p q
Task 
< 	
T	 

?
 
> 
GetAsync 
( 

Expression  
<  !
Func! %
<% &
T& '
,' (
bool) -
>- .
>. /
filter0 6
,6 7
string8 >
?> ?
includeProperties@ Q
=R S
nullT X
)X Y
;Y Z
Task		 
AddAsync			 
(		 
T		 
entity		 
)		 
;		 
Task

 
AddRangeAsync

	 
(

 
IEnumerable

 "
<

" #
T

# $
>

$ %
entities

& .
)

. /
;

/ 0
void 
Remove	 
( 
T 
entity 
) 
; 
void 
RemoveRange	 
( 
IEnumerable  
<  !
T! "
>" #
entities$ ,
), -
;- .
} ë
rD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IPrivacyRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
IPrivacyRepository #
:$ %
IRepository& 1
<1 2
Privacy2 9
>9 :
{ 
void 
Update	 
( 
Privacy 
privacy 
)  
;  !
void 
UpdateRange	 
( 
IEnumerable  
<  !
Privacy! (
>( )
	privacies* 3
)3 4
;4 5
}		 ¨
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IOrderStatusRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface "
IOrderStatusRepository '
:( )
IRepository* 5
<5 6
OrderStatus6 A
>A B
{ 
void 
Update	 
( 
OrderStatus 
orderStatus '
)' (
;( )
void 
UpdateRange	 
( 
IEnumerable  
<  !
OrderStatus! ,
>, -
ordersStatus. :
): ;
;; <
}		 ¨
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IOrderHeaderRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface "
IOrderHeaderRepository '
:( )
IRepository* 5
<5 6
OrderHeader6 A
>A B
{ 
void 
Update	 
( 
OrderHeader 
orderHeader '
)' (
;( )
void 
UpdateRange	 
( 
IEnumerable  
<  !
OrderHeader! ,
>, -
orderHeaders. :
): ;
;; <
}		 ≥
wD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IOrderDetailsRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface #
IOrderDetailsRepository (
:) *
IRepository+ 6
<6 7
OrderDetails7 C
>C D
{ 
void 
Update	 
( 
OrderDetails 
orderDetails )
)) *
;* +
void 
UpdateRange	 
( 
IEnumerable  
<  !
OrderDetails! -
>- .
ordersDetails/ <
)< =
;= >
}		 ≥
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ILevelRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
ILevelRepository !
:" #
IRepository$ /
</ 0
Level0 5
>5 6
{ 
void 
Update	 
( 
Level 
level 
) 
; 
void 
UpdateRange	 
( 
IEnumerable  
<  !
Level! &
>& '
levels( .
). /
;/ 0
Task		 
<		 	
Level			 
>		 
GetLevelById		 
(		 
Guid		 !
levelId		" )
)		) *
;		* +
}

 ƒ

uD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IInstructorRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface !
IInstructorRepository &
:' (
IRepository) 4
<4 5

Instructor5 ?
>? @
{ 
void 
Update	 
( 

Instructor 

instructor %
)% &
;& '
void		 
UpdateRange			 
(		 
IEnumerable		  
<		  !

Instructor		! +
>		+ ,
instructors		- 8
)		8 9
;		9 :
Task

 
<

 	

Instructor

	 
?

 
>

 
GetById

 
(

 
Guid

 "
id

# %
)

% &
;

& '
Task 
< 	

Instructor	 
? 
> 
GetByUserId !
(! "
string" (
id) +
)+ ,
;, -
Task 
< 	!
IDbContextTransaction	 
> !
BeginTransactionAsync  5
(5 6
)6 7
;7 8
} ®
{D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IInstructorRatingRepository.cs
public 
	interface '
IInstructorRatingRepository ,
:- .
IRepository/ :
<: ;
InstructorRating; K
>K L
{ 
void 
Update	 
( 
InstructorRating  
instructorRating! 1
)1 2
;2 3
void 
UpdateRange	 
( 
IEnumerable  
<  !
InstructorRating! 1
>1 2
instructorRatings3 D
)D E
;E F
} ÷
|D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IInstructorCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface (
IInstructorCommentRepository -
:. /
IRepository0 ;
<; <
InstructorComment< M
>M N
{ 
void 
Update	 
( 
InstructorComment !
instructorComment" 3
)3 4
;4 5
void 
UpdateRange	 
( 
IEnumerable  
<  !
InstructorComment! 2
>2 3
instructorComments4 F
)F G
;G H
}		 Ù
xD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IEmailTemplateRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface $
IEmailTemplateRepository )
:* +
IRepository, 7
<7 8
EmailTemplate8 E
>E F
{ 
void 
Update	 
( 
EmailTemplate 
emailTemplate +
)+ ,
;, -
} ”
~D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseVersionStatusRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface *
ICourseVersionStatusRepository /
:0 1
IRepository2 =
<= >
CourseVersionStatus> Q
>Q R
{ 
void 
Update	 
( 
CourseVersionStatus #
courseVersionStatus$ 7
)7 8
;8 9
void 
UpdateRange	 
( 
IEnumerable  
<  !
CourseVersionStatus! 4
>4 5 
courseVersionsStatus6 J
)J K
;K L
Task		 
<		 	
CourseVersionStatus			 
?		 
>		 +
GetCourseVersionStatusByIdAsync		 >
(		> ?
Guid		? C!
courseVersionStatusId		D Y
)		Y Z
;		Z [
}

 ´

xD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface $
ICourseVersionRepository )
:* +
IRepository, 7
<7 8
CourseVersion8 E
>E F
{ 
void 
Update	 
( 
CourseVersion 
courseVersion +
)+ ,
;, -
void 
UpdateRange	 
( 
IEnumerable  
<  !
CourseVersion! .
>. /
courseVersions0 >
)> ?
;? @
Task		 
<		 	
CourseVersion			 
?		 
>		 !
GetCourseVersionAsync		 .
(		. /
Guid		/ 3
courseVersionId		4 C
,		C D
bool		E I
?		I J
asNoTracking		K W
)		W X
;		X Y
Task

 
<

 	
int

	 
>

 '
GetTotalCourseVersionsAsync

 )
(

) *
Guid

* .
?

. /
courseId

0 8
)

8 9
;

9 :
} ÿ
D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseVersionCommentRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface +
ICourseVersionCommentRepository 0
:1 2
IRepository3 >
<> ? 
CourseVersionComment? S
>S T
{ 
void 
Update	 
(  
CourseVersionComment $ 
courseVersionComment% 9
)9 :
;: ;
void 
UpdateRange	 
( 
IEnumerable  
<  ! 
CourseVersionComment! 5
>5 6!
courseVersionComments7 L
)L M
;M N
Task		 
<		 	 
CourseVersionComment			 
?		 
>		 '
GetCourseVersionCommentById		  ;
(		; <
Guid		< @"
courseversioncommentId		A W
)		W X
;		X Y
}

 ‹	
D:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseSectionVersionRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface +
ICourseSectionVersionRepository 0
:1 2
IRepository3 >
<> ? 
CourseSectionVersion? S
>S T
{ 
void 
Update	 
(  
CourseSectionVersion $ 
courseSectionVersion% 9
)9 :
;: ;
void 
UpdateRange	 
( 
IEnumerable  
<  ! 
CourseSectionVersion! 5
>5 6!
courseSectionVersions7 L
)L M
;M N
Task		 
<		 	
List			 
<		  
CourseSectionVersion		 "
>		" #
?		# $
>		$ %8
,GetCourseSectionVersionsOfCourseVersionAsync		& R
(		R S
Guid		S W
courseVersionId		X g
,		g h
bool		i m
?		m n
asNoTracking		o {
)		{ |
;		| }
}

 ·
wD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseReviewRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface #
ICourseReviewRepository (
:) *
IRepository+ 6
<6 7
CourseReview7 C
>C D
{ 
void 
Update	 
( 
CourseReview 
courseReview )
)) *
;* +
void 
UpdateRange	 
( 
IEnumerable  
<  !
CourseReview! -
>- .
courseReviews/ <
)< =
;= >
Task		 
<		 	
CourseReview			 
>		 
GetById		 
(		 
Guid		 #
id		$ &
)		& '
;		' (
}

 ◊
qD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
{		 
public

 

	interface

 
ICourseRepository

 &
:

' (
IRepository

) 4
<

4 5
Course

5 ;
>

; <
{ 
void 
Update 
( 
Course 
course !
)! "
;" #
void 
UpdateRange 
( 
IEnumerable $
<$ %
Course% +
>+ ,
courses- 4
)4 5
;5 6
Task 
< 
Course 
? 
> 
GetById 
( 
Guid "
courseId# +
)+ ,
;, -
} 
} ·
wD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseReportRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface #
ICourseReportRepository (
:) *
IRepository+ 6
<6 7
CourseReport7 C
>C D
{ 
void 
Update	 
( 
CourseReport 
courseReport )
)) *
;* +
void 
UpdateRange	 
( 
IEnumerable  
<  !
CourseReport! -
>- .
courseReports/ <
)< =
;= >
Task		 
<		 	
CourseReport			 
>		 
GetById		 
(		 
Guid		 #
id		$ &
)		& '
;		' (
}

 ¬
yD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseProgressRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface %
ICourseProgressRepository *
:+ ,
IRepository- 8
<8 9
CourseProgress9 G
>G H
{ 
void 
Update	 
( 
CourseProgress 
courseProgress -
)- .
;. /
void 
UpdateRange	 
( 
IEnumerable  
<  !
CourseProgress! /
>/ 0
courseProgresses1 A
)A B
;B C
}		 ¡
yD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICourseBookmarkRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface %
ICourseBookmarkRepository *
:+ ,
IRepository- 8
<8 9
CourseBookmark9 G
>G H
{ 
void 
Update	 
( 
CourseBookmark 
courseBookmark -
)- .
;. /
void 
UpdateRange	 
( 
IEnumerable  
<  !
CourseBookmark! /
>/ 0
courseBookmarks1 @
)@ A
;A B
}		 ë
rD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICompanyRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
ICompanyRepository #
:$ %
IRepository& 1
<1 2
Company2 9
>9 :
{ 
void 
Update	 
( 
Company 
company 
)  
;  !
void 
UpdateRange	 
( 
IEnumerable  
<  !
Company! (
>( )
	companies* 3
)3 4
;4 5
}		 œ
sD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICategoryRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
ICategoryRepository $
:$ %
IRepository& 1
<1 2
Category2 :
>: ;
{ 
void 
Update	 
( 
Category 
category !
)! "
;" #
void 
UpdateRange	 
( 
IEnumerable  
<  !
Category! )
>) *

categories+ 5
)5 6
;6 7
Task		 
<		 	
Category			 
>		  
GetCategoryByIdAsync		 '
(		' (
Guid		( ,
id		- /
)		/ 0
;		0 1
}

 •
uD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICartHeaderRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface !
ICartHeaderRepository &
:' (
IRepository) 4
<4 5

CartHeader5 ?
>? @
{ 
void 
Update	 
( 

CartHeader 

cartHeader %
)% &
;& '
void 
UpdateRange	 
( 
IEnumerable  
<  !

CartHeader! +
>+ ,
cartHeaders- 8
)8 9
;9 :
}		 ¨
vD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\ICartDetailsRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface "
ICartDetailsRepository '
:( )
IRepository* 5
<5 6
CartDetails6 A
>A B
{ 
void 
Update	 
( 
CartDetails 
cartDetails '
)' (
;( )
void 
UpdateRange	 
( 
IEnumerable  
<  !
CartDetails! ,
>, -
cartsDetails. :
): ;
;; <
}		 ê
rD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\IRepository\IBalanceRepository.cs
	namespace 	
Cursus
 
. 
LMS 
. 

DataAccess 
.  
IRepository  +
;+ ,
public 
	interface 
IBalanceRepository #
:$ %
IRepository& 1
<1 2
Balance2 9
>9 :
{ 
void 
Update	 
( 
Balance 
balance 
)  
;  !
void 
UpdateRange	 
( 
IEnumerable  
<  !
Balance! (
>( )
balances* 2
)2 3
;3 4
}		 †C
pD:\FPT\Semester 6\Project_Cursus\Backend_Cursus\Cursus.LMS\Cursus.LMS.DataAccess\Context\ApplicationDbContext.cs
	namespace		 	
Cursus		
 
.		 
LMS		 
.		 

DataAccess		 
.		  
Context		  '
;		' (
public 
class  
ApplicationDbContext !
:" #
IdentityDbContext$ 5
<5 6
ApplicationUser6 E
>E F
{ 
public 
 
ApplicationDbContext 
(  
DbContextOptions  0
<0 1 
ApplicationDbContext1 E
>E F
optionsG N
)N O
:P Q
baseR V
(V W
optionsW ^
)^ _
{ 
} 
	protected 
override 
void 
OnModelCreating +
(+ ,
ModelBuilder, 8
modelBuilder9 E
)E F
{ 
base 
. 
OnModelCreating 
( 
modelBuilder )
)) *
;* +$
ApplicationDbContextSeed  
.  !
SeedAdminAccount! 1
(1 2
modelBuilder2 >
)> ?
;? @$
ApplicationDbContextSeed  
.  !
SeedEmailTemplate! 2
(2 3
modelBuilder3 ?
)? @
;@ A$
ApplicationDbContextSeed  
.  !
SeedCompany! ,
(, -
modelBuilder- 9
)9 :
;: ;$
ApplicationDbContextSeed  
.  !
SeedPrivacy! ,
(, -
modelBuilder- 9
)9 :
;: ;$
ApplicationDbContextSeed  
.  !
SeedTermOfUse! .
(. /
modelBuilder/ ;
); <
;< =
} 
public 

DbSet 
< 
ApplicationUser  
>  !
ApplicationUsers" 2
{3 4
get5 8
;8 9
set: =
;= >
}? @
public 

DbSet 
< 
CartDetails 
> 
CartDetails )
{* +
get, /
;/ 0
set1 4
;4 5
}6 7
public 

DbSet 
< 

CartHeader 
> 
CartHeaders (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 

DbSet 
< 
Category 
> 

Categories %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public   

DbSet   
<   
Course   
>   
Courses    
{  ! "
get  # &
;  & '
set  ( +
;  + ,
}  - .
public!! 

DbSet!! 
<!! 
CourseReport!! 
>!! 
CourseReports!! ,
{!!- .
get!!/ 2
;!!2 3
set!!4 7
;!!7 8
}!!9 :
public"" 

DbSet"" 
<"" 
CourseReview"" 
>"" 
CourseReviews"" ,
{""- .
get""/ 2
;""2 3
set""4 7
;""7 8
}""9 :
public## 

DbSet## 
<## 

Instructor## 
>## 
Instructors## (
{##) *
get##+ .
;##. /
set##0 3
;##3 4
}##5 6
public$$ 

DbSet$$ 
<$$ 
Level$$ 
>$$ 
Levels$$ 
{$$  
get$$! $
;$$$ %
set$$& )
;$$) *
}$$+ ,
public%% 

DbSet%% 
<%% 
OrderDetails%% 
>%% 
OrderDetails%% +
{%%, -
get%%. 1
;%%1 2
set%%3 6
;%%6 7
}%%8 9
public&& 

DbSet&& 
<&& 
OrderHeader&& 
>&& 
OrderHeaders&& *
{&&+ ,
get&&- 0
;&&0 1
set&&2 5
;&&5 6
}&&7 8
public'' 

DbSet'' 
<'' 
Student'' 
>'' 
Students'' "
{''# $
get''% (
;''( )
set''* -
;''- .
}''/ 0
public(( 

DbSet(( 
<(( 
StudentCourse(( 
>(( 
StudentCourses((  .
{((/ 0
get((1 4
;((4 5
set((6 9
;((9 :
}((; <
public)) 

DbSet)) 
<)) 
InstructorComment)) "
>))" #
InstructorComments))$ 6
{))7 8
get))9 <
;))< =
set))> A
;))A B
}))C D
public** 

DbSet** 
<** 
InstructorRating** !
>**! "
InstructorRatings**# 4
{**5 6
get**7 :
;**: ;
set**< ?
;**? @
}**A B
public++ 

DbSet++ 
<++ 
EmailTemplate++ 
>++ 
EmailTemplates++  .
{++/ 0
get++1 4
;++4 5
set++6 9
;++9 :
}++; <
public,, 

DbSet,, 
<,, 
CourseVersion,, 
>,, 
CourseVersions,,  .
{,,/ 0
get,,1 4
;,,4 5
set,,6 9
;,,9 :
},,; <
public-- 

DbSet-- 
<--  
CourseSectionVersion-- %
>--% &!
CourseSectionVersions--' <
{--= >
get--? B
;--B C
set--D G
;--G H
}--I J
public.. 

DbSet.. 
<.. !
SectionDetailsVersion.. &
>..& '"
SectionDetailsVersions..( >
{..? @
get..A D
;..D E
set..F I
;..I J
}..K L
public// 

DbSet// 
<// 
CourseVersionStatus// $
>//$ %
CourseVersionStatus//& 9
{//: ;
get//< ?
;//? @
set//A D
;//D E
}//F G
public00 

DbSet00 
<00  
CourseVersionComment00 %
>00% &!
CourseVersionComments00' <
{00= >
get00? B
;00B C
set00D G
;00G H
}00I J
public11 

DbSet11 
<11 
StudentComment11 
>11  
StudentComments11! 0
{111 2
get113 6
;116 7
set118 ;
;11; <
}11= >
public22 

DbSet22 
<22 
OrderStatus22 
>22 
OrdersStatus22 *
{22+ ,
get22- 0
;220 1
set222 5
;225 6
}227 8
public33 

DbSet33 
<33 
StudentCourseStatus33 $
>33$ % 
StudentCoursesStatus33& :
{33; <
get33= @
;33@ A
set33B E
;33E F
}33G H
public44 

DbSet44 
<44 
Balance44 
>44 
Balances44 "
{44# $
get44% (
;44( )
set44* -
;44- .
}44/ 0
public55 

DbSet55 
<55 
Transaction55 
>55 
Transactions55 *
{55+ ,
get55- 0
;550 1
set552 5
;555 6
}557 8
public66 

DbSet66 
<66 
CourseBookmark66 
>66  
CourseBookmarks66! 0
{661 2
get663 6
;666 7
set668 ;
;66; <
}66= >
public77 

DbSet77 
<77 
CourseProgress77 
>77  
CourseProgresses77! 1
{772 3
get774 7
;777 8
set779 <
;77< =
}77> ?
public88 

DbSet88 
<88 
Company88 
>88 
	Companies88 #
{88$ %
get88& )
;88) *
set88+ .
;88. /
}880 1
public99 

DbSet99 
<99 
Privacy99 
>99 
	Privacies99 #
{99$ %
get99& )
;99) *
set99+ .
;99. /
}990 1
public:: 

DbSet:: 
<:: 
	TermOfUse:: 
>:: 

TermOfUses:: &
{::' (
get::) ,
;::, -
set::. 1
;::1 2
}::3 4
};; 